[
  {
    "repository": "ChangeCommerce.Stores.API",
    "commit_hash": "2ef3bc5",
    "original_message": "Fixes to ExperienceActive experiences",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "src/ChangeCommerce.Stores.API/Controllers/StoreController.cs",
        "summary": "",
        "additions": [],
        "removals": [
          "// IsExperienceActive should be same as IsActive. i.e: If a store's active, then both values are true,",
          "// whereas if a store's is deactivated, both values are false.",
          "IsExperienceActive = setIsActiveRequest.IsActive,"
        ],
        "impact": "minor"
      },
      {
        "file": "src/ChangeCommerce.Stores.CommandHandlers/SetIsActiveCommandHandler.cs",
        "summary": "",
        "additions": [
          "IsExperienceActive = command.IsActive ? null : (bool?)false"
        ],
        "removals": [
          "IsExperienceActive = command.IsExperienceActive"
        ],
        "impact": "minor"
      },
      {
        "file": "src/ChangeCommerce.Stores.Commands/SetIsActiveCommand.cs",
        "summary": "",
        "additions": [],
        "removals": [
          "public bool IsExperienceActive { get; set; }"
        ],
        "impact": "minor"
      },
      {
        "file": "src/ChangeCommerce.Stores.GlobalEventHandlers/SubscriptionsGlobalEventHandler.cs",
        "summary": "",
        "additions": [
          "IsActive = false",
          "IsActive = false"
        ],
        "removals": [
          "IsActive = false,",
          "IsExperienceActive = false,",
          "IsActive = false,",
          "IsExperienceActive = false,"
        ],
        "impact": "moderate"
      },
      {
        "file": "src/ChangeCommerce.Stores.GlobalEvents/IsActiveSetEvent.cs",
        "summary": "",
        "additions": [
          "public bool? IsExperienceActive { get; set; }"
        ],
        "removals": [
          "public bool IsExperienceActive { get; set; }"
        ],
        "impact": "minor"
      },
      {
        "file": "src/ChangeCommerce.Stores.Models/StoreAggregate.cs",
        "summary": "",
        "additions": [
          "//Stores should have to manually unpause giving after activating. Default switched to false. Past cases handled.",
          "this.IsExperienceActive = false;",
          "if (@event.IsExperienceActive.HasValue)",
          "{",
          "this.IsExperienceActive = @event.IsExperienceActive.Value;",
          "}"
        ],
        "removals": [
          "this.IsExperienceActive = true;",
          "this.IsExperienceActive = @event.IsExperienceActive;"
        ],
        "impact": "moderate"
      },
      {
        "file": "src/ChangeCommerce.Stores.ReadStore/QueryRepos/StoreChangeCommQuery.cs",
        "summary": "",
        "additions": [
          "var isActive = (bool)reader[\"is_active\"];",
          "IsExperienceActive = isActive ? (bool) reader[\"is_experience_active\"] : false,",
          "IsActive = isActive,"
        ],
        "removals": [
          "IsExperienceActive = (bool) reader[\"is_experience_active\"],",
          "IsActive = (bool) reader[\"is_active\"],"
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "1200f23",
    "original_message": "Use the vendored JS SDK",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/src/index.tsx",
        "summary": "",
        "additions": [
          "0,",
          "(x) => x.donation !== data.donationBreakdown[0].donation,",
          "},",
          "loadMore: boolean = false,",
          "category,",
          "loadMore: boolean = false,",
          "loadMore,"
        ],
        "removals": [
          "0",
          "(x) => x.donation !== data.donationBreakdown[0].donation",
          "}",
          "loadMore: boolean = false",
          "category",
          "loadMore: boolean = false",
          "loadMore"
        ],
        "impact": "moderate"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "61dca93",
    "original_message": "Format the vendored SDK",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/vendor/shopping-gives.js",
        "summary": "",
        "additions": [
          "var Xe = (a, e, t) =>",
          "e in a",
          "? Ye(a, e, { enumerable: !0, configurable: !0, writable: !0, value: t })",
          ": (a[e] = t);",
          "if (typeof a != \"string\") return !1;",
          "if (e.length !== 32) return !1;",
          "return (t.lastIndex = 0), t.test(e);",
          "for (const i of t) if (i.id == e) return this.getQueryParams(i.src);",
          "if (document.currentScript) return document.currentScript;",
          "if (document._currentScript) return document._currentScript();",
          "} catch {}",
          "if (",
          "(document.scripts[t].src.indexOf(\"shoppinggives.com\") >= 0 ||",
          "document.scripts[t].src.indexOf(\"../\") >= 0 ||",
          "document.scripts[t].src.indexOf(\"http://localhost\") >= 0) &&",
          "(!e || document.scripts[t].src.indexOf(e) >= 0)",
          ")",
          "if (((e = e.split(\"?\")[1]), !e)) return {};",
          "let t = e.split(\"&\"),",
          "i = {};",
          "portfolioIds: [],",
          "return (",
          "a.forEach((i) => {",
          "i.match(e) ? t.charityIds.push(i) : t.portfolioIds.push(i);",
          "}),",
          "t",
          ");",
          "var et = /* @__PURE__ */ ((a) => (",
          "(a.Dev = \"dev\"),",
          "(a.QA = \"qa\"),",
          "(a.Staging = \"staging1\"),",
          "(a.Production = \"prod\"),",
          "a",
          "))(et || {}),",
          "ee = /* @__PURE__ */ ((a) => (",
          "(a[(a.Default = 1)] = \"Default\"),",
          "(a[(a.Searched = 2)] = \"Searched\"),",
          "(a[(a.Featured = 3)] = \"Featured\"),",
          "a",
          "))(ee || {}),",
          "te = /* @__PURE__ */ ((a) => (",
          "(a.Klaviyo = \"klaviyo\"), (a.Yotpo = \"yotpo\"), a",
          "))(te || {}),",
          "we = /* @__PURE__ */ ((a) => (",
          "(a[(a.Percentage = 0)] = \"Percentage\"), (a[(a.Flat = 1)] = \"Flat\"), a",
          "))(we || {}),",
          "me = /* @__PURE__ */ ((a) => ((a.USD = \"USD\"), a))(me || {});",
          "e.id && Ze(e.id) && (t = !0),",
          "(this.isPortfolio = t),",
          "(this.id = (i = e.ein) != null ? i : e.id),",
          "(this.name = e.name),",
          "(this.website = e.website),",
          "(this.logoUrl = e.logoUrl),",
          "(this.streetAddress = e.streetAddress),",
          "(this.city = e.city),",
          "(this.state = e.state),",
          "(this.zip = e.zip),",
          "(this.description = e.description),",
          "(this.multiplier = e.multiplier),",
          "(this.categoryId = e.categoryId),",
          "(this.categoryName = e.categoryName),",
          "(this.categoryLogoUrl = e.categoryLogoUrl),",
          "(this.headline = e.headline),",
          "(this.bannerUrl = e.imageUrl),",
          "(this.portfolioCharities = e.charities",
          "? e.charities",
          ": e.portfolioCharities),",
          "(this.default = e.default);",
          "(this.causeId = e.CauseId), (this.causeName = e.CauseName);",
          "(this.id = e),",
          "(this.isActive = t),",
          "(this.name = i),",
          "(this.excludeSegment = o),",
          "(this.frontEndPropertyName = s),",
          "(this.frontEndSource = n),",
          "(this.priorityIndex = u),",
          "(this.valueCategory = g),",
          "(this.backEndPropertyName = f),",
          "(this.description = v),",
          "(this.donationAction = S),",
          "(this.donationActionValue = c),",
          "(this.specifiedValues = d);",
          "(this.id = t),",
          "(this.activeCampaigns = e.ActiveCampaigns),",
          "(this.addressInformation = e.AddressInformation),",
          "(this.cmsMetaData = e.CMSMetaData),",
          "(this.causeMultipliers = e.CauseMultipliers),",
          "(this.contactInformation = e.ContactInformation),",
          "(this.customCSS = e.CustomCSS),",
          "(this.defaultCauseId = e.DefaultCauseId),",
          "(this.defaultCauseIds = e.DefaultCauseIds || []),",
          "(this.defaultDonation = e.DefaultDonation),",
          "(this.defaultDonationType = e.DefaultDonationType),",
          "(this.featuredCauseIds = e.FeaturedCauseIds || []),",
          "(this.isActive = e.IsActive),",
          "(this.isEmbeddedConfirmation = e.IsEmbeddedConfirmation),",
          "(this.isExperienceActive = e.IsExperienceActive),",
          "(this.letShoppersChoose = e.LetShoppersChoose),",
          "(this.metaData = e.MetaData),",
          "(this.name = e.Name),",
          "(this.previewWidget = e.PreviewWidget),",
          "(this.primaryCurrency = e.PrimaryCurrency),",
          "(this.roundupPreviewWidget = e.RoundupPreviewWidget),",
          "(this.searchEnabled = e.SearchEnabled),",
          "(this.targetCssSelector = e.TargetCssSelector),",
          "(this.segments = this.formatSegments(e.CustomerSegments));",
          "return e == null",
          "? []",
          ": e.map(",
          "(t) =>",
          "new it(",
          "t.Id,",
          "t.IsActive,",
          "t.Name,",
          "t.ExcludeSegment,",
          "t.FrontEndPropertyName,",
          "t.FrontEndSource,",
          "t.PriorityIndex,",
          "t.ValueCategory,",
          "t == null ? void 0 : t.BackEndPropertyName,",
          "t == null ? void 0 : t.Description,",
          "t == null ? void 0 : t.DonationAction,",
          "t == null ? void 0 : t.DonationActionValue,",
          "t == null ? void 0 : t.SpecifiedValues,",
          "),",
          ");",
          "constructor() {}",
          "r(",
          "this,",
          "\"baseCategoryCdnUrl\",",
          "\"https://cdn.shoppinggives.com/charity-logos/categories/\",",
          ");",
          "25: \"Other.svg\",",
          "return (",
          "e.forEach((t) => {",
          "(!t.logoUrl || t.logoUrl.includes(\"paypal\")) && !t.shortKey",
          "? (t.logoUrl = `${this.baseCategoryCdnUrl}${this.categories[t.categoryId]}`)",
          ": t.shortKey &&",
          "t.charities.forEach((i) => {",
          "i.logoUrl ||",
          "(i.logoUrl = `${this.baseCategoryCdnUrl}${this.categories[i.categoryId]}`);",
          "});",
          "}),",
          "e",
          ");",
          "this.events[e] ? this.events[e].push(t) : (this.events[e] = [t]);",
          "return (",
          "this.events[e] &&",
          "(this.events[e].forEach((o) => {",
          "o.call(null, [t][0]);",
          "}),",
          "(i = !0)),",
          "i",
          ");",
          "if (de) return de;",
          "(this.events = {}), (de = this);",
          "constructor() {}",
          "if (t) return JSON.parse(t);",
          "(this.type = e), (this.message = t), (this.data = i);",
          "if (",
          "!(await this.eventEmitter.emit(\"SDK::Error\", {",
          "type: e,",
          "message: t,",
          "data: i,",
          "}))",
          ")",
          "(this.customData = e), (this.logger = new $e());",
          "let t = [],",
          "i = new Qe().getCurrentScriptUrlParams();",
          "if (t.length > 0 || !s.isActive) return;",
          "(n = window[s.frontEndPropertyName]),",
          "this.logger.debug(`input value: ${n}`);",
          "s.frontEndPropertyName.includes(\".\")",
          "? ((n = this.extractValue(s.frontEndPropertyName, !0)),",
          "this.logger.debug(`input value: ${n}`))",
          ": ((n = this.extractValue(s.frontEndPropertyName)),",
          "this.logger.debug(`input value: ${n}`));",
          "(n = i[s.frontEndPropertyName]),",
          "this.logger.debug(`input value: ${n}`);",
          "(n = i[s.frontEndPropertyName]),",
          "this.logger.debug(`input value: ${n}`);",
          "(n == null || n == null || n == \"\") &&",
          "t.push(this.formatSegmentData(s));",
          "n != null &&",
          "n !== \"\" &&",
          "n.length != 0 &&",
          "t.push(this.formatSegmentData(s));",
          "n.length ==",
          "((u = s == null ? void 0 : s.specifiedValues) == null",
          "? void 0",
          ": u.length) &&",
          "(n.map((c) => {",
          "var d;",
          "(d = s == null ? void 0 : s.specifiedValues) != null &&",
          "d.includes(c)",
          "? (this.logger.debug(",
          "`does ${s.specifiedValues} include ${c}? - true`,",
          "),",
          "S.push(!0))",
          ": (this.logger.debug(",
          "`does ${s.specifiedValues} include ${c}? - false`,",
          "),",
          "S.push(!1));",
          "}),",
          "S.indexOf(!1) == -1 && t.push(this.formatSegmentData(s)));",
          "((g = s == null ? void 0 : s.specifiedValues) == null",
          "? void 0",
          ": g.length) == 1 &&",
          "s.specifiedValues[0] == n &&",
          "t.push(this.formatSegmentData(s));",
          "n.length ==",
          "((f = s == null ? void 0 : s.specifiedValues) == null",
          "? void 0",
          ": f.length) &&",
          "(n.map((c) => {",
          "var d;",
          "this.logger.debug(`does ${s.specifiedValues} equal ${c}?`),",
          "(d = s == null ? void 0 : s.specifiedValues) != null &&",
          "d.includes(c)",
          "? S.push(!0)",
          ": S.push(!1);",
          "}),",
          "S.indexOf(!1) == -1 && t.push(this.formatSegmentData(s)));",
          "((v = s == null ? void 0 : s.specifiedValues) == null",
          "? void 0",
          ": v.length) == 1 &&",
          "s.specifiedValues[0] == n &&",
          "t.push(this.formatSegmentData(s));",
          "this.logger.error(\"unable to process customer segments\", { error: s }),",
          "(t = []);",
          "return (",
          "t[0]",
          "? this.logger.debug(",
          "`returning selected segment (id): ${(o = t[0]) == null ? void 0 : o.id}`,",
          ")",
          ": this.logger.debug(\"no segments have passed the rule checks!\"),",
          "t[0] || { excludeSegment: !1 }",
          ");",
          "excludeSegment: e.excludeSegment,",
          "let i =",
          "Object.entries(this.customData).length > 0",
          "? [this.customData]",
          ": window.dataLayer,",
          "o = null;",
          "return (",
          "t ? (o = this.getNestedPropByPath(i, e)) : (o = this.getNestedProp(i, e)),",
          "o",
          ");",
          "for (",
          "let o = 0;",
          "o < e.length && ((i = this.getNestedProp(e[o], t)), !i);",
          "o++",
          ");",
          "if (o == t) return e[o];",
          "if (",
          "(e[o] instanceof Object || Array.isArray(e[o])) &&",
          "((i = this.getNestedProp(e[o], t)), i)",
          ")",
          "let i = null,",
          "o = t.split(\".\");",
          "for (",
          "let s = 0;",
          "s < e.length && ((i = o.reduce((n, u) => n && n[u], e[s])), !i);",
          "s++",
          ");",
          "const ht = new Me(),",
          "lt = \"https://cdn.shoppinggives.com/charity-logos/categories/\";",
          "(this.id = e.ein),",
          "(this.name = e.name),",
          "(this.website = e.website),",
          "(this.logoUrl = e.logoUrl",
          "? e.logoUrl",
          ": `${lt}${ht.categories[e.categoryId]}`),",
          "(this.streetAddress = e.streetAddress),",
          "(this.city = e.city),",
          "(this.state = e.state),",
          "(this.zip = e.zip),",
          "(this.description = e.description),",
          "(this.categoryId = e.categoryId),",
          "(this.categoryName = e.categoryName),",
          "(this.categoryLogoUrl = e.categoryLogoUrl),",
          "(this.nteeFullCode = e.nteeFullCode),",
          "(this.nteeMainCode = e.nteeMainCode),",
          "(this.nteeSubCode = e.nteeSubCode);",
          "roundUpPos: 7,",
          "(this.onlinePurchase =",
          "((t = e.find((f) => f.Id === N.onlinePurchase)) == null",
          "? void 0",
          ": t.IsActive) || !1),",
          "(this.yotpoRedemption =",
          "((i = e.find((f) => f.Id === N.yotpoRedemption)) == null",
          "? void 0",
          ": i.IsActive) || !1),",
          "(this.roundUpDonation =",
          "((o = e.find((f) => f.Id === N.roundUpDonation)) == null",
          "? void 0",
          ": o.IsActive) || !1),",
          "(this.addOnDonation =",
          "((s = e.find((f) => f.Id === N.addOnDonation)) == null",
          "? void 0",
          ": s.IsActive) || !1),",
          "(this.pointOfSale =",
          "((n = e.find((f) => f.Id === N.pointOfSale)) == null",
          "? void 0",
          ": n.IsActive) || !1),",
          "(this.postPurchaseDonation =",
          "((u = e.find((f) => f.Id === N.postPurchaseDonation)) == null",
          "? void 0",
          ": u.IsActive) || !1),",
          "(this.roundUpPos =",
          "((g = e.find((f) => f.Id === N.roundUpPos)) == null",
          "? void 0",
          ": g.IsActive) || !1);",
          "this.cmsIds.push({",
          "id: n.id,",
          "price: n.price,",
          "quantity: n.quantity,",
          "discount: n.discount,",
          "});",
          "(this.cartDiscount = t),",
          "(this.providedCauseId = i.toString()),",
          "(this.ignoreDirectDonations = o),",
          "(this.customerSegmentId = s);",
          "(this.donationRecipients = e.donationRecipients),",
          "(this.lineItems = (t = e.lineItems) != null ? t : []),",
          "(this.totalDonationAmount = pt(e)),",
          "(this.showWidget = this.totalDonationAmount > 0);",
          "const ut = (a) => a.reduce((e, t) => e + t.totalDonationValue, 0),",
          "pt = (a) => {",
          "var t;",
          "let e = 0;",
          "return (",
          "(t = a.lineItems) != null && t.length && (e += ut(a.lineItems)),",
          "a.cartDonation && (e += a.cartDonation.totalDonationValue),",
          "e",
          ");",
          "};",
          "(this.cmsId = e),",
          "(this.realPrice = t),",
          "(this.providedCauseId = i),",
          "(this.customerSegmentId = o != null ? o : \"\");",
          "(this.totalDonationAmount = e.result.totalDonationValue),",
          "(this.donationRecipients = e.result.portfolioId",
          "? { [e.result.portfolioId]: e.result.totalDonationValue }",
          ": e.result.donations),",
          "(this.excluded = e.result.excluded),",
          "(this.donationType = e.result.donationType);",
          "(this.totalDonationAmount = e.totalDonationAmount),",
          "(this.showWidget = e.showWidget),",
          "(this.donationBreakdown = (t = e.donationBreakdown) != null ? t : []),",
          "(this.charities = (i = e.charities) != null ? i : []),",
          "(this.selectedCauses = (o = e.selectedCauses) != null ? o : []),",
          "(this.activeCampaigns = new He(e.activeCampaigns)),",
          "(this.searchEnabled = e.searchEnabled),",
          "(this.letShoppersChoose = e.letShoppersChoose),",
          "(this.trackingId = e.trackingId),",
          "(this.directDonationInCart =",
          "(s = e.directDonationInCart) != null ? s : !1),",
          "(this.storeName = e.storeName);",
          "(this.totalDonationAmount = e.totalDonationAmount),",
          "(this.donationBreakdown = (t = e.donationBreakdown) != null ? t : []),",
          "(this.charities = (i = e.charities) != null ? i : []),",
          "(this.selectedCauses = (o = e.selectedCauses) != null ? o : []),",
          "(this.directDonationInCart =",
          "(s = e.directDonationInCart) != null ? s : !1);",
          "(this.totalDonationAmount = e.totalDonationAmount),",
          "(this.donationBreakdown = e.donationBreakdown),",
          "(this.charities = e.charities),",
          "(this.selectedCauses = e.selectedCauses),",
          "(this.excluded = e.excluded);",
          "GET: \"get\",",
          "POST: \"post\",",
          "DELETE: \"delete\",",
          "PUT: \"put\",",
          "},",
          "O = {",
          "STORES: \"stores\",",
          "PRODUCTS: \"products\",",
          "USERS: \"users\",",
          "CUSTOMER_SEGMENTS: \"customer_segments\",",
          "SCHEDULER: \"scheduler\",",
          "RECEIVABLES: \"receivables\",",
          "POST_PURCHASE_DONATIONS: \"post_purchase_donations\",",
          "ORGANIZATIONS: \"organizations\",",
          "SHOPIFY: \"shopify\",",
          "INTEGRATIONS: \"integrations\",",
          "EXTERNAL_REPORTS: \"external_reports\",",
          "DONATIONS: \"donations\",",
          "CHARITIES_CMD: \"charities_cdm\",",
          "CHARITIES: \"charities\",",
          "CDN: \"cdn\",",
          "PORTFOLIOS: \"portfolios\",",
          "REPORTING: \"reporting\",",
          "CONVERSIONS: \"conversions\",",
          "CUSTOMIZATIONS: \"customizations\",",
          "LOCATIONS: \"locations\",",
          "BANNERS: \"banners\",",
          "TRACKING: \"tracking\",",
          "};",
          "(this.proxyUrl = `https://sdk.${o}shoppinggives.com/authorize`),",
          "(this.baseUrl = `https://tracking.api.${o}shoppinggives.com`),",
          "(this.storeId = e),",
          "(this.errorHandler = i),",
          "(this.useProxy = !1);",
          "return (",
          "this.useProxy",
          "? (o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify({",
          "method: T.POST,",
          "service: O.TRACKING,",
          "endpoint: \"/\",",
          "data: {",
          "body: { storeId: e, isTestMode: t, isForceTestMode: i },",
          "},",
          "}),",
          "}).then((s) => s.json()))",
          ": (o = await fetch(`${this.baseUrl}/`, {",
          "method: \"POST\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify({",
          "storeId: e,",
          "isTestMode: t,",
          "isForceTestMode: i,",
          "}),",
          "}).then((s) => s.json())),",
          "o",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error starting tracking\",",
          "o,",
          "),",
          "{}",
          ");",
          "return (",
          "this.useProxy",
          "? (s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify({",
          "method: T.PUT,",
          "service: O.TRACKING,",
          "endpoint: `${o}`,",
          "data: {",
          "body: { causeId: t, causeName: i },",
          "},",
          "}),",
          "}).then((n) => n.json()))",
          ": (s = await fetch(`${this.baseUrl}${o}`, {",
          "method: \"PUT\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify({ causeId: t, causeName: i }),",
          "}).then((n) => n.json())),",
          "s",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error updating tracking\",",
          "o,",
          "),",
          "!1",
          ");",
          "return (",
          "this.useProxy",
          "? (i = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.TRACKING,",
          "endpoint: `${t}`,",
          "}),",
          "}).then((o) => o.json()))",
          ": (i = await fetch(`${this.baseUrl}${t}`, {",
          "method: \"GET\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "}).then((o) => o.json())),",
          "i",
          ");",
          "return (",
          "this.useProxy",
          "? (s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify({",
          "method: T.PUT,",
          "service: O.TRACKING,",
          "endpoint: `${o}`,",
          "data: {",
          "body: { integrationType: t, info: { ...i } },",
          "},",
          "}),",
          "}).then((n) => n.json()))",
          ": (s = await fetch(`${this.baseUrl}${o}`, {",
          "method: \"PUT\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify({",
          "integrationType: t,",
          "info: { ...i },",
          "}),",
          "}).then((n) => n.json())),",
          "s",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error updating integration metadata\",",
          "o,",
          "),",
          "!1",
          ");",
          "(this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`),",
          "(this.baseUrl = `https://stores.api.${s}shoppinggives.com`),",
          "(this.storeId = e),",
          "(this.cache = i),",
          "(this.errorHandler = o),",
          "(this.useProxy = !1);",
          "return (",
          "this.useProxy",
          "? (t = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.STORES,",
          "endpoint: `${e}`,",
          "data: {},",
          "}),",
          "}).then((i) => i.json()))",
          ": (t = await fetch(`${this.baseUrl}${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId },",
          "}).then((i) => i.json())),",
          "new Ne(t, this.storeId)",
          ");",
          "return (",
          "console.log(e),",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error retrieving store\",",
          "e,",
          "),",
          "{}",
          ");",
          "(this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`),",
          "(this.baseUrl = `https://products.api.${s}shoppinggives.com`),",
          "(this.storeId = e),",
          "(this.cache = i),",
          "(this.errorHandler = o),",
          "(this.useProxy = !1);",
          "const o = \"/donation-by-cms-id\",",
          "s = JSON.stringify(t);",
          "return (",
          "n ||",
          "(this.useProxy",
          "? (n = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.PRODUCTS,",
          "endpoint: `${o}`,",
          "data: {",
          "params: {",
          "cmsId: t.cmsId,",
          "realPrice: t.realPrice,",
          "providedCauseId: t.providedCauseId",
          "? t.providedCauseId",
          ": null,",
          "customerSegmentId:",
          "(i = t.customerSegmentId) != null ? i : null,",
          "},",
          "},",
          "}),",
          "}).then((u) => u.json()))",
          ": (n = await fetch(`${this.baseUrl}${o}?${new URLSearchParams(t)}`, {",
          "method: \"GET\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "}).then((u) => u.json())),",
          "this.cache.set(s, n),",
          "n)",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error retrieving product donation\",",
          "o,",
          "),",
          "{}",
          ");",
          "const i = \"/get-multiple-donation\",",
          "o = JSON.stringify(t);",
          "const {",
          "cmsIds: n,",
          "cartDiscount: u,",
          "ignoreDirectDonations: g,",
          "providedCauseId: f,",
          "customerSegmentId: v,",
          "} = t;",
          "return (",
          "s ||",
          "(this.useProxy",
          "? (s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.POST,",
          "service: O.PRODUCTS,",
          "endpoint: `${i}`,",
          "data: {",
          "body: {",
          "cmsIds: n,",
          "cartDiscount: u,",
          "ignoreDirectDonations: g,",
          "providedCauseId: f,",
          "customerSegmentId: v != null ? v : null,",
          "},",
          "},",
          "}),",
          "}).then((S) => S.json()))",
          ": (s = await fetch(`${this.baseUrl}${i}`, {",
          "method: \"POST\",",
          "headers: {",
          "\"x-store-id\": this.storeId,",
          "\"Content-Type\": \"application/json\",",
          "},",
          "body: JSON.stringify(t),",
          "}).then((S) => S.json())),",
          "this.cache.set(o, s),",
          "s)",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error retrieving cart donation\",",
          "i,",
          "),",
          "{}",
          ");",
          "(this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`),",
          "(this.baseUrl = `https://charities.api.${s}shoppinggives.com`),",
          "(this.cache = t),",
          "(this.errorHandler = i),",
          "(this.storeId = o),",
          "(this.useProxy = !1);",
          "const t = \"/search\",",
          "searchTerm: i,",
          "skip: o,",
          "take: s,",
          "zip: n,",
          "city: u,",
          "state: g,",
          "category: f,",
          "} = e,",
          "v = JSON.stringify(e);",
          "let S = await this.cache.get(v);",
          "return (",
          "S ||",
          "(this.useProxy",
          "? (S = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.CHARITIES,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "skip: o,",
          "take: s,",
          "q: i != null ? i : null,",
          "zip: n != null ? n : null,",
          "city: u != null ? u : null,",
          "state: g != null ? g : null,",
          "categoryId: f != null ? f : null,",
          "},",
          "},",
          "}),",
          "}).then((c) => c.json()))",
          ": (S = await fetch(",
          "`${this.baseUrl}${t}?` +",
          "new URLSearchParams({",
          "q: `${i != null ? i : \"\"}`,",
          "skip: `${o}`,",
          "take: `${s}`,",
          "zip: `${n != null ? n : \"\"}`,",
          "city: `${u != null ? u : \"\"}`,",
          "state: `${g != null ? g : \"\"}`,",
          "categoryId: `${f != null ? f : \"\"}`,",
          "}),",
          "{",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId },",
          "},",
          ").then((c) => c.json())),",
          "this.cache.set(v, S),",
          "S)",
          ");",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error searching charities\",",
          "t,",
          ");",
          "const t = \"/search-by-eins\",",
          "i = e;",
          "return (",
          "o ||",
          "(this.useProxy",
          "? (o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.CHARITIES,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "eins: e,",
          "},",
          "},",
          "}),",
          "}).then((s) => s.json()))",
          ": (o = await fetch(`${this.baseUrl}${t}?eins=${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId },",
          "}).then((s) => s.json())),",
          "this.cache.set(i, o),",
          "o)",
          ");",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error retrieving charities by EIN\",",
          "t,",
          ");",
          "(this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`),",
          "(this.baseUrl = `https://portfolios.api.${s}shoppinggives.com`),",
          "(this.cache = t),",
          "(this.errorHandler = i),",
          "(this.storeId = o),",
          "(this.useProxy = !1);",
          "const t = \"/cc-query-with-charities\",",
          "i = e;",
          "return (",
          "o ||",
          "(this.useProxy",
          "? (o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.PORTFOLIOS,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "id: e,",
          "},",
          "},",
          "}),",
          "}).then((s) => s.json()))",
          ": (o = await fetch(`${this.baseUrl}${t}?id=${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId },",
          "}).then((s) => s.json())),",
          "this.cache.set(i, o),",
          "o)",
          ");",
          "this.errorHandler.throw(",
          "\"ShoppingGivesApiError\",",
          "\"Error retrieving portfolios\",",
          "t,",
          ");",
          "var yt =",
          "typeof globalThis < \"u\"",
          "? globalThis",
          ": typeof window < \"u\"",
          "? window",
          ": typeof global < \"u\"",
          "? global",
          ": typeof self < \"u\"",
          "? self",
          ": {},",
          "fe = { exports: {} };",
          "(function (a, e) {",
          "(function (t, i) {",
          "var o = \"1.0.40\",",
          "s = \"\",",
          "n = \"?\",",
          "u = \"function\",",
          "g = \"undefined\",",
          "f = \"object\",",
          "v = \"string\",",
          "S = \"major\",",
          "c = \"model\",",
          "d = \"name\",",
          "h = \"type\",",
          "l = \"vendor\",",
          "p = \"version\",",
          "A = \"architecture\",",
          "j = \"console\",",
          "b = \"mobile\",",
          "y = \"tablet\",",
          "E = \"smarttv\",",
          "R = \"wearable\",",
          "oe = \"embedded\",",
          "re = 500,",
          "L = \"Amazon\",",
          "F = \"Apple\",",
          "be = \"ASUS\",",
          "ve = \"BlackBerry\",",
          "q = \"Browser\",",
          "J = \"Chrome\",",
          "Ve = \"Edge\",",
          "Y = \"Firefox\",",
          "K = \"Google\",",
          "ye = \"Huawei\",",
          "se = \"LG\",",
          "ae = \"Microsoft\",",
          "Se = \"Motorola\",",
          "B = \"Opera\",",
          "z = \"Samsung\",",
          "Ce = \"Sharp\",",
          "X = \"Sony\",",
          "ne = \"Xiaomi\",",
          "ce = \"Zebra\",",
          "Ie = \"Facebook\",",
          "ke = \"Chromium OS\",",
          "De = \"Mac OS\",",
          "Ee = \" Browser\",",
          "Le = function (C, I) {",
          "var m = {};",
          "for (var D in C)",
          "I[D] && I[D].length % 2 === 0",
          "? (m[D] = I[D].concat(C[D]))",
          ": (m[D] = C[D]);",
          "return m;",
          "},",
          "Z = function (C) {",
          "for (var I = {}, m = 0; m < C.length; m++) I[C[m].toUpperCase()] = C[m];",
          "return I;",
          "},",
          "Ae = function (C, I) {",
          "return typeof C === v ? M(I).indexOf(M(C)) !== -1 : !1;",
          "},",
          "M = function (C) {",
          "return C.toLowerCase();",
          "},",
          "qe = function (C) {",
          "return typeof C === v ? C.replace(/[^\\d\\.]/g, s).split(\".\")[0] : i;",
          "},",
          "he = function (C, I) {",
          "if (typeof C === v)",
          "return (",
          "(C = C.replace(/^\\s\\s*/, s)),",
          "typeof I === g ? C : C.substring(0, re)",
          ");",
          "},",
          "V = function (C, I) {",
          "for (var m = 0, D, _, U, k, w, P; m < I.length && !w; ) {",
          "var le = I[m],",
          "Pe = I[m + 1];",
          "for (D = _ = 0; D < le.length && !w && le[D]; )",
          "if (((w = le[D++].exec(C)), w))",
          "for (U = 0; U < Pe.length; U++)",
          "(P = w[++_]),",
          "(k = Pe[U]),",
          "typeof k === f && k.length > 0",
          "? k.length === 2",
          "? typeof k[1] == u",
          "? (this[k[0]] = k[1].call(this, P))",
          ": (this[k[0]] = k[1])",
          ": k.length === 3",
          "? typeof k[1] === u && !(k[1].exec && k[1].test)",
          "? (this[k[0]] = P ? k[1].call(this, P, k[2]) : i)",
          ": (this[k[0]] = P ? P.replace(k[1], k[2]) : i)",
          ": k.length === 4 &&",
          "(this[k[0]] = P",
          "? k[3].call(this, P.replace(k[1], k[2]))",
          ": i)",
          ": (this[k] = P || i);",
          "m += 2;",
          "}",
          "},",
          "Q = function (C, I) {",
          "for (var m in I)",
          "if (typeof I[m] === f && I[m].length > 0) {",
          "for (var D = 0; D < I[m].length; D++)",
          "if (Ae(I[m][D], C)) return m === n ? i : m;",
          "} else if (Ae(I[m], C)) return m === n ? i : m;",
          "return I.hasOwnProperty(\"*\") ? I[\"*\"] : C;",
          "},",
          "Je = {",
          "\"1.0\": \"/8\",",
          "1.2: \"/1\",",
          "1.3: \"/3\",",
          "\"2.0\": \"/412\",",
          "\"2.0.2\": \"/416\",",
          "\"2.0.3\": \"/417\",",
          "\"2.0.4\": \"/419\",",
          "\"?\": \"/\",",
          "},",
          "xe = {",
          "ME: \"4.90\",",
          "\"NT 3.11\": \"NT3.51\",",
          "\"NT 4.0\": \"NT4.0\",",
          "2e3: \"NT 5.0\",",
          "XP: [\"NT 5.1\", \"NT 5.2\"],",
          "Vista: \"NT 6.0\",",
          "7: \"NT 6.1\",",
          "8: \"NT 6.2\",",
          "8.1: \"NT 6.3\",",
          "10: [\"NT 6.4\", \"NT 10.0\"],",
          "RT: \"ARM\",",
          "},",
          "Ue = {",
          "browser: [",
          "[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],",
          "[p, [d, \"Chrome\"]],",
          "[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],",
          "[p, [d, \"Edge\"]],",
          "[",
          "/(opera mini)\\/([-\\w\\.]+)/i,",
          "/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,",
          "/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i,",
          "],",
          "[d, p],",
          "[/opios[\\/ ]+([\\w\\.]+)/i],",
          "[p, [d, B + \" Mini\"]],",
          "[/\\bop(?:rg)?x\\/([\\w\\.]+)/i],",
          "[p, [d, B + \" GX\"]],",
          "[/\\bopr\\/([\\w\\.]+)/i],",
          "[p, [d, B]],",
          "[/\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i],",
          "[p, [d, \"Baidu\"]],",
          "[/\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i],",
          "[p, [d, \"Maxthon\"]],",
          "[",
          "/(kindle)\\/([\\w\\.]+)/i,",
          "/(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,",
          "/(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,",
          "/(?:ms|\\()(ie) ([\\w\\.]+)/i,",
          "/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\\/([-\\w\\.]+)/i,",
          "/(heytap|ovi|115)browser\\/([\\d\\.]+)/i,",
          "/(weibo)__([\\d\\.]+)/i,",
          "],",
          "[d, p],",
          "[/quark(?:pc)?\\/([-\\w\\.]+)/i],",
          "[p, [d, \"Quark\"]],",
          "[/\\bddg\\/([\\w\\.]+)/i],",
          "[p, [d, \"DuckDuckGo\"]],",
          "[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],",
          "[p, [d, \"UC\" + q]],",
          "[",
          "/microm.+\\bqbcore\\/([\\w\\.]+)/i,",
          "/\\bqbcore\\/([\\w\\.]+).+microm/i,",
          "/micromessenger\\/([\\w\\.]+)/i,",
          "],",
          "[p, [d, \"WeChat\"]],",
          "[/konqueror\\/([\\w\\.]+)/i],",
          "[p, [d, \"Konqueror\"]],",
          "[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],",
          "[p, [d, \"IE\"]],",
          "[/ya(?:search)?browser\\/([\\w\\.]+)/i],",
          "[p, [d, \"Yandex\"]],",
          "[/slbrowser\\/([\\w\\.]+)/i],",
          "[p, [d, \"Smart Lenovo \" + q]],",
          "[/(avast|avg)\\/([\\w\\.]+)/i],",
          "[[d, /(.+)/, \"$1 Secure \" + q], p],",
          "[/\\bfocus\\/([\\w\\.]+)/i],",
          "[p, [d, Y + \" Focus\"]],",
          "[/\\bopt\\/([\\w\\.]+)/i],",
          "[p, [d, B + \" Touch\"]],",
          "[/coc_coc\\w+\\/([\\w\\.]+)/i],",
          "[p, [d, \"Coc Coc\"]],",
          "[/dolfin\\/([\\w\\.]+)/i],",
          "[p, [d, \"Dolphin\"]],",
          "[/coast\\/([\\w\\.]+)/i],",
          "[p, [d, B + \" Coast\"]],",
          "[/miuibrowser\\/([\\w\\.]+)/i],",
          "[p, [d, \"MIUI\" + Ee]],",
          "[/fxios\\/([\\w\\.-]+)/i],",
          "[p, [d, Y]],",
          "[/\\bqihoobrowser\\/?([\\w\\.]*)/i],",
          "[p, [d, \"360\"]],",
          "[/\\b(qq)\\/([\\w\\.]+)/i],",
          "[[d, /(.+)/, \"$1Browser\"], p],",
          "[/(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i],",
          "[[d, /(.+)/, \"$1\" + Ee], p],",
          "[/samsungbrowser\\/([\\w\\.]+)/i],",
          "[p, [d, z + \" Internet\"]],",
          "[/metasr[\\/ ]?([\\d\\.]+)/i],",
          "[p, [d, \"Sogou Explorer\"]],",
          "[/(sogou)mo\\w+\\/([\\d\\.]+)/i],",
          "[[d, \"Sogou Mobile\"], p],",
          "[",
          "/(electron)\\/([\\w\\.]+) safari/i,",
          "/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,",
          "/m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i,",
          "],",
          "[d, p],",
          "[/(lbbrowser|rekonq)/i, /\\[(linkedin)app\\]/i],",
          "[d],",
          "[",
          "/ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,",
          "/ome\\/([\\w\\.]+).+qihu (360)[es]e/i,",
          "],",
          "[p, d],",
          "[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],",
          "[[d, Ie], p],",
          "[",
          "/(Klarna)\\/([\\w\\.]+)/i,",
          "/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,",
          "/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,",
          "/safari (line)\\/([\\w\\.]+)/i,",
          "/\\b(line)\\/([\\w\\.]+)\\/iab/i,",
          "/(alipay)client\\/([\\w\\.]+)/i,",
          "/(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,",
          "/(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i,",
          "],",
          "[d, p],",
          "[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],",
          "[p, [d, \"GSA\"]],",
          "[/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i],",
          "[p, [d, \"TikTok\"]],",
          "[/headlesschrome(?:\\/([\\w\\.]+)| )/i],",
          "[p, [d, J + \" Headless\"]],",
          "[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],",
          "[[d, J + \" WebView\"], p],",
          "[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],",
          "[p, [d, \"Android \" + q]],",
          "[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],",
          "[d, p],",
          "[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],",
          "[p, [d, \"Mobile Safari\"]],",
          "[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],",
          "[p, d],",
          "[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],",
          "[d, [p, Q, Je]],",
          "[/(webkit|khtml)\\/([\\w\\.]+)/i],",
          "[d, p],",
          "[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],",
          "[[d, \"Netscape\"], p],",
          "[/(wolvic|librewolf)\\/([\\w\\.]+)/i],",
          "[d, p],",
          "[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],",
          "[p, [d, Y + \" Reality\"]],",
          "[",
          "/ekiohf.+(flow)\\/([\\w\\.]+)/i,",
          "/(swiftfox)/i,",
          "/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,",
          "/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,",
          "/(firefox)\\/([\\w\\.]+)/i,",
          "/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,",
          "/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,",
          "/(links) \\(([\\w\\.]+)/i,",
          "],",
          "[d, [p, /_/g, \".\"]],",
          "[/(cobalt)\\/([\\w\\.]+)/i],",
          "[d, [p, /master.|lts./, \"\"]],",
          "],",
          "cpu: [",
          "[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],",
          "[[A, \"amd64\"]],",
          "[/(ia32(?=;))/i],",
          "[[A, M]],",
          "[/((?:i[346]|x)86)[;\\)]/i],",
          "[[A, \"ia32\"]],",
          "[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],",
          "[[A, \"arm64\"]],",
          "[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],",
          "[[A, \"armhf\"]],",
          "[/windows (ce|mobile); ppc;/i],",
          "[[A, \"arm\"]],",
          "[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],",
          "[[A, /ower/, s, M]],",
          "[/(sun4\\w)[;\\)]/i],",
          "[[A, \"sparc\"]],",
          "[",
          "/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i,",
          "],",
          "[[A, M]],",
          "],",
          "device: [",
          "[",
          "/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i,",
          "],",
          "[c, [l, z], [h, y]],",
          "[",
          "/\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,",
          "/samsung[- ]((?!sm-[lr])[-\\w]+)/i,",
          "/sec-(sgh\\w+)/i,",
          "],",
          "[c, [l, z], [h, b]],",
          "[/(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i],",
          "[c, [l, F], [h, b]],",
          "[",
          "/\\((ipad);[-\\w\\),; ]+apple/i,",
          "/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,",
          "/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i,",
          "],",
          "[c, [l, F], [h, y]],",
          "[/(macintosh);/i],",
          "[c, [l, F]],",
          "[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],",
          "[c, [l, Ce], [h, b]],",
          "[/(?:honor)([-\\w ]+)[;\\)]/i],",
          "[c, [l, \"Honor\"], [h, b]],",
          "[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],",
          "[c, [l, ye], [h, y]],",
          "[",
          "/(?:huawei)([-\\w ]+)[;\\)]/i,",
          "/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i,",
          "],",
          "[c, [l, ye], [h, b]],",
          "[",
          "/\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,",
          "/\\b; (\\w+) build\\/hm\\1/i,",
          "/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,",
          "/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,",
          "/oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,",
          "/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i,",
          "],",
          "[",
          "[c, /_/g, \" \"],",
          "[l, ne],",
          "[h, b],",
          "],",
          "[",
          "/oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,",
          "/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i,",
          "],",
          "[",
          "[c, /_/g, \" \"],",
          "[l, ne],",
          "[h, y],",
          "],",
          "[",
          "/; (\\w+) bui.+ oppo/i,",
          "/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i,",
          "],",
          "[c, [l, \"OPPO\"], [h, b]],",
          "[/\\b(opd2\\d{3}a?) bui/i],",
          "[c, [l, \"OPPO\"], [h, y]],",
          "[/vivo (\\w+)(?: bui|\\))/i, /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],",
          "[c, [l, \"Vivo\"], [h, b]],",
          "[/\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i],",
          "[c, [l, \"Realme\"], [h, b]],",
          "[",
          "/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,",
          "/\\bmot(?:orola)?[- ](\\w*)/i,",
          "/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i,",
          "],",
          "[c, [l, Se], [h, b]],",
          "[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],",
          "[c, [l, Se], [h, y]],",
          "[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],",
          "[c, [l, se], [h, y]],",
          "[",
          "/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,",
          "/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,",
          "/\\blg-?([\\d\\w]+) bui/i,",
          "],",
          "[c, [l, se], [h, b]],",
          "[",
          "/(ideatab[-\\w ]+)/i,",
          "/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i,",
          "],",
          "[c, [l, \"Lenovo\"], [h, y]],",
          "[/(?:maemo|nokia).*(n900|lumia \\d+)/i, /nokia[-_ ]?([-\\w\\.]*)/i],",
          "[",
          "[c, /_/g, \" \"],",
          "[l, \"Nokia\"],",
          "[h, b],",
          "],",
          "[/(pixel c)\\b/i],",
          "[c, [l, K], [h, y]],",
          "[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],",
          "[c, [l, K], [h, b]],",
          "[",
          "/droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i,",
          "],",
          "[c, [l, X], [h, b]],",
          "[/sony tablet [ps]/i, /\\b(?:sony)?sgp\\w+(?: bui|\\))/i],",
          "[",
          "[c, \"Xperia Tablet\"],",
          "[l, X],",
          "[h, y],",
          "],",
          "[",
          "/ (kb2005|in20[12]5|be20[12][59])\\b/i,",
          "/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i,",
          "],",
          "[c, [l, \"OnePlus\"], [h, b]],",
          "[",
          "/(alexa)webm/i,",
          "/(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,",
          "/(kf[a-z]+)( bui|\\)).+silk\\//i,",
          "],",
          "[c, [l, L], [h, y]],",
          "[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],",
          "[",
          "[c, /(.+)/g, \"Fire Phone $1\"],",
          "[l, L],",
          "[h, b],",
          "],",
          "[/(playbook);[-\\w\\),; ]+(rim)/i],",
          "[c, l, [h, y]],",
          "[/\\b((?:bb[a-f]|st[hv])100-\\d)/i, /\\(bb10; (\\w+)/i],",
          "[c, [l, ve], [h, b]],",
          "[",
          "/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i,",
          "],",
          "[c, [l, be], [h, y]],",
          "[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],",
          "[c, [l, be], [h, b]],",
          "[/(nexus 9)/i],",
          "[c, [l, \"HTC\"], [h, y]],",
          "[",
          "/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,",
          "/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,",
          "/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i,",
          "],",
          "[l, [c, /_/g, \" \"], [h, b]],",
          "[",
          "/droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i,",
          "],",
          "[c, [l, \"TCL\"], [h, y]],",
          "[/(itel) ((\\w+))/i],",
          "[[l, M], c, [h, Q, { tablet: [\"p10001l\", \"w7001\"], \"*\": \"mobile\" }]],",
          "[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],",
          "[c, [l, \"Acer\"], [h, y]],",
          "[/droid.+; (m[1-5] note) bui/i, /\\bmz-([-\\w]{2,})/i],",
          "[c, [l, \"Meizu\"], [h, b]],",
          "[/; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i],",
          "[c, [l, \"Ulefone\"], [h, b]],",
          "[/; (energy ?\\w+)(?: bui|\\))/i, /; energizer ([\\w ]+)(?: bui|\\))/i],",
          "[c, [l, \"Energizer\"], [h, b]],",
          "[/; cat (b35);/i, /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i],",
          "[c, [l, \"Cat\"], [h, b]],",
          "[/((?:new )?andromax[\\w- ]+)(?: bui|\\))/i],",
          "[c, [l, \"Smartfren\"], [h, b]],",
          "[/droid.+; (a(?:015|06[35]|142p?))/i],",
          "[c, [l, \"Nothing\"], [h, b]],",
          "[",
          "/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,",
          "/; (imo) ((?!tab)[\\w ]+?)(?: bui|\\))/i,",
          "/(hp) ([\\w ]+\\w)/i,",
          "/(asus)-?(\\w+)/i,",
          "/(microsoft); (lumia[\\w ]+)/i,",
          "/(lenovo)[-_ ]?([-\\w]+)/i,",
          "/(jolla)/i,",
          "/(oppo) ?([\\w ]+) bui/i,",
          "],",
          "[l, c, [h, b]],",
          "[",
          "/(imo) (tab \\w+)/i,",
          "/(kobo)\\s(ereader|touch)/i,",
          "/(archos) (gamepad2?)/i,",
          "/(hp).+(touchpad(?!.+tablet)|tablet)/i,",
          "/(kindle)\\/([\\w\\.]+)/i,",
          "/(nook)[\\w ]+build\\/(\\w+)/i,",
          "/(dell) (strea[kpr\\d ]*[\\dko])/i,",
          "/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,",
          "/(trinity)[- ]*(t\\d{3}) bui/i,",
          "/(gigaset)[- ]+(q\\w{1,9}) bui/i,",
          "/(vodafone) ([\\w ]+)(?:\\)| bui)/i,",
          "],",
          "[l, c, [h, y]],",
          "[/(surface duo)/i],",
          "[c, [l, ae], [h, y]],",
          "[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],",
          "[c, [l, \"Fairphone\"], [h, b]],",
          "[/(u304aa)/i],",
          "[c, [l, \"AT&T\"], [h, b]],",
          "[/\\bsie-(\\w*)/i],",
          "[c, [l, \"Siemens\"], [h, b]],",
          "[/\\b(rct\\w+) b/i],",
          "[c, [l, \"RCA\"], [h, y]],",
          "[/\\b(venue[\\d ]{2,7}) b/i],",
          "[c, [l, \"Dell\"], [h, y]],",
          "[/\\b(q(?:mv|ta)\\w+) b/i],",
          "[c, [l, \"Verizon\"], [h, y]],",
          "[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],",
          "[c, [l, \"Barnes & Noble\"], [h, y]],",
          "[/\\b(tm\\d{3}\\w+) b/i],",
          "[c, [l, \"NuVision\"], [h, y]],",
          "[/\\b(k88) b/i],",
          "[c, [l, \"ZTE\"], [h, y]],",
          "[/\\b(nx\\d{3}j) b/i],",
          "[c, [l, \"ZTE\"], [h, b]],",
          "[/\\b(gen\\d{3}) b.+49h/i],",
          "[c, [l, \"Swiss\"], [h, b]],",
          "[/\\b(zur\\d{3}) b/i],",
          "[c, [l, \"Swiss\"], [h, y]],",
          "[/\\b((zeki)?tb.*\\b) b/i],",
          "[c, [l, \"Zeki\"], [h, y]],",
          "[/\\b([yr]\\d{2}) b/i, /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],",
          "[[l, \"Dragon Touch\"], c, [h, y]],",
          "[/\\b(ns-?\\w{0,9}) b/i],",
          "[c, [l, \"Insignia\"], [h, y]],",
          "[/\\b((nxa|next)-?\\w{0,9}) b/i],",
          "[c, [l, \"NextBook\"], [h, y]],",
          "[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],",
          "[[l, \"Voice\"], c, [h, b]],",
          "[/\\b(lvtel\\-)?(v1[12]) b/i],",
          "[[l, \"LvTel\"], c, [h, b]],",
          "[/\\b(ph-1) /i],",
          "[c, [l, \"Essential\"], [h, b]],",
          "[/\\b(v(100md|700na|7011|917g).*\\b) b/i],",
          "[c, [l, \"Envizen\"], [h, y]],",
          "[/\\b(trio[-\\w\\. ]+) b/i],",
          "[c, [l, \"MachSpeed\"], [h, y]],",
          "[/\\btu_(1491) b/i],",
          "[c, [l, \"Rotor\"], [h, y]],",
          "[/(shield[\\w ]+) b/i],",
          "[c, [l, \"Nvidia\"], [h, y]],",
          "[/(sprint) (\\w+)/i],",
          "[l, c, [h, b]],",
          "[/(kin\\.[onetw]{3})/i],",
          "[",
          "[c, /\\./g, \" \"],",
          "[l, ae],",
          "[h, b],",
          "],",
          "[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],",
          "[c, [l, ce], [h, y]],",
          "[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],",
          "[c, [l, ce], [h, b]],",
          "[/smart-tv.+(samsung)/i],",
          "[l, [h, E]],",
          "[/hbbtv.+maple;(\\d+)/i],",
          "[",
          "[c, /^/, \"SmartTV\"],",
          "[l, z],",
          "[h, E],",
          "],",
          "[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],",
          "[",
          "[l, se],",
          "[h, E],",
          "],",
          "[/(apple) ?tv/i],",
          "[l, [c, F + \" TV\"], [h, E]],",
          "[/crkey/i],",
          "[",
          "[c, J + \"cast\"],",
          "[l, K],",
          "[h, E],",
          "],",
          "[/droid.+aft(\\w+)( bui|\\))/i],",
          "[c, [l, L], [h, E]],",
          "[/\\(dtv[\\);].+(aquos)/i, /(aquos-tv[\\w ]+)\\)/i],",
          "[c, [l, Ce], [h, E]],",
          "[/(bravia[\\w ]+)( bui|\\))/i],",
          "[c, [l, X], [h, E]],",
          "[/(mitv-\\w{5}) bui/i],",
          "[c, [l, ne], [h, E]],",
          "[/Hbbtv.*(technisat) (.*);/i],",
          "[l, c, [h, E]],",
          "[",
          "/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,",
          "/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i,",
          "],",
          "[",
          "[l, he],",
          "[c, he],",
          "[h, E],",
          "],",
          "[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],",
          "[[h, E]],",
          "[/(ouya)/i, /(nintendo) ([wids3utch]+)/i],",
          "[l, c, [h, j]],",
          "[/droid.+; (shield) bui/i],",
          "[c, [l, \"Nvidia\"], [h, j]],",
          "[/(playstation [345portablevi]+)/i],",
          "[c, [l, X], [h, j]],",
          "[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],",
          "[c, [l, ae], [h, j]],",
          "[/\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i],",
          "[c, [l, z], [h, R]],",
          "[/((pebble))app/i],",
          "[l, c, [h, R]],",
          "[/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i],",
          "[c, [l, F], [h, R]],",
          "[/droid.+; (glass) \\d/i],",
          "[c, [l, K], [h, R]],",
          "[/droid.+; (wt63?0{2,3})\\)/i],",
          "[c, [l, ce], [h, R]],",
          "[/droid.+; (glass) \\d/i],",
          "[c, [l, K], [h, R]],",
          "[/(pico) (4|neo3(?: link|pro)?)/i],",
          "[l, c, [h, R]],",
          "[/; (quest( \\d| pro)?)/i],",
          "[c, [l, Ie], [h, R]],",
          "[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],",
          "[l, [h, oe]],",
          "[/(aeobc)\\b/i],",
          "[c, [l, L], [h, oe]],",
          "[/droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i],",
          "[c, [h, b]],",
          "[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],",
          "[c, [h, y]],",
          "[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],",
          "[[h, y]],",
          "[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],",
          "[[h, b]],",
          "[/(android[-\\w\\. ]{0,9});.+buil/i],",
          "[c, [l, \"Generic\"]],",
          "],",
          "engine: [",
          "[/windows.+ edge\\/([\\w\\.]+)/i],",
          "[p, [d, Ve + \"HTML\"]],",
          "[/(arkweb)\\/([\\w\\.]+)/i],",
          "[d, p],",
          "[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],",
          "[p, [d, \"Blink\"]],",
          "[",
          "/(presto)\\/([\\w\\.]+)/i,",
          "/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i,",
          "/ekioh(flow)\\/([\\w\\.]+)/i,",
          "/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,",
          "/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,",
          "/\\b(libweb)/i,",
          "],",
          "[d, p],",
          "[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],",
          "[p, d],",
          "],",
          "os: [",
          "[/microsoft (windows) (vista|xp)/i],",
          "[d, p],",
          "[/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i],",
          "[d, [p, Q, xe]],",
          "[",
          "/windows nt 6\\.2; (arm)/i,",
          "/windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,",
          "/(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i,",
          "],",
          "[",
          "[p, Q, xe],",
          "[d, \"Windows\"],",
          "],",
          "[",
          "/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,",
          "/(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,",
          "/cfnetwork\\/.+darwin/i,",
          "],",
          "[",
          "[p, /_/g, \".\"],",
          "[d, \"iOS\"],",
          "],",
          "[/(mac os x) ?([\\w\\. ]*)/i, /(macintosh|mac_powerpc\\b)(?!.+haiku)/i],",
          "[",
          "[d, De],",
          "[p, /_/g, \".\"],",
          "],",
          "[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],",
          "[p, d],",
          "[",
          "/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\\/ ]?([\\w\\.]*)/i,",
          "/(blackberry)\\w*\\/([\\w\\.]*)/i,",
          "/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,",
          "/\\((series40);/i,",
          "],",
          "[d, p],",
          "[/\\(bb(10);/i],",
          "[p, [d, ve]],",
          "[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],",
          "[p, [d, \"Symbian\"]],",
          "[",
          "/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i,",
          "],",
          "[p, [d, Y + \" OS\"]],",
          "[/web0s;.+rt(tv)/i, /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],",
          "[p, [d, \"webOS\"]],",
          "[/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i],",
          "[p, [d, \"watchOS\"]],",
          "[/crkey\\/([\\d\\.]+)/i],",
          "[p, [d, J + \"cast\"]],",
          "[/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i],",
          "[[d, ke], p],",
          "[",
          "/panasonic;(viera)/i,",
          "/(netrange)mmh/i,",
          "/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,",
          "/(nintendo|playstation) ([wids345portablevuch]+)/i,",
          "/(xbox); +xbox ([^\\);]+)/i,",
          "/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,",
          "/(mint)[\\/\\(\\) ]?(\\w*)/i,",
          "/(mageia|vectorlinux)[; ]/i,",
          "/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,",
          "/(hurd|linux) ?([\\w\\.]*)/i,",
          "/(gnu) ?([\\w\\.]*)/i,",
          "/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,",
          "/(haiku) (\\w+)/i,",
          "],",
          "[d, p],",
          "[/(sunos) ?([\\w\\.\\d]*)/i],",
          "[[d, \"Solaris\"], p],",
          "[",
          "/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,",
          "/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,",
          "/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,",
          "/(unix) ?([\\w\\.]*)/i,",
          "],",
          "[d, p],",
          "],",
          "},",
          "x = function (C, I) {",
          "if ((typeof C === f && ((I = C), (C = i)), !(this instanceof x)))",
          "return new x(C, I).getResult();",
          "var m = typeof t !== g && t.navigator ? t.navigator : i,",
          "D = C || (m && m.userAgent ? m.userAgent : s),",
          "_ = m && m.userAgentData ? m.userAgentData : i,",
          "U = I ? Le(Ue, I) : Ue,",
          "k = m && m.userAgent == D;",
          "return (",
          "(this.getBrowser = function () {",
          "var w = {};",
          "return (",
          "(w[d] = i),",
          "(w[p] = i),",
          "V.call(w, D, U.browser),",
          "(w[S] = qe(w[p])),",
          "k &&",
          "m &&",
          "m.brave &&",
          "typeof m.brave.isBrave == u &&",
          "(w[d] = \"Brave\"),",
          "w",
          ");",
          "}),",
          "(this.getCPU = function () {",
          "var w = {};",
          "return (w[A] = i), V.call(w, D, U.cpu), w;",
          "}),",
          "(this.getDevice = function () {",
          "var w = {};",
          "return (",
          "(w[l] = i),",
          "(w[c] = i),",
          "(w[h] = i),",
          "V.call(w, D, U.device),",
          "k && !w[h] && _ && _.mobile && (w[h] = b),",
          "k &&",
          "w[c] == \"Macintosh\" &&",
          "m &&",
          "typeof m.standalone !== g &&",
          "m.maxTouchPoints &&",
          "m.maxTouchPoints > 2 &&",
          "((w[c] = \"iPad\"), (w[h] = y)),",
          "w",
          ");",
          "}),",
          "(this.getEngine = function () {",
          "var w = {};",
          "return (w[d] = i), (w[p] = i), V.call(w, D, U.engine), w;",
          "}),",
          "(this.getOS = function () {",
          "var w = {};",
          "return (",
          "(w[d] = i),",
          "(w[p] = i),",
          "V.call(w, D, U.os),",
          "k &&",
          "!w[d] &&",
          "_ &&",
          "_.platform &&",
          "_.platform != \"Unknown\" &&",
          "(w[d] = _.platform",
          ".replace(/chrome os/i, ke)",
          ".replace(/macos/i, De)),",
          "w",
          ");",
          "}),",
          "(this.getResult = function () {",
          "return {",
          "ua: this.getUA(),",
          "browser: this.getBrowser(),",
          "engine: this.getEngine(),",
          "os: this.getOS(),",
          "device: this.getDevice(),",
          "cpu: this.getCPU(),",
          "};",
          "}),",
          "(this.getUA = function () {",
          "return D;",
          "}),",
          "(this.setUA = function (w) {",
          "return (D = typeof w === v && w.length > re ? he(w, re) : w), this;",
          "}),",
          "this.setUA(D),",
          "this",
          ");",
          "};",
          "(x.VERSION = o),",
          "(x.BROWSER = Z([d, p, S])),",
          "(x.CPU = Z([A])),",
          "(x.DEVICE = Z([c, l, h, j, b, E, y, R, oe])),",
          "(x.ENGINE = x.OS = Z([d, p])),",
          "a.exports && (e = a.exports = x),",
          "(e.UAParser = x);",
          "(H.ua = W.getResult()),",
          "(H.ua.get = function () {",
          "return W.getUA();",
          "}),",
          "(H.ua.set = function (C) {",
          "W.setUA(C);",
          "var I = W.getResult();",
          "for (var m in I) H.ua[m] = I[m];",
          "});",
          "if (typeof a != \"string\") return !1;",
          "let e = a.trim().replace(/[\\s-\\{\\}\\(\\)]/g, \"\");",
          "if (e.length !== 32) return !1;",
          "let t = /^[0-9A-Fa-f]+$/;",
          "return (t.lastIndex = 0), t.test(e);",
          "},",
          "It = \"0.1.15\",",
          "Oe = (a, e) => {",
          "fetch(`${a}/events`, {",
          "method: \"POST\",",
          "headers: {",
          "\"Content-Type\": \"application/json\",",
          "\"store-id\": e.store_id,",
          "},",
          "body: JSON.stringify(e),",
          "});",
          "},",
          "je = /* @__PURE__ */ ((a) => (",
          "(a[(a.StoreDonation = 0)] = \"StoreDonation\"),",
          "(a[(a.AddOn = 1)] = \"AddOn\"),",
          "(a[(a.RoundUp = 2)] = \"RoundUp\"),",
          "a",
          "))(je || {}),",
          "Fe = /* @__PURE__ */ ((a) => (",
          "(a[(a.Compact = 0)] = \"Compact\"),",
          "(a[(a.Contained = 1)] = \"Contained\"),",
          "(a[(a.Full = 2)] = \"Full\"),",
          "(a[(a.Default = 3)] = \"Default\"),",
          "a",
          "))(Fe || {}),",
          "Ke = /* @__PURE__ */ ((a) => (",
          "(a[(a.Automatic = 0)] = \"Automatic\"),",
          "(a[(a.Manual = 1)] = \"Manual\"),",
          "(a[(a[\"Theme Section\"] = 2)] = \"Theme Section\"),",
          "(a[(a[\"Checkout Ext\"] = 3)] = \"Checkout Ext\"),",
          "a",
          "))(Ke || {}),",
          "Be = /* @__PURE__ */ ((a) => (",
          "(a[(a.Cart = 0)] = \"Cart\"),",
          "(a[(a.Product = 1)] = \"Product\"),",
          "(a[(a.Checkout = 2)] = \"Checkout\"),",
          "(a[(a.Unknown = 3)] = \"Unknown\"),",
          "a",
          "))(Be || {}),",
          "$ = \"unknown\",",
          "kt = 5e3,",
          "Dt = class {",
          "constructor(a) {",
          "r(this, \"data\", {});",
          "r(this, \"eventList\", []);",
          "r(this, \"baseUrl\", \"\");",
          "const { storeId: e, trackingId: t, baseUrl: i, metadata: o } = a;",
          "if (!Ct(e)) throw new Error(\"Invalid StoreId\");",
          "(this.data.client_properties = this.hydrate_properties()),",
          "(this.data.store_id = e),",
          "(this.data.tracking_id = t),",
          "(this.data.metadata = o),",
          "(this.baseUrl = i);",
          "track(a, e) {",
          "this.data.event = {",
          "time_stamp: Date.now(),",
          "event_type: a,",
          "event_version: It,",
          "payload: e,",
          "};",
          "let t = { ...this.data };",
          "Oe(this.baseUrl, t);",
          "identify({ email: a, id: e }) {",
          "this.data.customer = {",
          "id: e,",
          "email: a,",
          "};",
          "}",
          "metadata(a = {}) {",
          "this.data.metadata = {",
          "...this.data.metadata,",
          "...a,",
          "};",
          "}",
          "poll() {",
          "setTimeout(() => {",
          "if (this.eventList.length > 0)",
          "try {",
          "Oe(this.baseUrl, this.eventList), (this.eventList = []);",
          "} catch {",
          "throw new Error(\"Error Sending Events\");",
          "}",
          "this.poll();",
          "}, kt);",
          "}",
          "hydrate_properties() {",
          "var v;",
          "let a,",
          "e,",
          "t,",
          "i,",
          "o = \"unknown\",",
          "s,",
          "n,",
          "{",
          "device: u,",
          "platform: g,",
          "browser: f,",
          "} = navigator != null && navigator.userAgentData",
          "? this.modernUA()",
          ": this.legacyUA();",
          "(a = u), (e = g), (t = f.name), (i = f.version);",
          "try {",
          "s = window.location.href;",
          "} catch {",
          "s = o;",
          "try {",
          "n = document.referrer;",
          "} catch {",
          "n = o;",
          "}",
          "return {",
          "user_agent: (v = navigator.userAgent) != null ? v : o,",
          "url: s.toLowerCase(),",
          "device_type: a.toLowerCase(),",
          "browser_type: t.toLowerCase(),",
          "browser_version: i.toLowerCase(),",
          "platform_type: e.toLowerCase(),",
          "referral_url: n.toLowerCase(),",
          "};",
          "modernUA() {",
          "var u, g;",
          "let a = [",
          "\"Brave\",",
          "\"Chrome\",",
          "\"Firefox\",",
          "\"AppleWebKit\",",
          "\"Safari\",",
          "\"Mozilla\",",
          "],",
          "e,",
          "t,",
          "i;",
          "(t = navigator.userAgentData.mobile),",
          "(i = navigator.userAgentData.platform.toLowerCase());",
          "let o = navigator.userAgentData.brands;",
          "o &&",
          "(e = o.filter(({ brand: f, version: v }) =>",
          "a.includes(f)",
          "? {",
          "brand: f,",
          "version: v,",
          "}",
          ": null,",
          "));",
          "let s = (u = e[0]) == null ? void 0 : u.brand,",
          "n = (g = e[0]) == null ? void 0 : g.version;",
          "return {",
          "device: t ? \"mobile\" : \"desktop\",",
          "platform: i != null ? i : $,",
          "browser: {",
          "name: s != null ? s : $,",
          "version: n != null ? n : $,",
          "},",
          "};",
          "}",
          "legacyUA() {",
          "var o, s;",
          "let { os: a, browser: e, device: t } = St(),",
          "i = null;",
          "switch (t == null ? void 0 : t.type) {",
          "case \"mobile\":",
          "i = \"mobile\";",
          "break;",
          "case \"tablet\":",
          "i = \"tablet\";",
          "break;",
          "case \"console\":",
          "i = \"console\";",
          "break;",
          "default:",
          "i = \"desktop\";",
          "break;",
          "return {",
          "device: i != null ? i : $,",
          "platform: a != null && a.name ? a.name.toLowerCase() : $,",
          "browser: {",
          "name: (o = e == null ? void 0 : e.name) != null ? o : $,",
          "version: (s = e == null ? void 0 : e.version) != null ? s : $,",
          "},",
          "};",
          "}",
          "},",
          "Re = Dt;",
          "totalDonationAmount: \"$\" + t.toFixed(2),",
          "(this.currency = e), (this.currencyRate = t);",
          "(this.cache = e.persistence ? e.persistence : new st()),",
          "(this.eventEmitter = rt),",
          "(this.errorHandler = new nt(this.eventEmitter)),",
          "(this.storeId = e.storeId),",
          "(this.environment = e.environment),",
          "(this.charitiesAdapter = new bt(",
          "e.environment,",
          "this.cache,",
          "this.errorHandler,",
          "this.storeId,",
          ")),",
          "(this.portfoliosAdapter = new vt(",
          "e.environment,",
          "this.cache,",
          "this.errorHandler,",
          "this.storeId,",
          ")),",
          "(this.storeAdapter = new mt(",
          "this.storeId,",
          "e.environment,",
          "this.cache,",
          "this.errorHandler,",
          ")),",
          "(this.trackingAdapter = new wt(",
          "this.storeId,",
          "e.environment,",
          "this.errorHandler,",
          ")),",
          "(this.categoriesService = new Me()),",
          "(this.store = new Ne({}, \"\")),",
          "(this.tracking = {}),",
          "(this.testMode = e.testMode),",
          "(this.selectedCauses = []),",
          "(this.logger = e.logger ? e.logger : new $e()),",
          "this.getStore(),",
          "(this.dataLayer = e.dataLayer ? e.dataLayer : {});",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error getting selected causes\",",
          "e,",
          "),",
          "{}",
          ");",
          "let g = await this.charitiesAdapter.search({",
          "searchTerm: i,",
          "skip: e,",
          "take: t,",
          "category: u,",
          "});",
          "return (",
          "this.track(\"Action::Searched\", {",
          "search: i,",
          "zip: o,",
          "city: s,",
          "state: n,",
          "category: u,",
          "}),",
          "this.emit(\"Search::Finished\", { searchResults: g }),",
          "g.map((f) => new dt(f))",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error searching causes\",",
          "g,",
          "),",
          "{}",
          ");",
          "const g = this.environment !== \"prod\" ? `${this.environment}.` : \"\",",
          "f = {",
          "storeId: e,",
          "trackingId: o != null ? o : \"\",",
          "baseUrl: `https://clickstream.${g}shoppinggives.com`,",
          "metadata: {",
          "widget: {",
          "type: je.StoreDonation,",
          "style: Fe.Default,",
          "placement: Ke[\"Checkout Ext\"],",
          "location: Be.Checkout,",
          "},",
          "},",
          "};",
          "c &&",
          "((v = (s = c.get(\"sgcause\")) != null ? s : \"\"),",
          "v && this.cache.set(\"causeId\", v));",
          "return (",
          "(n = await this.getTrackedCause(o)),",
          "n && ((c.causeId = n.causeId), (c.causeName = n.causeName)),",
          "this.cache.set(\"tracking\", c),",
          "(this.tracking = c),",
          "(this.eventTracker = new Re(f)),",
          "c",
          ");",
          "window &&",
          "(await this.checkUrlParamsForCause(this.tracking.trackingId),",
          "await this.checkForKlaviyoUrlParams(this.tracking.trackingId));",
          "return (",
          "S",
          "? (this.tracking = S)",
          ": ((u = await this.trackingAdapter.startTracking(e, t, i)),",
          "this.cache.set(\"tracking\", u),",
          "(this.tracking = u)),",
          "this.emit(\"Tracking::Started\", u || S),",
          "(f.trackingId = this.tracking.trackingId),",
          "(this.eventTracker = new Re(f)),",
          "u || S",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error starting tracking\",",
          "n,",
          "),",
          "{}",
          ");",
          "if (",
          "(t || (t = new URLSearchParams(window.location.search).get(\"sgcause\")), t)",
          ") {",
          "let t = this.cache.get(`sg-${te.Klaviyo}`),",
          "i = !1;",
          "let o = new URLSearchParams(window.location.search),",
          "s = o.get(\"_kx\");",
          "s &&",
          "((t = {",
          "_kx: s,",
          "variation: o.get(\"variation\"),",
          "utm_content: o.get(\"utm_content\"),",
          "utm_campaign: o.get(\"utm_campaign\"),",
          "}),",
          "(i = !0));",
          "i &&",
          "this.trackingAdapter.setIntegrationMetadata(e, te.Klaviyo, t).then(() => {",
          "this.cache.set(`sg-${te.Klaviyo}`, t);",
          "});",
          "return (",
          "(this.tracking = {",
          "trackingId: e,",
          "causeId: t == null ? void 0 : t.toString(),",
          "causeName: i,",
          "}),",
          "this.cache.set(\"tracking\", this.tracking),",
          "this.emit(\"Tracking::Updated\", { trackingUpdated: o }),",
          "o",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error updating tracking\",",
          "o,",
          "),",
          "!1",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error getting tracked cause\",",
          "t,",
          "),",
          "{}",
          ");",
          "return (",
          "this.track(",
          "this.selectedCauses.length == 0 ? \"Cause::Set\" : \"Cause::Updated\",",
          "{",
          "id: o.id,",
          "name: o.name,",
          "redemption_behavior: t,",
          "category_id: o.categoryId,",
          "category_name: o.categoryName,",
          "},",
          "),",
          "(this.selectedCauses = o),",
          "this.emit(\"Cause::Updated\", { cause: e }),",
          "{ cause: new G(e), error: [] }",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error setting cause to tracking\",",
          "i,",
          "),",
          "{}",
          ");",
          "if ((t = this.store) != null && t.id) e(!1);",
          "let i = new Date().getTime(),",
          "o = setInterval(() => {",
          "var s;",
          "new Date().getTime() - i > 5e3 && (clearInterval(o), e(!0)),",
          "(s = this.store) != null && s.id && (clearInterval(o), e(!1));",
          "}, 100);",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error emitting event\",",
          "i,",
          ");",
          "let o = We(e),",
          "s = [],",
          "n = [];",
          "return (",
          "(t = o.portfolioIds) != null &&",
          "t.length &&",
          "s.push(",
          "this.portfoliosAdapter.getPortfolios(o.portfolioIds.join(\",\")),",
          "),",
          "(i = o.charityIds) != null &&",
          "i.length &&",
          "s.push(this.charitiesAdapter.getByEins(o.charityIds.join(\",\"))),",
          "await Promise.all(s).then((u) => {",
          "u.forEach((g) => {",
          "g.forEach((f) => {",
          "f && n.push(new G(f));",
          "});",
          "}),",
          "n",
          ");",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error populating cause IDs\",",
          "o,",
          ");",
          "return (",
          "t.forEach(async (o) => {",
          "var n;",
          "let s = o.ein || o.id;",
          "if (this.store.letShoppersChoose && this.store.defaultCauseId)",
          "if (s == this.store.defaultCauseId) {",
          "o.default = !0;",
          "let u = await this.cache.get(\"tracking\");",
          "(!u || !u.causeName) &&",
          "this.updateTracking(this.tracking.trackingId, s, o.name);",
          "} else o.default = !1;",
          "else this.store.letShoppersChoose || (o.default = !0);",
          "this.store.defaultDonationType === 0 && (o.multiplier = i[s] || null),",
          "(n = o.portfolioCharities) != null &&",
          "n.length &&",
          "this.categoriesService.replaceEmptyLogos([",
          "...o.portfolioCharities,",
          "]);",
          "}),",
          "t",
          ");",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error getting charities\",",
          "t,",
          ");",
          "return (",
          "this.store.letShoppersChoose && this.store.defaultCauseId",
          "? (!t || !t.causeId) &&",
          "(this.selectedCauses = [",
          "this.charities.find(",
          "(o) => (o.id || o.ein) == this.store.defaultCauseId,",
          "),",
          "])",
          ": this.store.letShoppersChoose ||",
          "(this.selectedCauses =",
          "(i = Object.keys(this.donationInfo.donationRecipients)) !=",
          "null && i.length",
          "? this.donationInfo.donationRecipients",
          ": this.charities),",
          "this.selectedCauses",
          ");",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error getting initial cause selection\",",
          "o,",
          ");",
          "(this.donationInfo = new pe({ donationRecipients: {}, lineItems: [] })),",
          "(this.charities = []),",
          "(this.productAdapter = new Ge(",
          "this.storeId,",
          "this.environment,",
          "this.cache,",
          "this.errorHandler,",
          ")),",
          "(this.config = {}),",
          "(this.segment = null);",
          "if (((this.config = t), f))",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error initializing SDK\",",
          "),",
          "new ie({",
          "donationBreakdown: [],",
          "totalDonationAmount: 0,",
          "showWidget: !1,",
          "charities: [],",
          "selectedCauses: [],",
          "activeCampaigns: [],",
          "searchEnabled: !1,",
          "letShoppersChoose: !1,",
          "trackingId: \"\",",
          "directDonationInCart: !1,",
          "storeName: \"\",",
          "})",
          ");",
          "this.config.currencyCode &&",
          "this.config.currencyConversionRate &&",
          "this.currency !== this.config.currencyCode &&",
          "this.setCurrency(",
          "this.config.currencyCode.toUpperCase(),",
          "this.config.currencyConversionRate,",
          ");",
          "let v = await this.startTracking(",
          "this.storeId,",
          "this.testMode,",
          "!1,",
          "t.trackingId,",
          "),",
          "S = null;",
          "this.store.segments.length != 0",
          "? (S = this.evaluateSegments())",
          ": (S = { excludeSegment: !1 }),",
          "(this.segment = S),",
          "(this.donationInfo = await this.calculateDonation(",
          "new ue(",
          "t.lineItems,",
          "t.discount,",
          "v.causeId ? v.causeId : \"0\",",
          "!1,",
          "(i = this.segment) == null ? void 0 : i.id,",
          "),",
          "));",
          "let c = this.store.letShoppersChoose",
          "? this.store.featuredCauseIds",
          ": this.store.defaultCauseIds,",
          "d = await this.getCharities(c);",
          "(this.charities = d),",
          "(this.selectedCauses = this.getInitialSelectedCauses(v));",
          "showWidget:",
          "(o = this.segment) != null && o.excludeSegment",
          "? !1",
          ": this.isEligibleForDonation(),",
          "charities: this.store.letShoppersChoose",
          "? d",
          ": (s = Object.keys(this.donationInfo.donationRecipients)) != null &&",
          "s.length",
          "? this.donationInfo.donationRecipients",
          ": this.charities,",
          "selectedCauses: this.store.letShoppersChoose",
          "? (n = this.selectedCauses) != null",
          "? n",
          ": []",
          ": (u = Object.keys(this.donationInfo.donationRecipients)) != null &&",
          "u.length",
          "? this.donationInfo.donationRecipients",
          ": this.charities,",
          "searchEnabled: this.store.letShoppersChoose",
          "? this.store.searchEnabled",
          ": !1,",
          "directDonationInCart:",
          "(g = this.donationInfo.lineItems) == null",
          "? void 0",
          ": g.some((l) => l.directDonation === !0),",
          "storeName: this.store.name,",
          "return (",
          "this.setCacheForPostConversion(",
          "this.store,",
          "h.totalDonationAmount,",
          "h.donationBreakdown,",
          "),",
          "this.emit(\"SDK::Ready\", h),",
          "h",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error initializing SDK\",",
          "f,",
          "),",
          "{}",
          ");",
          "new ue(",
          "t.lineItems,",
          "t.discount,",
          "this.tracking.causeId ? this.tracking.causeId : \"0\",",
          "!1,",
          "(i = this.segment) == null ? void 0 : i.id,",
          "),",
          "charities: this.store.letShoppersChoose",
          "? this.charities",
          ": (o = Object.keys(this.donationInfo.donationRecipients)) != null &&",
          "o.length",
          "? this.donationInfo.donationRecipients",
          ": this.charities,",
          "selectedCauses: this.store.letShoppersChoose",
          "? (s = this.selectedCauses) != null",
          "? s",
          ": []",
          ": (n = Object.keys(this.donationInfo.donationRecipients)) != null &&",
          "n.length",
          "? this.donationInfo.donationRecipients",
          ": this.charities,",
          "directDonationInCart:",
          "(u = this.donationInfo.lineItems) == null",
          "? void 0",
          ": u.some((v) => v.directDonation === !0),",
          "return (",
          "this.setCacheForPostConversion(",
          "this.store,",
          "f.totalDonationAmount,",
          "f.donationBreakdown,",
          "),",
          "this.emit(\"SDK::Updated\", this.donationInfo),",
          "f",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error updating widget\",",
          "g,",
          "),",
          "{}",
          ");",
          "let i = await this.productAdapter.getCartDonation(this.storeId, { ...t }),",
          "o = new pe({ ...i });",
          "let s = await this.getCharities(Object.keys(o.donationRecipients)),",
          "n = [];",
          "return (",
          "s.length &&",
          "s.forEach((u) => {",
          "let g = { ...u };",
          "(g.donation = o.donationRecipients[u.ein || u.id]), n.push(g);",
          "}),",
          "(o.donationRecipients = n),",
          "(this.selectedCauses = n.map((u) => new G(u))),",
          "(this.donationInfo = o),",
          "o",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error calculating donation\",",
          "i,",
          "),",
          "{}",
          ");",
          "return (",
          "(t.onlinePurchase && this.donationInfo.totalDonationAmount > 0) ||",
          "t.addOnDonation ||",
          "t.roundUpDonation",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error retrieving donation eligibility\",",
          "t,",
          "),",
          "!1",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error retrieving donation breakdown\",",
          "t,",
          "),",
          "{}",
          ");",
          "o &&",
          "typeof o == \"number\" &&",
          "(t.cartDonation.donation[i] = this.convertUSDtoForeignCurrency(o));",
          "t.cartDonation.totalDonationValue = this.convertUSDtoForeignCurrency(",
          "t.cartDonation.totalDonationValue,",
          ");",
          "o &&",
          "typeof o == \"number\" &&",
          "(t.donationRecipients[i] = this.convertUSDtoForeignCurrency(o));",
          "(t.lineItems[s].donations[n] = g),",
          "i[n] ? (i[n] += g) : (i[n] = g);",
          "t.lineItems[s].totalDonationValue = this.convertUSDtoForeignCurrency(",
          "t.lineItems[s].totalDonationValue,",
          ");",
          "u &&",
          "typeof u == \"number\" &&",
          "(i[n]",
          "? (i[n] += t.lineItems[s].donations[n])",
          ": (i[n] = t.lineItems[s].donations[n]));",
          "}),",
          "(t.donationRecipients = i);",
          "let o = await this.setSelectedCause(t, i),",
          "s = await this.cache.get(\"tracking\"),",
          "n = await this.calculateDonation(",
          "new ue(",
          "this.config.lineItems,",
          "this.config.discount,",
          "s.causeId ? s.causeId : \"0\",",
          "!1,",
          "(g = this.segment) == null ? void 0 : g.id,",
          "),",
          "),",
          "u = this.store.letShoppersChoose",
          "? (f = this.selectedCauses) != null",
          "? f",
          ": []",
          ": (v = Object.keys(n.donationRecipients)) != null && v.length",
          "? n.donationRecipients",
          ": this.charities;",
          "return (",
          "this.setCacheForPostConversion(this.store, n.totalDonationAmount, u),",
          "n.totalDonationAmount &&",
          "(this.emit(\"SDK::Updated\", n),",
          "(o.newTotalDonation = n.totalDonationAmount)),",
          "o",
          ");",
          "return (",
          "this.store.letShoppersChoose && this.store.defaultCauseId",
          "? (!t || !t.causeId) &&",
          "(this.selectedCauses = [",
          "this.charities.find(",
          "(o) => (o.id || o.ein) == this.store.defaultCauseId,",
          "),",
          "])",
          ": this.store.letShoppersChoose ||",
          "(this.selectedCauses = Object.keys(",
          "(i = this.donationInfo.donationRecipients) != null ? i : {},",
          ").length",
          "? this.donationInfo.donationRecipients",
          ": this.charities),",
          "this.selectedCauses",
          ");",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error getting initial cause selection\",",
          "o,",
          ");",
          "(this.donationInfo = {}),",
          "(this.charities = []),",
          "(this.productAdapter = new Ge(",
          "this.storeId,",
          "this.environment,",
          "this.cache,",
          "this.errorHandler,",
          ")),",
          "(this.config = {}),",
          "(this.segment = null);",
          "if (((this.config = t), await this.pollForStore()))",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error initializing SDK\",",
          "),",
          "new ie({",
          "donationBreakdown: [],",
          "totalDonationAmount: 0,",
          "showWidget: !1,",
          "charities: [],",
          "selectedCauses: [],",
          "activeCampaigns: [],",
          "searchEnabled: !1,",
          "letShoppersChoose: !1,",
          "trackingId: \"\",",
          "storeName: \"\",",
          "})",
          ");",
          "this.config.currencyCode &&",
          "this.config.currencyConversionRate &&",
          "this.currency !== this.config.currencyCode &&",
          "this.setCurrency(",
          "this.config.currencyCode.toUpperCase(),",
          "this.config.currencyConversionRate,",
          ");",
          "let g = await this.startTracking(this.storeId, this.testMode, !1),",
          "f = null;",
          "this.store.segments.length != 0",
          "? (f = this.evaluateSegments())",
          ": (f = { excludeSegment: !1 }),",
          "(this.segment = f),",
          "(this.donationInfo = await this.calculateDonation(",
          "new ge(",
          "t.cmsId,",
          "t.price,",
          "g.causeId ? g.causeId : \"0\",",
          "(o = this.segment) == null ? void 0 : o.id,",
          "),",
          "));",
          "let v = this.store.letShoppersChoose",
          "? this.store.featuredCauseIds",
          ": this.store.defaultCauseIds,",
          "S = await this.getCharities(v);",
          "(this.charities = S),",
          "(this.selectedCauses = this.getInitialSelectedCauses(g));",
          "showWidget:",
          "(s = this.segment) != null && s.excludeSegment",
          "? !1",
          ": this.isEligibleForDonation(),",
          "charities: this.store.letShoppersChoose",
          "? S",
          ": this.donationInfo.donationRecipients,",
          "searchEnabled: this.store.letShoppersChoose",
          "? this.store.searchEnabled",
          ": !1,",
          "storeName: this.store.name,",
          "return (",
          "this.setCacheForPostConversion(",
          "this.store,",
          "c.totalDonationAmount,",
          "c.donationBreakdown,",
          "),",
          "this.emit(\"SDK::Ready\", c),",
          "c",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error initializing SDK\",",
          "u,",
          "),",
          "{}",
          ");",
          "new ge(",
          "t.cmsId,",
          "t.price,",
          "this.tracking.causeId ? this.tracking.causeId : \"0\",",
          "(i = this.segment) == null ? void 0 : i.id,",
          "),",
          "charities: this.store.letShoppersChoose",
          "? this.charities",
          ": (o = Object.keys(this.donationInfo.donationRecipients)) != null &&",
          "o.length",
          "? this.donationInfo.donationRecipients",
          ": this.charities,",
          "selectedCauses: this.store.letShoppersChoose",
          "? (s = this.selectedCauses) != null",
          "? s",
          ": []",
          ": (n = Object.keys(this.donationInfo.donationRecipients)) != null &&",
          "n.length",
          "? this.donationInfo.donationRecipients",
          ": this.charities,",
          "excluded: this.donationInfo.excluded,",
          "return (",
          "this.setCacheForPostConversion(",
          "this.store,",
          "g.totalDonationAmount,",
          "g.donationBreakdown,",
          "),",
          "this.emit(\"SDK::Updated\", this.donationInfo),",
          "g",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error updating widget\",",
          "u,",
          "),",
          "{}",
          ");",
          "let i = await this.productAdapter.getProductDonation(this.storeId, {",
          "...t,",
          "}),",
          "o = new Te({ ...i });",
          "let s = await this.getCharities(Object.keys(o.donationRecipients)),",
          "n = [];",
          "return (",
          "s.length &&",
          "s.forEach((u) => {",
          "let g = { ...u };",
          "(g.donation = o.donationRecipients[u.ein || u.id]), n.push(g);",
          "}),",
          "(o.donationRecipients = n),",
          "(this.selectedCauses = n.map((u) => new G(u))),",
          "(this.donationInfo = o),",
          "o",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error calculating donation\",",
          "i,",
          "),",
          "{}",
          ");",
          "let o = await this.setSelectedCause(t, i),",
          "s = await this.cache.get(\"tracking\"),",
          "n = await this.calculateDonation(",
          "new ge(",
          "this.config.cmsId,",
          "this.config.price,",
          "s.causeId ? s.causeId : \"0\",",
          "(g = this.segment) == null ? void 0 : g.id,",
          "),",
          "),",
          "u = this.store.letShoppersChoose",
          "? (f = this.selectedCauses) != null",
          "? f",
          ": []",
          ": (v = Object.keys(n.donationRecipients)) != null && v.length",
          "? n.donationRecipients",
          ": this.charities;",
          "return (",
          "this.setCacheForPostConversion(this.store, n.totalDonationAmount, u),",
          "n.totalDonationAmount &&",
          "(this.emit(\"SDK::Updated\", n),",
          "(o.newTotalDonation = n.totalDonationAmount)),",
          "o",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error retrieving donation eligibility\",",
          "t,",
          "),",
          "!1",
          ");",
          "s &&",
          "typeof s == \"number\" &&",
          "(t.result.donations[o] = this.convertUSDtoForeignCurrency(s));",
          "t.result.totalDonationValue = this.convertUSDtoForeignCurrency(",
          "t.result.totalDonationValue,",
          ");",
          "return (",
          "this.errorHandler.throw(",
          "\"ShoppingGivesSDKError\",",
          "\"Error getting donation breakdown\",",
          "t,",
          "),",
          "{}",
          ");",
          "xt as ProductHandler,"
        ],
        "removals": [
          "var Xe = (a, e, t) => e in a ? Ye(a, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : a[e] = t;",
          "if (typeof a != \"string\")",
          "return !1;",
          "if (e.length !== 32)",
          "return !1;",
          "return t.lastIndex = 0, t.test(e);",
          "for (const i of t)",
          "if (i.id == e)",
          "return this.getQueryParams(i.src);",
          "if (document.currentScript)",
          "return document.currentScript;",
          "if (document._currentScript)",
          "return document._currentScript();",
          "} catch {",
          "}",
          "if ((document.scripts[t].src.indexOf(\"shoppinggives.com\") >= 0 || document.scripts[t].src.indexOf(\"../\") >= 0 || document.scripts[t].src.indexOf(\"http://localhost\") >= 0) && (!e || document.scripts[t].src.indexOf(e) >= 0))",
          "if (e = e.split(\"?\")[1], !e)",
          "return {};",
          "let t = e.split(\"&\"), i = {};",
          "portfolioIds: []",
          "return a.forEach((i) => {",
          "i.match(e) ? t.charityIds.push(i) : t.portfolioIds.push(i);",
          "}), t;",
          "var et = /* @__PURE__ */ ((a) => (a.Dev = \"dev\", a.QA = \"qa\", a.Staging = \"staging1\", a.Production = \"prod\", a))(et || {}), ee = /* @__PURE__ */ ((a) => (a[a.Default = 1] = \"Default\", a[a.Searched = 2] = \"Searched\", a[a.Featured = 3] = \"Featured\", a))(ee || {}), te = /* @__PURE__ */ ((a) => (a.Klaviyo = \"klaviyo\", a.Yotpo = \"yotpo\", a))(te || {}), we = /* @__PURE__ */ ((a) => (a[a.Percentage = 0] = \"Percentage\", a[a.Flat = 1] = \"Flat\", a))(we || {}), me = /* @__PURE__ */ ((a) => (a.USD = \"USD\", a))(me || {});",
          "e.id && Ze(e.id) && (t = !0), this.isPortfolio = t, this.id = (i = e.ein) != null ? i : e.id, this.name = e.name, this.website = e.website, this.logoUrl = e.logoUrl, this.streetAddress = e.streetAddress, this.city = e.city, this.state = e.state, this.zip = e.zip, this.description = e.description, this.multiplier = e.multiplier, this.categoryId = e.categoryId, this.categoryName = e.categoryName, this.categoryLogoUrl = e.categoryLogoUrl, this.headline = e.headline, this.bannerUrl = e.imageUrl, this.portfolioCharities = e.charities ? e.charities : e.portfolioCharities, this.default = e.default;",
          "this.causeId = e.CauseId, this.causeName = e.CauseName;",
          "this.id = e, this.isActive = t, this.name = i, this.excludeSegment = o, this.frontEndPropertyName = s, this.frontEndSource = n, this.priorityIndex = u, this.valueCategory = g, this.backEndPropertyName = f, this.description = v, this.donationAction = S, this.donationActionValue = c, this.specifiedValues = d;",
          "this.id = t, this.activeCampaigns = e.ActiveCampaigns, this.addressInformation = e.AddressInformation, this.cmsMetaData = e.CMSMetaData, this.causeMultipliers = e.CauseMultipliers, this.contactInformation = e.ContactInformation, this.customCSS = e.CustomCSS, this.defaultCauseId = e.DefaultCauseId, this.defaultCauseIds = e.DefaultCauseIds || [], this.defaultDonation = e.DefaultDonation, this.defaultDonationType = e.DefaultDonationType, this.featuredCauseIds = e.FeaturedCauseIds || [], this.isActive = e.IsActive, this.isEmbeddedConfirmation = e.IsEmbeddedConfirmation, this.isExperienceActive = e.IsExperienceActive, this.letShoppersChoose = e.LetShoppersChoose, this.metaData = e.MetaData, this.name = e.Name, this.previewWidget = e.PreviewWidget, this.primaryCurrency = e.PrimaryCurrency, this.roundupPreviewWidget = e.RoundupPreviewWidget, this.searchEnabled = e.SearchEnabled, this.targetCssSelector = e.TargetCssSelector, this.segments = this.formatSegments(e.CustomerSegments);",
          "return e == null ? [] : e.map((t) => new it(",
          "t.Id,",
          "t.IsActive,",
          "t.Name,",
          "t.ExcludeSegment,",
          "t.FrontEndPropertyName,",
          "t.FrontEndSource,",
          "t.PriorityIndex,",
          "t.ValueCategory,",
          "t == null ? void 0 : t.BackEndPropertyName,",
          "t == null ? void 0 : t.Description,",
          "t == null ? void 0 : t.DonationAction,",
          "t == null ? void 0 : t.DonationActionValue,",
          "t == null ? void 0 : t.SpecifiedValues",
          "));",
          "constructor() {",
          "}",
          "r(this, \"baseCategoryCdnUrl\", \"https://cdn.shoppinggives.com/charity-logos/categories/\");",
          "25: \"Other.svg\"",
          "return e.forEach((t) => {",
          "(!t.logoUrl || t.logoUrl.includes(\"paypal\")) && !t.shortKey ? t.logoUrl = `${this.baseCategoryCdnUrl}${this.categories[t.categoryId]}` : t.shortKey && t.charities.forEach((i) => {",
          "i.logoUrl || (i.logoUrl = `${this.baseCategoryCdnUrl}${this.categories[i.categoryId]}`);",
          "});",
          "}), e;",
          "this.events[e] ? this.events[e].push(t) : this.events[e] = [t];",
          "return this.events[e] && (this.events[e].forEach((o) => {",
          "o.call(null, [t][0]);",
          "}), i = !0), i;",
          "if (de)",
          "return de;",
          "this.events = {}, de = this;",
          "constructor() {",
          "}",
          "if (t)",
          "return JSON.parse(t);",
          "this.type = e, this.message = t, this.data = i;",
          "if (!await this.eventEmitter.emit(\"SDK::Error\", { type: e, message: t, data: i }))",
          "this.customData = e, this.logger = new $e();",
          "let t = [], i = new Qe().getCurrentScriptUrlParams();",
          "if (t.length > 0 || !s.isActive)",
          "return;",
          "n = window[s.frontEndPropertyName], this.logger.debug(`input value: ${n}`);",
          "s.frontEndPropertyName.includes(\".\") ? (n = this.extractValue(s.frontEndPropertyName, !0), this.logger.debug(`input value: ${n}`)) : (n = this.extractValue(s.frontEndPropertyName), this.logger.debug(`input value: ${n}`));",
          "n = i[s.frontEndPropertyName], this.logger.debug(`input value: ${n}`);",
          "n = i[s.frontEndPropertyName], this.logger.debug(`input value: ${n}`);",
          "(n == null || n == null || n == \"\") && t.push(this.formatSegmentData(s));",
          "n != null && n !== \"\" && n.length != 0 && t.push(this.formatSegmentData(s));",
          "n.length == ((u = s == null ? void 0 : s.specifiedValues) == null ? void 0 : u.length) && (n.map((c) => {",
          "var d;",
          "(d = s == null ? void 0 : s.specifiedValues) != null && d.includes(c) ? (this.logger.debug(`does ${s.specifiedValues} include ${c}? - true`), S.push(!0)) : (this.logger.debug(`does ${s.specifiedValues} include ${c}? - false`), S.push(!1));",
          "}), S.indexOf(!1) == -1 && t.push(this.formatSegmentData(s)));",
          "((g = s == null ? void 0 : s.specifiedValues) == null ? void 0 : g.length) == 1 && s.specifiedValues[0] == n && t.push(this.formatSegmentData(s));",
          "n.length == ((f = s == null ? void 0 : s.specifiedValues) == null ? void 0 : f.length) && (n.map((c) => {",
          "var d;",
          "this.logger.debug(`does ${s.specifiedValues} equal ${c}?`), (d = s == null ? void 0 : s.specifiedValues) != null && d.includes(c) ? S.push(!0) : S.push(!1);",
          "}), S.indexOf(!1) == -1 && t.push(this.formatSegmentData(s)));",
          "((v = s == null ? void 0 : s.specifiedValues) == null ? void 0 : v.length) == 1 && s.specifiedValues[0] == n && t.push(this.formatSegmentData(s));",
          "this.logger.error(\"unable to process customer segments\", { error: s }), t = [];",
          "return t[0] ? this.logger.debug(`returning selected segment (id): ${(o = t[0]) == null ? void 0 : o.id}`) : this.logger.debug(\"no segments have passed the rule checks!\"), t[0] || { excludeSegment: !1 };",
          "excludeSegment: e.excludeSegment",
          "let i = Object.entries(this.customData).length > 0 ? [this.customData] : window.dataLayer, o = null;",
          "return t ? o = this.getNestedPropByPath(i, e) : o = this.getNestedProp(i, e), o;",
          "for (let o = 0; o < e.length && (i = this.getNestedProp(e[o], t), !i); o++)",
          ";",
          "if (o == t)",
          "return e[o];",
          "if ((e[o] instanceof Object || Array.isArray(e[o])) && (i = this.getNestedProp(e[o], t), i))",
          "let i = null, o = t.split(\".\");",
          "for (let s = 0; s < e.length && (i = o.reduce((n, u) => n && n[u], e[s]), !i); s++)",
          ";",
          "const ht = new Me(), lt = \"https://cdn.shoppinggives.com/charity-logos/categories/\";",
          "this.id = e.ein, this.name = e.name, this.website = e.website, this.logoUrl = e.logoUrl ? e.logoUrl : `${lt}${ht.categories[e.categoryId]}`, this.streetAddress = e.streetAddress, this.city = e.city, this.state = e.state, this.zip = e.zip, this.description = e.description, this.categoryId = e.categoryId, this.categoryName = e.categoryName, this.categoryLogoUrl = e.categoryLogoUrl, this.nteeFullCode = e.nteeFullCode, this.nteeMainCode = e.nteeMainCode, this.nteeSubCode = e.nteeSubCode;",
          "roundUpPos: 7",
          "this.onlinePurchase = ((t = e.find((f) => f.Id === N.onlinePurchase)) == null ? void 0 : t.IsActive) || !1, this.yotpoRedemption = ((i = e.find((f) => f.Id === N.yotpoRedemption)) == null ? void 0 : i.IsActive) || !1, this.roundUpDonation = ((o = e.find((f) => f.Id === N.roundUpDonation)) == null ? void 0 : o.IsActive) || !1, this.addOnDonation = ((s = e.find((f) => f.Id === N.addOnDonation)) == null ? void 0 : s.IsActive) || !1, this.pointOfSale = ((n = e.find((f) => f.Id === N.pointOfSale)) == null ? void 0 : n.IsActive) || !1, this.postPurchaseDonation = ((u = e.find((f) => f.Id === N.postPurchaseDonation)) == null ? void 0 : u.IsActive) || !1, this.roundUpPos = ((g = e.find((f) => f.Id === N.roundUpPos)) == null ? void 0 : g.IsActive) || !1;",
          "this.cmsIds.push({ id: n.id, price: n.price, quantity: n.quantity, discount: n.discount });",
          "this.cartDiscount = t, this.providedCauseId = i.toString(), this.ignoreDirectDonations = o, this.customerSegmentId = s;",
          "this.donationRecipients = e.donationRecipients, this.lineItems = (t = e.lineItems) != null ? t : [], this.totalDonationAmount = pt(e), this.showWidget = this.totalDonationAmount > 0;",
          "const ut = (a) => a.reduce((e, t) => e + t.totalDonationValue, 0), pt = (a) => {",
          "var t;",
          "let e = 0;",
          "return (t = a.lineItems) != null && t.length && (e += ut(a.lineItems)), a.cartDonation && (e += a.cartDonation.totalDonationValue), e;",
          "};",
          "this.cmsId = e, this.realPrice = t, this.providedCauseId = i, this.customerSegmentId = o != null ? o : \"\";",
          "this.totalDonationAmount = e.result.totalDonationValue, this.donationRecipients = e.result.portfolioId ? { [e.result.portfolioId]: e.result.totalDonationValue } : e.result.donations, this.excluded = e.result.excluded, this.donationType = e.result.donationType;",
          "this.totalDonationAmount = e.totalDonationAmount, this.showWidget = e.showWidget, this.donationBreakdown = (t = e.donationBreakdown) != null ? t : [], this.charities = (i = e.charities) != null ? i : [], this.selectedCauses = (o = e.selectedCauses) != null ? o : [], this.activeCampaigns = new He(e.activeCampaigns), this.searchEnabled = e.searchEnabled, this.letShoppersChoose = e.letShoppersChoose, this.trackingId = e.trackingId, this.directDonationInCart = (s = e.directDonationInCart) != null ? s : !1, this.storeName = e.storeName;",
          "this.totalDonationAmount = e.totalDonationAmount, this.donationBreakdown = (t = e.donationBreakdown) != null ? t : [], this.charities = (i = e.charities) != null ? i : [], this.selectedCauses = (o = e.selectedCauses) != null ? o : [], this.directDonationInCart = (s = e.directDonationInCart) != null ? s : !1;",
          "this.totalDonationAmount = e.totalDonationAmount, this.donationBreakdown = e.donationBreakdown, this.charities = e.charities, this.selectedCauses = e.selectedCauses, this.excluded = e.excluded;",
          "GET: \"get\",",
          "POST: \"post\",",
          "DELETE: \"delete\",",
          "PUT: \"put\"",
          "}, O = {",
          "STORES: \"stores\",",
          "PRODUCTS: \"products\",",
          "USERS: \"users\",",
          "CUSTOMER_SEGMENTS: \"customer_segments\",",
          "SCHEDULER: \"scheduler\",",
          "RECEIVABLES: \"receivables\",",
          "POST_PURCHASE_DONATIONS: \"post_purchase_donations\",",
          "ORGANIZATIONS: \"organizations\",",
          "SHOPIFY: \"shopify\",",
          "INTEGRATIONS: \"integrations\",",
          "EXTERNAL_REPORTS: \"external_reports\",",
          "DONATIONS: \"donations\",",
          "CHARITIES_CMD: \"charities_cdm\",",
          "CHARITIES: \"charities\",",
          "CDN: \"cdn\",",
          "PORTFOLIOS: \"portfolios\",",
          "REPORTING: \"reporting\",",
          "CONVERSIONS: \"conversions\",",
          "CUSTOMIZATIONS: \"customizations\",",
          "LOCATIONS: \"locations\",",
          "BANNERS: \"banners\",",
          "TRACKING: \"tracking\"",
          "};",
          "this.proxyUrl = `https://sdk.${o}shoppinggives.com/authorize`, this.baseUrl = `https://tracking.api.${o}shoppinggives.com`, this.storeId = e, this.errorHandler = i, this.useProxy = !1;",
          "return this.useProxy ? o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.POST,",
          "service: O.TRACKING,",
          "endpoint: \"/\",",
          "data: {",
          "body: { storeId: e, isTestMode: t, isForceTestMode: i }",
          "}",
          "})",
          "}).then((s) => s.json()) : o = await fetch(`${this.baseUrl}/`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({ storeId: e, isTestMode: t, isForceTestMode: i })",
          "}).then((s) => s.json()), o;",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error starting tracking\", o), {};",
          "return this.useProxy ? s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.PUT,",
          "service: O.TRACKING,",
          "endpoint: `${o}`,",
          "data: {",
          "body: { causeId: t, causeName: i }",
          "}",
          "})",
          "}).then((n) => n.json()) : s = await fetch(`${this.baseUrl}${o}`, {",
          "method: \"PUT\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({ causeId: t, causeName: i })",
          "}).then((n) => n.json()), s;",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error updating tracking\", o), !1;",
          "return this.useProxy ? i = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.TRACKING,",
          "endpoint: `${t}`",
          "})",
          "}).then((o) => o.json()) : i = await fetch(`${this.baseUrl}${t}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" }",
          "}).then((o) => o.json()), i;",
          "return this.useProxy ? s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.PUT,",
          "service: O.TRACKING,",
          "endpoint: `${o}`,",
          "data: {",
          "body: { integrationType: t, info: { ...i } }",
          "}",
          "})",
          "}).then((n) => n.json()) : s = await fetch(`${this.baseUrl}${o}`, {",
          "method: \"PUT\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "integrationType: t,",
          "info: { ...i }",
          "})",
          "}).then((n) => n.json()), s;",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error updating integration metadata\", o), !1;",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://stores.api.${s}shoppinggives.com`, this.storeId = e, this.cache = i, this.errorHandler = o, this.useProxy = !1;",
          "return this.useProxy ? t = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.STORES,",
          "endpoint: `${e}`,",
          "data: {}",
          "})",
          "}).then((i) => i.json()) : t = await fetch(`${this.baseUrl}${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}).then((i) => i.json()), new Ne(t, this.storeId);",
          "return console.log(e), this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving store\", e), {};",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://products.api.${s}shoppinggives.com`, this.storeId = e, this.cache = i, this.errorHandler = o, this.useProxy = !1;",
          "const o = \"/donation-by-cms-id\", s = JSON.stringify(t);",
          "return n || (this.useProxy ? n = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.PRODUCTS,",
          "endpoint: `${o}`,",
          "data: {",
          "params: {",
          "cmsId: t.cmsId,",
          "realPrice: t.realPrice,",
          "providedCauseId: t.providedCauseId ? t.providedCauseId : null,",
          "customerSegmentId: (i = t.customerSegmentId) != null ? i : null",
          "}",
          "}",
          "})",
          "}).then((u) => u.json()) : n = await fetch(`${this.baseUrl}${o}?${new URLSearchParams(t)}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" }",
          "}).then((u) => u.json()), this.cache.set(s, n), n);",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving product donation\", o), {};",
          "const i = \"/get-multiple-donation\", o = JSON.stringify(t);",
          "const { cmsIds: n, cartDiscount: u, ignoreDirectDonations: g, providedCauseId: f, customerSegmentId: v } = t;",
          "return s || (this.useProxy ? s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.POST,",
          "service: O.PRODUCTS,",
          "endpoint: `${i}`,",
          "data: {",
          "body: {",
          "cmsIds: n,",
          "cartDiscount: u,",
          "ignoreDirectDonations: g,",
          "providedCauseId: f,",
          "customerSegmentId: v != null ? v : null",
          "}",
          "}",
          "})",
          "}).then((S) => S.json()) : s = await fetch(`${this.baseUrl}${i}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify(t)",
          "}).then((S) => S.json()), this.cache.set(o, s), s);",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving cart donation\", i), {};",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://charities.api.${s}shoppinggives.com`, this.cache = t, this.errorHandler = i, this.storeId = o, this.useProxy = !1;",
          "const t = \"/search\", { searchTerm: i, skip: o, take: s, zip: n, city: u, state: g, category: f } = e, v = JSON.stringify(e);",
          "let S = await this.cache.get(v);",
          "return S || (this.useProxy ? S = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.CHARITIES,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "skip: o,",
          "take: s,",
          "q: i != null ? i : null,",
          "zip: n != null ? n : null,",
          "city: u != null ? u : null,",
          "state: g != null ? g : null,",
          "categoryId: f != null ? f : null",
          "}",
          "}",
          "})",
          "}).then((c) => c.json()) : S = await fetch(",
          "`${this.baseUrl}${t}?` + new URLSearchParams({",
          "q: `${i != null ? i : \"\"}`,",
          "skip: `${o}`,",
          "take: `${s}`,",
          "zip: `${n != null ? n : \"\"}`,",
          "city: `${u != null ? u : \"\"}`,",
          "state: `${g != null ? g : \"\"}`,",
          "categoryId: `${f != null ? f : \"\"}`",
          "}),",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}",
          ").then((c) => c.json()), this.cache.set(v, S), S);",
          "this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error searching charities\", t);",
          "const t = \"/search-by-eins\", i = e;",
          "return o || (this.useProxy ? o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.CHARITIES,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "eins: e",
          "}",
          "}",
          "})",
          "}).then((s) => s.json()) : o = await fetch(`${this.baseUrl}${t}?eins=${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}).then((s) => s.json()), this.cache.set(i, o), o);",
          "this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving charities by EIN\", t);",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://portfolios.api.${s}shoppinggives.com`, this.cache = t, this.errorHandler = i, this.storeId = o, this.useProxy = !1;",
          "const t = \"/cc-query-with-charities\", i = e;",
          "return o || (this.useProxy ? o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.PORTFOLIOS,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "id: e",
          "}",
          "}",
          "})",
          "}).then((s) => s.json()) : o = await fetch(`${this.baseUrl}${t}?id=${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}).then((s) => s.json()), this.cache.set(i, o), o);",
          "this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving portfolios\", t);",
          "var yt = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, fe = { exports: {} };",
          "(function(a, e) {",
          "(function(t, i) {",
          "var o = \"1.0.40\", s = \"\", n = \"?\", u = \"function\", g = \"undefined\", f = \"object\", v = \"string\", S = \"major\", c = \"model\", d = \"name\", h = \"type\", l = \"vendor\", p = \"version\", A = \"architecture\", j = \"console\", b = \"mobile\", y = \"tablet\", E = \"smarttv\", R = \"wearable\", oe = \"embedded\", re = 500, L = \"Amazon\", F = \"Apple\", be = \"ASUS\", ve = \"BlackBerry\", q = \"Browser\", J = \"Chrome\", Ve = \"Edge\", Y = \"Firefox\", K = \"Google\", ye = \"Huawei\", se = \"LG\", ae = \"Microsoft\", Se = \"Motorola\", B = \"Opera\", z = \"Samsung\", Ce = \"Sharp\", X = \"Sony\", ne = \"Xiaomi\", ce = \"Zebra\", Ie = \"Facebook\", ke = \"Chromium OS\", De = \"Mac OS\", Ee = \" Browser\", Le = function(C, I) {",
          "var m = {};",
          "for (var D in C)",
          "I[D] && I[D].length % 2 === 0 ? m[D] = I[D].concat(C[D]) : m[D] = C[D];",
          "return m;",
          "}, Z = function(C) {",
          "for (var I = {}, m = 0; m < C.length; m++)",
          "I[C[m].toUpperCase()] = C[m];",
          "return I;",
          "}, Ae = function(C, I) {",
          "return typeof C === v ? M(I).indexOf(M(C)) !== -1 : !1;",
          "}, M = function(C) {",
          "return C.toLowerCase();",
          "}, qe = function(C) {",
          "return typeof C === v ? C.replace(/[^\\d\\.]/g, s).split(\".\")[0] : i;",
          "}, he = function(C, I) {",
          "if (typeof C === v)",
          "return C = C.replace(/^\\s\\s*/, s), typeof I === g ? C : C.substring(0, re);",
          "}, V = function(C, I) {",
          "for (var m = 0, D, _, U, k, w, P; m < I.length && !w; ) {",
          "var le = I[m], Pe = I[m + 1];",
          "for (D = _ = 0; D < le.length && !w && le[D]; )",
          "if (w = le[D++].exec(C), w)",
          "for (U = 0; U < Pe.length; U++)",
          "P = w[++_], k = Pe[U], typeof k === f && k.length > 0 ? k.length === 2 ? typeof k[1] == u ? this[k[0]] = k[1].call(this, P) : this[k[0]] = k[1] : k.length === 3 ? typeof k[1] === u && !(k[1].exec && k[1].test) ? this[k[0]] = P ? k[1].call(this, P, k[2]) : i : this[k[0]] = P ? P.replace(k[1], k[2]) : i : k.length === 4 && (this[k[0]] = P ? k[3].call(this, P.replace(k[1], k[2])) : i) : this[k] = P || i;",
          "m += 2;",
          "}",
          "}, Q = function(C, I) {",
          "for (var m in I)",
          "if (typeof I[m] === f && I[m].length > 0) {",
          "for (var D = 0; D < I[m].length; D++)",
          "if (Ae(I[m][D], C))",
          "return m === n ? i : m;",
          "} else if (Ae(I[m], C))",
          "return m === n ? i : m;",
          "return I.hasOwnProperty(\"*\") ? I[\"*\"] : C;",
          "}, Je = {",
          "\"1.0\": \"/8\",",
          "\"1.2\": \"/1\",",
          "\"1.3\": \"/3\",",
          "\"2.0\": \"/412\",",
          "\"2.0.2\": \"/416\",",
          "\"2.0.3\": \"/417\",",
          "\"2.0.4\": \"/419\",",
          "\"?\": \"/\"",
          "}, xe = {",
          "ME: \"4.90\",",
          "\"NT 3.11\": \"NT3.51\",",
          "\"NT 4.0\": \"NT4.0\",",
          "2e3: \"NT 5.0\",",
          "XP: [\"NT 5.1\", \"NT 5.2\"],",
          "Vista: \"NT 6.0\",",
          "7: \"NT 6.1\",",
          "8: \"NT 6.2\",",
          "\"8.1\": \"NT 6.3\",",
          "10: [\"NT 6.4\", \"NT 10.0\"],",
          "RT: \"ARM\"",
          "}, Ue = {",
          "browser: [",
          "[",
          "/\\b(?:crmo|crios)\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Chrome\"]],",
          "[",
          "/edg(?:e|ios|a)?\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Edge\"]],",
          "[",
          "/(opera mini)\\/([-\\w\\.]+)/i,",
          "/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,",
          "/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/opios[\\/ ]+([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" Mini\"]],",
          "[",
          "/\\bop(?:rg)?x\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" GX\"]],",
          "[",
          "/\\bopr\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B]],",
          "[",
          "/\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Baidu\"]],",
          "[",
          "/\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i",
          "],",
          "[p, [d, \"Maxthon\"]],",
          "[",
          "/(kindle)\\/([\\w\\.]+)/i,",
          "/(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,",
          "/(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,",
          "/(?:ms|\\()(ie) ([\\w\\.]+)/i,",
          "/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\\/([-\\w\\.]+)/i,",
          "/(heytap|ovi|115)browser\\/([\\d\\.]+)/i,",
          "/(weibo)__([\\d\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/quark(?:pc)?\\/([-\\w\\.]+)/i",
          "],",
          "[p, [d, \"Quark\"]],",
          "[",
          "/\\bddg\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"DuckDuckGo\"]],",
          "[",
          "/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i",
          "],",
          "[p, [d, \"UC\" + q]],",
          "[",
          "/microm.+\\bqbcore\\/([\\w\\.]+)/i,",
          "/\\bqbcore\\/([\\w\\.]+).+microm/i,",
          "/micromessenger\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"WeChat\"]],",
          "[",
          "/konqueror\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Konqueror\"]],",
          "[",
          "/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i",
          "],",
          "[p, [d, \"IE\"]],",
          "[",
          "/ya(?:search)?browser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Yandex\"]],",
          "[",
          "/slbrowser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Smart Lenovo \" + q]],",
          "[",
          "/(avast|avg)\\/([\\w\\.]+)/i",
          "],",
          "[[d, /(.+)/, \"$1 Secure \" + q], p],",
          "[",
          "/\\bfocus\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, Y + \" Focus\"]],",
          "[",
          "/\\bopt\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" Touch\"]],",
          "[",
          "/coc_coc\\w+\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Coc Coc\"]],",
          "[",
          "/dolfin\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Dolphin\"]],",
          "[",
          "/coast\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" Coast\"]],",
          "[",
          "/miuibrowser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"MIUI\" + Ee]],",
          "[",
          "/fxios\\/([\\w\\.-]+)/i",
          "],",
          "[p, [d, Y]],",
          "[",
          "/\\bqihoobrowser\\/?([\\w\\.]*)/i",
          "],",
          "[p, [d, \"360\"]],",
          "[",
          "/\\b(qq)\\/([\\w\\.]+)/i",
          "],",
          "[[d, /(.+)/, \"$1Browser\"], p],",
          "[",
          "/(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i",
          "],",
          "[[d, /(.+)/, \"$1\" + Ee], p],",
          "[",
          "/samsungbrowser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, z + \" Internet\"]],",
          "[",
          "/metasr[\\/ ]?([\\d\\.]+)/i",
          "],",
          "[p, [d, \"Sogou Explorer\"]],",
          "[",
          "/(sogou)mo\\w+\\/([\\d\\.]+)/i",
          "],",
          "[[d, \"Sogou Mobile\"], p],",
          "[",
          "/(electron)\\/([\\w\\.]+) safari/i,",
          "/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,",
          "/m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/(lbbrowser|rekonq)/i,",
          "/\\[(linkedin)app\\]/i",
          "],",
          "[d],",
          "[",
          "/ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,",
          "/ome\\/([\\w\\.]+).+qihu (360)[es]e/i",
          "],",
          "[p, d],",
          "[",
          "/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i",
          "],",
          "[[d, Ie], p],",
          "[",
          "/(Klarna)\\/([\\w\\.]+)/i,",
          "/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,",
          "/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,",
          "/safari (line)\\/([\\w\\.]+)/i,",
          "/\\b(line)\\/([\\w\\.]+)\\/iab/i,",
          "/(alipay)client\\/([\\w\\.]+)/i,",
          "/(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,",
          "/(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/\\bgsa\\/([\\w\\.]+) .*safari\\//i",
          "],",
          "[p, [d, \"GSA\"]],",
          "[",
          "/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i",
          "],",
          "[p, [d, \"TikTok\"]],",
          "[",
          "/headlesschrome(?:\\/([\\w\\.]+)| )/i",
          "],",
          "[p, [d, J + \" Headless\"]],",
          "[",
          "/ wv\\).+(chrome)\\/([\\w\\.]+)/i",
          "],",
          "[[d, J + \" WebView\"], p],",
          "[",
          "/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i",
          "],",
          "[p, [d, \"Android \" + q]],",
          "[",
          "/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i",
          "],",
          "[p, [d, \"Mobile Safari\"]],",
          "[",
          "/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i",
          "],",
          "[p, d],",
          "[",
          "/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i",
          "],",
          "[d, [p, Q, Je]],",
          "[",
          "/(webkit|khtml)\\/([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i",
          "],",
          "[[d, \"Netscape\"], p],",
          "[",
          "/(wolvic|librewolf)\\/([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/mobile vr; rv:([\\w\\.]+)\\).+firefox/i",
          "],",
          "[p, [d, Y + \" Reality\"]],",
          "[",
          "/ekiohf.+(flow)\\/([\\w\\.]+)/i,",
          "/(swiftfox)/i,",
          "/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,",
          "/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,",
          "/(firefox)\\/([\\w\\.]+)/i,",
          "/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,",
          "/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,",
          "/(links) \\(([\\w\\.]+)/i",
          "],",
          "[d, [p, /_/g, \".\"]],",
          "[",
          "/(cobalt)\\/([\\w\\.]+)/i",
          "],",
          "[d, [p, /master.|lts./, \"\"]]",
          "],",
          "cpu: [",
          "[",
          "/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i",
          "],",
          "[[A, \"amd64\"]],",
          "[",
          "/(ia32(?=;))/i",
          "],",
          "[[A, M]],",
          "[",
          "/((?:i[346]|x)86)[;\\)]/i",
          "],",
          "[[A, \"ia32\"]],",
          "[",
          "/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i",
          "],",
          "[[A, \"arm64\"]],",
          "[",
          "/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i",
          "],",
          "[[A, \"armhf\"]],",
          "[",
          "/windows (ce|mobile); ppc;/i",
          "],",
          "[[A, \"arm\"]],",
          "[",
          "/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i",
          "],",
          "[[A, /ower/, s, M]],",
          "[",
          "/(sun4\\w)[;\\)]/i",
          "],",
          "[[A, \"sparc\"]],",
          "[",
          "/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i",
          "],",
          "[[A, M]]",
          "],",
          "device: [",
          "[",
          "/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i",
          "],",
          "[c, [l, z], [h, y]],",
          "[",
          "/\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,",
          "/samsung[- ]((?!sm-[lr])[-\\w]+)/i,",
          "/sec-(sgh\\w+)/i",
          "],",
          "[c, [l, z], [h, b]],",
          "[",
          "/(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i",
          "],",
          "[c, [l, F], [h, b]],",
          "[",
          "/\\((ipad);[-\\w\\),; ]+apple/i,",
          "/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,",
          "/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i",
          "],",
          "[c, [l, F], [h, y]],",
          "[",
          "/(macintosh);/i",
          "],",
          "[c, [l, F]],",
          "[",
          "/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i",
          "],",
          "[c, [l, Ce], [h, b]],",
          "[",
          "/(?:honor)([-\\w ]+)[;\\)]/i",
          "],",
          "[c, [l, \"Honor\"], [h, b]],",
          "[",
          "/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i",
          "],",
          "[c, [l, ye], [h, y]],",
          "[",
          "/(?:huawei)([-\\w ]+)[;\\)]/i,",
          "/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i",
          "],",
          "[c, [l, ye], [h, b]],",
          "[",
          "/\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,",
          "/\\b; (\\w+) build\\/hm\\1/i,",
          "/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,",
          "/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,",
          "/oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,",
          "/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i",
          "],",
          "[[c, /_/g, \" \"], [l, ne], [h, b]],",
          "[",
          "/oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,",
          "/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i",
          "],",
          "[[c, /_/g, \" \"], [l, ne], [h, y]],",
          "[",
          "/; (\\w+) bui.+ oppo/i,",
          "/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i",
          "],",
          "[c, [l, \"OPPO\"], [h, b]],",
          "[",
          "/\\b(opd2\\d{3}a?) bui/i",
          "],",
          "[c, [l, \"OPPO\"], [h, y]],",
          "[",
          "/vivo (\\w+)(?: bui|\\))/i,",
          "/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i",
          "],",
          "[c, [l, \"Vivo\"], [h, b]],",
          "[",
          "/\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i",
          "],",
          "[c, [l, \"Realme\"], [h, b]],",
          "[",
          "/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,",
          "/\\bmot(?:orola)?[- ](\\w*)/i,",
          "/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i",
          "],",
          "[c, [l, Se], [h, b]],",
          "[",
          "/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i",
          "],",
          "[c, [l, Se], [h, y]],",
          "[",
          "/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i",
          "],",
          "[c, [l, se], [h, y]],",
          "[",
          "/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,",
          "/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,",
          "/\\blg-?([\\d\\w]+) bui/i",
          "],",
          "[c, [l, se], [h, b]],",
          "[",
          "/(ideatab[-\\w ]+)/i,",
          "/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i",
          "],",
          "[c, [l, \"Lenovo\"], [h, y]],",
          "[",
          "/(?:maemo|nokia).*(n900|lumia \\d+)/i,",
          "/nokia[-_ ]?([-\\w\\.]*)/i",
          "],",
          "[[c, /_/g, \" \"], [l, \"Nokia\"], [h, b]],",
          "[",
          "/(pixel c)\\b/i",
          "],",
          "[c, [l, K], [h, y]],",
          "[",
          "/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i",
          "],",
          "[c, [l, K], [h, b]],",
          "[",
          "/droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i",
          "],",
          "[c, [l, X], [h, b]],",
          "[",
          "/sony tablet [ps]/i,",
          "/\\b(?:sony)?sgp\\w+(?: bui|\\))/i",
          "],",
          "[[c, \"Xperia Tablet\"], [l, X], [h, y]],",
          "[",
          "/ (kb2005|in20[12]5|be20[12][59])\\b/i,",
          "/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i",
          "],",
          "[c, [l, \"OnePlus\"], [h, b]],",
          "[",
          "/(alexa)webm/i,",
          "/(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,",
          "/(kf[a-z]+)( bui|\\)).+silk\\//i",
          "],",
          "[c, [l, L], [h, y]],",
          "[",
          "/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i",
          "],",
          "[[c, /(.+)/g, \"Fire Phone $1\"], [l, L], [h, b]],",
          "[",
          "/(playbook);[-\\w\\),; ]+(rim)/i",
          "],",
          "[c, l, [h, y]],",
          "[",
          "/\\b((?:bb[a-f]|st[hv])100-\\d)/i,",
          "/\\(bb10; (\\w+)/i",
          "],",
          "[c, [l, ve], [h, b]],",
          "[",
          "/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i",
          "],",
          "[c, [l, be], [h, y]],",
          "[",
          "/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i",
          "],",
          "[c, [l, be], [h, b]],",
          "[",
          "/(nexus 9)/i",
          "],",
          "[c, [l, \"HTC\"], [h, y]],",
          "[",
          "/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,",
          "/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,",
          "/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i",
          "],",
          "[l, [c, /_/g, \" \"], [h, b]],",
          "[",
          "/droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i",
          "],",
          "[c, [l, \"TCL\"], [h, y]],",
          "[",
          "/(itel) ((\\w+))/i",
          "],",
          "[[l, M], c, [h, Q, { tablet: [\"p10001l\", \"w7001\"], \"*\": \"mobile\" }]],",
          "[",
          "/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i",
          "],",
          "[c, [l, \"Acer\"], [h, y]],",
          "[",
          "/droid.+; (m[1-5] note) bui/i,",
          "/\\bmz-([-\\w]{2,})/i",
          "],",
          "[c, [l, \"Meizu\"], [h, b]],",
          "[",
          "/; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i",
          "],",
          "[c, [l, \"Ulefone\"], [h, b]],",
          "[",
          "/; (energy ?\\w+)(?: bui|\\))/i,",
          "/; energizer ([\\w ]+)(?: bui|\\))/i",
          "],",
          "[c, [l, \"Energizer\"], [h, b]],",
          "[",
          "/; cat (b35);/i,",
          "/; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i",
          "],",
          "[c, [l, \"Cat\"], [h, b]],",
          "[",
          "/((?:new )?andromax[\\w- ]+)(?: bui|\\))/i",
          "],",
          "[c, [l, \"Smartfren\"], [h, b]],",
          "[",
          "/droid.+; (a(?:015|06[35]|142p?))/i",
          "],",
          "[c, [l, \"Nothing\"], [h, b]],",
          "[",
          "/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,",
          "/; (imo) ((?!tab)[\\w ]+?)(?: bui|\\))/i,",
          "/(hp) ([\\w ]+\\w)/i,",
          "/(asus)-?(\\w+)/i,",
          "/(microsoft); (lumia[\\w ]+)/i,",
          "/(lenovo)[-_ ]?([-\\w]+)/i,",
          "/(jolla)/i,",
          "/(oppo) ?([\\w ]+) bui/i",
          "],",
          "[l, c, [h, b]],",
          "[",
          "/(imo) (tab \\w+)/i,",
          "/(kobo)\\s(ereader|touch)/i,",
          "/(archos) (gamepad2?)/i,",
          "/(hp).+(touchpad(?!.+tablet)|tablet)/i,",
          "/(kindle)\\/([\\w\\.]+)/i,",
          "/(nook)[\\w ]+build\\/(\\w+)/i,",
          "/(dell) (strea[kpr\\d ]*[\\dko])/i,",
          "/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,",
          "/(trinity)[- ]*(t\\d{3}) bui/i,",
          "/(gigaset)[- ]+(q\\w{1,9}) bui/i,",
          "/(vodafone) ([\\w ]+)(?:\\)| bui)/i",
          "],",
          "[l, c, [h, y]],",
          "[",
          "/(surface duo)/i",
          "],",
          "[c, [l, ae], [h, y]],",
          "[",
          "/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i",
          "],",
          "[c, [l, \"Fairphone\"], [h, b]],",
          "[",
          "/(u304aa)/i",
          "],",
          "[c, [l, \"AT&T\"], [h, b]],",
          "[",
          "/\\bsie-(\\w*)/i",
          "],",
          "[c, [l, \"Siemens\"], [h, b]],",
          "[",
          "/\\b(rct\\w+) b/i",
          "],",
          "[c, [l, \"RCA\"], [h, y]],",
          "[",
          "/\\b(venue[\\d ]{2,7}) b/i",
          "],",
          "[c, [l, \"Dell\"], [h, y]],",
          "[",
          "/\\b(q(?:mv|ta)\\w+) b/i",
          "],",
          "[c, [l, \"Verizon\"], [h, y]],",
          "[",
          "/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i",
          "],",
          "[c, [l, \"Barnes & Noble\"], [h, y]],",
          "[",
          "/\\b(tm\\d{3}\\w+) b/i",
          "],",
          "[c, [l, \"NuVision\"], [h, y]],",
          "[",
          "/\\b(k88) b/i",
          "],",
          "[c, [l, \"ZTE\"], [h, y]],",
          "[",
          "/\\b(nx\\d{3}j) b/i",
          "],",
          "[c, [l, \"ZTE\"], [h, b]],",
          "[",
          "/\\b(gen\\d{3}) b.+49h/i",
          "],",
          "[c, [l, \"Swiss\"], [h, b]],",
          "[",
          "/\\b(zur\\d{3}) b/i",
          "],",
          "[c, [l, \"Swiss\"], [h, y]],",
          "[",
          "/\\b((zeki)?tb.*\\b) b/i",
          "],",
          "[c, [l, \"Zeki\"], [h, y]],",
          "[",
          "/\\b([yr]\\d{2}) b/i,",
          "/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i",
          "],",
          "[[l, \"Dragon Touch\"], c, [h, y]],",
          "[",
          "/\\b(ns-?\\w{0,9}) b/i",
          "],",
          "[c, [l, \"Insignia\"], [h, y]],",
          "[",
          "/\\b((nxa|next)-?\\w{0,9}) b/i",
          "],",
          "[c, [l, \"NextBook\"], [h, y]],",
          "[",
          "/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i",
          "],",
          "[[l, \"Voice\"], c, [h, b]],",
          "[",
          "/\\b(lvtel\\-)?(v1[12]) b/i",
          "],",
          "[[l, \"LvTel\"], c, [h, b]],",
          "[",
          "/\\b(ph-1) /i",
          "],",
          "[c, [l, \"Essential\"], [h, b]],",
          "[",
          "/\\b(v(100md|700na|7011|917g).*\\b) b/i",
          "],",
          "[c, [l, \"Envizen\"], [h, y]],",
          "[",
          "/\\b(trio[-\\w\\. ]+) b/i",
          "],",
          "[c, [l, \"MachSpeed\"], [h, y]],",
          "[",
          "/\\btu_(1491) b/i",
          "],",
          "[c, [l, \"Rotor\"], [h, y]],",
          "[",
          "/(shield[\\w ]+) b/i",
          "],",
          "[c, [l, \"Nvidia\"], [h, y]],",
          "[",
          "/(sprint) (\\w+)/i",
          "],",
          "[l, c, [h, b]],",
          "[",
          "/(kin\\.[onetw]{3})/i",
          "],",
          "[[c, /\\./g, \" \"], [l, ae], [h, b]],",
          "[",
          "/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i",
          "],",
          "[c, [l, ce], [h, y]],",
          "[",
          "/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i",
          "],",
          "[c, [l, ce], [h, b]],",
          "[",
          "/smart-tv.+(samsung)/i",
          "],",
          "[l, [h, E]],",
          "[",
          "/hbbtv.+maple;(\\d+)/i",
          "],",
          "[[c, /^/, \"SmartTV\"], [l, z], [h, E]],",
          "[",
          "/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i",
          "],",
          "[[l, se], [h, E]],",
          "[",
          "/(apple) ?tv/i",
          "],",
          "[l, [c, F + \" TV\"], [h, E]],",
          "[",
          "/crkey/i",
          "],",
          "[[c, J + \"cast\"], [l, K], [h, E]],",
          "[",
          "/droid.+aft(\\w+)( bui|\\))/i",
          "],",
          "[c, [l, L], [h, E]],",
          "[",
          "/\\(dtv[\\);].+(aquos)/i,",
          "/(aquos-tv[\\w ]+)\\)/i",
          "],",
          "[c, [l, Ce], [h, E]],",
          "[",
          "/(bravia[\\w ]+)( bui|\\))/i",
          "],",
          "[c, [l, X], [h, E]],",
          "[",
          "/(mitv-\\w{5}) bui/i",
          "],",
          "[c, [l, ne], [h, E]],",
          "[",
          "/Hbbtv.*(technisat) (.*);/i",
          "],",
          "[l, c, [h, E]],",
          "[",
          "/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,",
          "/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i",
          "],",
          "[[l, he], [c, he], [h, E]],",
          "[",
          "/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i",
          "],",
          "[[h, E]],",
          "[",
          "/(ouya)/i,",
          "/(nintendo) ([wids3utch]+)/i",
          "],",
          "[l, c, [h, j]],",
          "[",
          "/droid.+; (shield) bui/i",
          "],",
          "[c, [l, \"Nvidia\"], [h, j]],",
          "[",
          "/(playstation [345portablevi]+)/i",
          "],",
          "[c, [l, X], [h, j]],",
          "[",
          "/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i",
          "],",
          "[c, [l, ae], [h, j]],",
          "[",
          "/\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i",
          "],",
          "[c, [l, z], [h, R]],",
          "[",
          "/((pebble))app/i",
          "],",
          "[l, c, [h, R]],",
          "[",
          "/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i",
          "],",
          "[c, [l, F], [h, R]],",
          "[",
          "/droid.+; (glass) \\d/i",
          "],",
          "[c, [l, K], [h, R]],",
          "[",
          "/droid.+; (wt63?0{2,3})\\)/i",
          "],",
          "[c, [l, ce], [h, R]],",
          "[",
          "/droid.+; (glass) \\d/i",
          "],",
          "[c, [l, K], [h, R]],",
          "[",
          "/(pico) (4|neo3(?: link|pro)?)/i",
          "],",
          "[l, c, [h, R]],",
          "[",
          "/; (quest( \\d| pro)?)/i",
          "],",
          "[c, [l, Ie], [h, R]],",
          "[",
          "/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i",
          "],",
          "[l, [h, oe]],",
          "[",
          "/(aeobc)\\b/i",
          "],",
          "[c, [l, L], [h, oe]],",
          "[",
          "/droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i",
          "],",
          "[c, [h, b]],",
          "[",
          "/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i",
          "],",
          "[c, [h, y]],",
          "[",
          "/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i",
          "],",
          "[[h, y]],",
          "[",
          "/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i",
          "],",
          "[[h, b]],",
          "[",
          "/(android[-\\w\\. ]{0,9});.+buil/i",
          "],",
          "[c, [l, \"Generic\"]]",
          "],",
          "engine: [",
          "[",
          "/windows.+ edge\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, Ve + \"HTML\"]],",
          "[",
          "/(arkweb)\\/([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Blink\"]],",
          "[",
          "/(presto)\\/([\\w\\.]+)/i,",
          "/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i,",
          "/ekioh(flow)\\/([\\w\\.]+)/i,",
          "/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,",
          "/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,",
          "/\\b(libweb)/i",
          "],",
          "[d, p],",
          "[",
          "/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i",
          "],",
          "[p, d]",
          "],",
          "os: [",
          "[",
          "/microsoft (windows) (vista|xp)/i",
          "],",
          "[d, p],",
          "[",
          "/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i",
          "],",
          "[d, [p, Q, xe]],",
          "[",
          "/windows nt 6\\.2; (arm)/i,",
          "/windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,",
          "/(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i",
          "],",
          "[[p, Q, xe], [d, \"Windows\"]],",
          "[",
          "/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,",
          "/(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,",
          "/cfnetwork\\/.+darwin/i",
          "],",
          "[[p, /_/g, \".\"], [d, \"iOS\"]],",
          "[",
          "/(mac os x) ?([\\w\\. ]*)/i,",
          "/(macintosh|mac_powerpc\\b)(?!.+haiku)/i",
          "],",
          "[[d, De], [p, /_/g, \".\"]],",
          "[",
          "/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i",
          "],",
          "[p, d],",
          "[",
          "/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\\/ ]?([\\w\\.]*)/i,",
          "/(blackberry)\\w*\\/([\\w\\.]*)/i,",
          "/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,",
          "/\\((series40);/i",
          "],",
          "[d, p],",
          "[",
          "/\\(bb(10);/i",
          "],",
          "[p, [d, ve]],",
          "[",
          "/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i",
          "],",
          "[p, [d, \"Symbian\"]],",
          "[",
          "/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, Y + \" OS\"]],",
          "[",
          "/web0s;.+rt(tv)/i,",
          "/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"webOS\"]],",
          "[",
          "/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i",
          "],",
          "[p, [d, \"watchOS\"]],",
          "[",
          "/crkey\\/([\\d\\.]+)/i",
          "],",
          "[p, [d, J + \"cast\"]],",
          "[",
          "/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i",
          "],",
          "[[d, ke], p],",
          "[",
          "/panasonic;(viera)/i,",
          "/(netrange)mmh/i,",
          "/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,",
          "/(nintendo|playstation) ([wids345portablevuch]+)/i,",
          "/(xbox); +xbox ([^\\);]+)/i,",
          "/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,",
          "/(mint)[\\/\\(\\) ]?(\\w*)/i,",
          "/(mageia|vectorlinux)[; ]/i,",
          "/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,",
          "/(hurd|linux) ?([\\w\\.]*)/i,",
          "/(gnu) ?([\\w\\.]*)/i,",
          "/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,",
          "/(haiku) (\\w+)/i",
          "],",
          "[d, p],",
          "[",
          "/(sunos) ?([\\w\\.\\d]*)/i",
          "],",
          "[[d, \"Solaris\"], p],",
          "[",
          "/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,",
          "/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,",
          "/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,",
          "/(unix) ?([\\w\\.]*)/i",
          "],",
          "[d, p]",
          "]",
          "}, x = function(C, I) {",
          "if (typeof C === f && (I = C, C = i), !(this instanceof x))",
          "return new x(C, I).getResult();",
          "var m = typeof t !== g && t.navigator ? t.navigator : i, D = C || (m && m.userAgent ? m.userAgent : s), _ = m && m.userAgentData ? m.userAgentData : i, U = I ? Le(Ue, I) : Ue, k = m && m.userAgent == D;",
          "return this.getBrowser = function() {",
          "var w = {};",
          "return w[d] = i, w[p] = i, V.call(w, D, U.browser), w[S] = qe(w[p]), k && m && m.brave && typeof m.brave.isBrave == u && (w[d] = \"Brave\"), w;",
          "}, this.getCPU = function() {",
          "var w = {};",
          "return w[A] = i, V.call(w, D, U.cpu), w;",
          "}, this.getDevice = function() {",
          "var w = {};",
          "return w[l] = i, w[c] = i, w[h] = i, V.call(w, D, U.device), k && !w[h] && _ && _.mobile && (w[h] = b), k && w[c] == \"Macintosh\" && m && typeof m.standalone !== g && m.maxTouchPoints && m.maxTouchPoints > 2 && (w[c] = \"iPad\", w[h] = y), w;",
          "}, this.getEngine = function() {",
          "var w = {};",
          "return w[d] = i, w[p] = i, V.call(w, D, U.engine), w;",
          "}, this.getOS = function() {",
          "var w = {};",
          "return w[d] = i, w[p] = i, V.call(w, D, U.os), k && !w[d] && _ && _.platform && _.platform != \"Unknown\" && (w[d] = _.platform.replace(/chrome os/i, ke).replace(/macos/i, De)), w;",
          "}, this.getResult = function() {",
          "return {",
          "ua: this.getUA(),",
          "browser: this.getBrowser(),",
          "engine: this.getEngine(),",
          "os: this.getOS(),",
          "device: this.getDevice(),",
          "cpu: this.getCPU()",
          "};",
          "}, this.getUA = function() {",
          "return D;",
          "}, this.setUA = function(w) {",
          "return D = typeof w === v && w.length > re ? he(w, re) : w, this;",
          "}, this.setUA(D), this;",
          "};",
          "x.VERSION = o, x.BROWSER = Z([d, p, S]), x.CPU = Z([A]), x.DEVICE = Z([c, l, h, j, b, E, y, R, oe]), x.ENGINE = x.OS = Z([d, p]), a.exports && (e = a.exports = x), e.UAParser = x;",
          "H.ua = W.getResult(), H.ua.get = function() {",
          "return W.getUA();",
          "}, H.ua.set = function(C) {",
          "W.setUA(C);",
          "var I = W.getResult();",
          "for (var m in I)",
          "H.ua[m] = I[m];",
          "};",
          "if (typeof a != \"string\")",
          "return !1;",
          "let e = a.trim().replace(/[\\s-\\{\\}\\(\\)]/g, \"\");",
          "if (e.length !== 32)",
          "return !1;",
          "let t = /^[0-9A-Fa-f]+$/;",
          "return t.lastIndex = 0, t.test(e);",
          "}, It = \"0.1.15\", Oe = (a, e) => {",
          "fetch(`${a}/events`, {",
          "method: \"POST\",",
          "headers: {",
          "\"Content-Type\": \"application/json\",",
          "\"store-id\": e.store_id",
          "},",
          "body: JSON.stringify(e)",
          "});",
          "}, je = /* @__PURE__ */ ((a) => (a[a.StoreDonation = 0] = \"StoreDonation\", a[a.AddOn = 1] = \"AddOn\", a[a.RoundUp = 2] = \"RoundUp\", a))(je || {}), Fe = /* @__PURE__ */ ((a) => (a[a.Compact = 0] = \"Compact\", a[a.Contained = 1] = \"Contained\", a[a.Full = 2] = \"Full\", a[a.Default = 3] = \"Default\", a))(Fe || {}), Ke = /* @__PURE__ */ ((a) => (a[a.Automatic = 0] = \"Automatic\", a[a.Manual = 1] = \"Manual\", a[a[\"Theme Section\"] = 2] = \"Theme Section\", a[a[\"Checkout Ext\"] = 3] = \"Checkout Ext\", a))(Ke || {}), Be = /* @__PURE__ */ ((a) => (a[a.Cart = 0] = \"Cart\", a[a.Product = 1] = \"Product\", a[a.Checkout = 2] = \"Checkout\", a[a.Unknown = 3] = \"Unknown\", a))(Be || {}), $ = \"unknown\", kt = 5e3, Dt = class {",
          "constructor(a) {",
          "r(this, \"data\", {});",
          "r(this, \"eventList\", []);",
          "r(this, \"baseUrl\", \"\");",
          "const { storeId: e, trackingId: t, baseUrl: i, metadata: o } = a;",
          "if (!Ct(e))",
          "throw new Error(\"Invalid StoreId\");",
          "this.data.client_properties = this.hydrate_properties(), this.data.store_id = e, this.data.tracking_id = t, this.data.metadata = o, this.baseUrl = i;",
          "}",
          "track(a, e) {",
          "this.data.event = {",
          "time_stamp: Date.now(),",
          "event_type: a,",
          "event_version: It,",
          "payload: e",
          "};",
          "let t = { ...this.data };",
          "Oe(this.baseUrl, t);",
          "}",
          "identify({ email: a, id: e }) {",
          "this.data.customer = {",
          "id: e,",
          "email: a",
          "};",
          "}",
          "metadata(a = {}) {",
          "this.data.metadata = {",
          "...this.data.metadata,",
          "...a",
          "};",
          "}",
          "poll() {",
          "setTimeout(() => {",
          "if (this.eventList.length > 0)",
          "try {",
          "Oe(this.baseUrl, this.eventList), this.eventList = [];",
          "} catch {",
          "throw new Error(\"Error Sending Events\");",
          "}",
          "this.poll();",
          "}, kt);",
          "}",
          "hydrate_properties() {",
          "var v;",
          "let a, e, t, i, o = \"unknown\", s, n, { device: u, platform: g, browser: f } = navigator != null && navigator.userAgentData ? this.modernUA() : this.legacyUA();",
          "a = u, e = g, t = f.name, i = f.version;",
          "try {",
          "s = window.location.href;",
          "} catch {",
          "s = o;",
          "try {",
          "n = document.referrer;",
          "} catch {",
          "n = o;",
          "return {",
          "user_agent: (v = navigator.userAgent) != null ? v : o,",
          "url: s.toLowerCase(),",
          "device_type: a.toLowerCase(),",
          "browser_type: t.toLowerCase(),",
          "browser_version: i.toLowerCase(),",
          "platform_type: e.toLowerCase(),",
          "referral_url: n.toLowerCase()",
          "};",
          "}",
          "modernUA() {",
          "var u, g;",
          "let a = [\"Brave\", \"Chrome\", \"Firefox\", \"AppleWebKit\", \"Safari\", \"Mozilla\"], e, t, i;",
          "t = navigator.userAgentData.mobile, i = navigator.userAgentData.platform.toLowerCase();",
          "let o = navigator.userAgentData.brands;",
          "o && (e = o.filter(({ brand: f, version: v }) => a.includes(f) ? {",
          "brand: f,",
          "version: v",
          "} : null));",
          "let s = (u = e[0]) == null ? void 0 : u.brand, n = (g = e[0]) == null ? void 0 : g.version;",
          "return {",
          "device: t ? \"mobile\" : \"desktop\",",
          "platform: i != null ? i : $,",
          "browser: {",
          "name: s != null ? s : $,",
          "version: n != null ? n : $",
          "};",
          "}",
          "legacyUA() {",
          "var o, s;",
          "let { os: a, browser: e, device: t } = St(), i = null;",
          "switch (t == null ? void 0 : t.type) {",
          "case \"mobile\":",
          "i = \"mobile\";",
          "break;",
          "case \"tablet\":",
          "i = \"tablet\";",
          "break;",
          "case \"console\":",
          "i = \"console\";",
          "break;",
          "default:",
          "i = \"desktop\";",
          "break;",
          "return {",
          "device: i != null ? i : $,",
          "platform: a != null && a.name ? a.name.toLowerCase() : $,",
          "browser: {",
          "name: (o = e == null ? void 0 : e.name) != null ? o : $,",
          "version: (s = e == null ? void 0 : e.version) != null ? s : $",
          "};",
          "}",
          "}, Re = Dt;",
          "totalDonationAmount: \"$\" + t.toFixed(2)",
          "this.currency = e, this.currencyRate = t;",
          "this.cache = e.persistence ? e.persistence : new st(), this.eventEmitter = rt, this.errorHandler = new nt(this.eventEmitter), this.storeId = e.storeId, this.environment = e.environment, this.charitiesAdapter = new bt(e.environment, this.cache, this.errorHandler, this.storeId), this.portfoliosAdapter = new vt(e.environment, this.cache, this.errorHandler, this.storeId), this.storeAdapter = new mt(this.storeId, e.environment, this.cache, this.errorHandler), this.trackingAdapter = new wt(this.storeId, e.environment, this.errorHandler), this.categoriesService = new Me(), this.store = new Ne({}, \"\"), this.tracking = {}, this.testMode = e.testMode, this.selectedCauses = [], this.logger = e.logger ? e.logger : new $e(), this.getStore(), this.dataLayer = e.dataLayer ? e.dataLayer : {};",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting selected causes\", e), {};",
          "let g = await this.charitiesAdapter.search({ searchTerm: i, skip: e, take: t, zip: o, city: s, state: n, category: u });",
          "return this.track(\"Action::Searched\", {",
          "search: i,",
          "category: u",
          "}), this.emit(\"Search::Finished\", { searchResults: g }), g.map((f) => new dt(f));",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error searching causes\", g), {};",
          "const g = this.environment !== \"prod\" ? `${this.environment}.` : \"\", f = {",
          "storeId: e,",
          "trackingId: o != null ? o : \"\",",
          "baseUrl: `https://clickstream.${g}shoppinggives.com`,",
          "metadata: {",
          "widget: {",
          "type: je.StoreDonation,",
          "style: Fe.Default,",
          "placement: Ke[\"Checkout Ext\"],",
          "location: Be.Checkout",
          "}",
          "}",
          "};",
          "c && (v = (s = c.get(\"sgcause\")) != null ? s : \"\", v && this.cache.set(\"causeId\", v));",
          "return n = await this.getTrackedCause(o), n && (c.causeId = n.causeId, c.causeName = n.causeName), this.cache.set(\"tracking\", c), this.tracking = c, this.eventTracker = new Re(f), c;",
          "window && (await this.checkUrlParamsForCause(this.tracking.trackingId), await this.checkForKlaviyoUrlParams(this.tracking.trackingId));",
          "return S ? this.tracking = S : (u = await this.trackingAdapter.startTracking(e, t, i), this.cache.set(\"tracking\", u), this.tracking = u), this.emit(\"Tracking::Started\", u || S), f.trackingId = this.tracking.trackingId, this.eventTracker = new Re(f), u || S;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error starting tracking\", n), {};",
          "if (t || (t = new URLSearchParams(window.location.search).get(\"sgcause\")), t) {",
          "let t = this.cache.get(`sg-${te.Klaviyo}`), i = !1;",
          "let o = new URLSearchParams(window.location.search), s = o.get(\"_kx\");",
          "s && (t = {",
          "_kx: s,",
          "variation: o.get(\"variation\"),",
          "utm_content: o.get(\"utm_content\"),",
          "utm_campaign: o.get(\"utm_campaign\")",
          "}, i = !0);",
          "i && this.trackingAdapter.setIntegrationMetadata(e, te.Klaviyo, t).then(() => {",
          "this.cache.set(`sg-${te.Klaviyo}`, t);",
          "});",
          "return this.tracking = { trackingId: e, causeId: t == null ? void 0 : t.toString(), causeName: i }, this.cache.set(\"tracking\", this.tracking), this.emit(\"Tracking::Updated\", { trackingUpdated: o }), o;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error updating tracking\", o), !1;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting tracked cause\", t), {};",
          "return this.track(this.selectedCauses.length == 0 ? \"Cause::Set\" : \"Cause::Updated\", {",
          "id: o.id,",
          "name: o.name,",
          "redemption_behavior: t,",
          "category_id: o.categoryId,",
          "category_name: o.categoryName",
          "}), this.selectedCauses = o, this.emit(\"Cause::Updated\", { cause: e }), { cause: new G(e), error: [] };",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error setting cause to tracking\", i), {};",
          "if ((t = this.store) != null && t.id)",
          "e(!1);",
          "let i = new Date().getTime(), o = setInterval(() => {",
          "var s;",
          "new Date().getTime() - i > 5e3 && (clearInterval(o), e(!0)), (s = this.store) != null && s.id && (clearInterval(o), e(!1));",
          "}, 100);",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error emitting event\", i);",
          "let o = We(e), s = [], n = [];",
          "return (t = o.portfolioIds) != null && t.length && s.push(this.portfoliosAdapter.getPortfolios(o.portfolioIds.join(\",\"))), (i = o.charityIds) != null && i.length && s.push(this.charitiesAdapter.getByEins(o.charityIds.join(\",\"))), await Promise.all(s).then((u) => {",
          "u.forEach((g) => {",
          "g.forEach((f) => {",
          "f && n.push(new G(f));",
          "});",
          "}), n;",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error populating cause IDs\", o);",
          "return t.forEach(async (o) => {",
          "var n;",
          "let s = o.ein || o.id;",
          "if (this.store.letShoppersChoose && this.store.defaultCauseId)",
          "if (s == this.store.defaultCauseId) {",
          "o.default = !0;",
          "let u = await this.cache.get(\"tracking\");",
          "(!u || !u.causeName) && this.updateTracking(this.tracking.trackingId, s, o.name);",
          "} else",
          "o.default = !1;",
          "else",
          "this.store.letShoppersChoose || (o.default = !0);",
          "this.store.defaultDonationType === 0 && (o.multiplier = i[s] || null), (n = o.portfolioCharities) != null && n.length && this.categoriesService.replaceEmptyLogos([...o.portfolioCharities]);",
          "}), t;",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting charities\", t);",
          "return this.store.letShoppersChoose && this.store.defaultCauseId ? (!t || !t.causeId) && (this.selectedCauses = [this.charities.find((o) => (o.id || o.ein) == this.store.defaultCauseId)]) : this.store.letShoppersChoose || (this.selectedCauses = (i = Object.keys(this.donationInfo.donationRecipients)) != null && i.length ? this.donationInfo.donationRecipients : this.charities), this.selectedCauses;",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting initial cause selection\", o);",
          "this.donationInfo = new pe({ donationRecipients: {}, lineItems: [] }), this.charities = [], this.productAdapter = new Ge(this.storeId, this.environment, this.cache, this.errorHandler), this.config = {}, this.segment = null;",
          "if (this.config = t, f)",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\"), new ie({",
          "donationBreakdown: [],",
          "totalDonationAmount: 0,",
          "showWidget: !1,",
          "charities: [],",
          "selectedCauses: [],",
          "activeCampaigns: [],",
          "searchEnabled: !1,",
          "letShoppersChoose: !1,",
          "trackingId: \"\",",
          "directDonationInCart: !1,",
          "storeName: \"\"",
          "});",
          "this.config.currencyCode && this.config.currencyConversionRate && this.currency !== this.config.currencyCode && this.setCurrency(this.config.currencyCode.toUpperCase(), this.config.currencyConversionRate);",
          "let v = await this.startTracking(this.storeId, this.testMode, !1, t.trackingId), S = null;",
          "this.store.segments.length != 0 ? S = this.evaluateSegments() : S = { excludeSegment: !1 }, this.segment = S, this.donationInfo = await this.calculateDonation(",
          "new ue(t.lineItems, t.discount, v.causeId ? v.causeId : \"0\", !1, (i = this.segment) == null ? void 0 : i.id)",
          ");",
          "let c = this.store.letShoppersChoose ? this.store.featuredCauseIds : this.store.defaultCauseIds, d = await this.getCharities(c);",
          "this.charities = d, this.selectedCauses = this.getInitialSelectedCauses(v);",
          "showWidget: (o = this.segment) != null && o.excludeSegment ? !1 : this.isEligibleForDonation(),",
          "charities: this.store.letShoppersChoose ? d : (s = Object.keys(this.donationInfo.donationRecipients)) != null && s.length ? this.donationInfo.donationRecipients : this.charities,",
          "selectedCauses: this.store.letShoppersChoose ? (n = this.selectedCauses) != null ? n : [] : (u = Object.keys(this.donationInfo.donationRecipients)) != null && u.length ? this.donationInfo.donationRecipients : this.charities,",
          "searchEnabled: this.store.letShoppersChoose ? this.store.searchEnabled : !1,",
          "directDonationInCart: (g = this.donationInfo.lineItems) == null ? void 0 : g.some((l) => l.directDonation === !0),",
          "storeName: this.store.name",
          "return this.setCacheForPostConversion(this.store, h.totalDonationAmount, h.donationBreakdown), this.emit(\"SDK::Ready\", h), h;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\", f), {};",
          "new ue(t.lineItems, t.discount, this.tracking.causeId ? this.tracking.causeId : \"0\", !1, (i = this.segment) == null ? void 0 : i.id)",
          "charities: this.store.letShoppersChoose ? this.charities : (o = Object.keys(this.donationInfo.donationRecipients)) != null && o.length ? this.donationInfo.donationRecipients : this.charities,",
          "selectedCauses: this.store.letShoppersChoose ? (s = this.selectedCauses) != null ? s : [] : (n = Object.keys(this.donationInfo.donationRecipients)) != null && n.length ? this.donationInfo.donationRecipients : this.charities,",
          "directDonationInCart: (u = this.donationInfo.lineItems) == null ? void 0 : u.some((v) => v.directDonation === !0)",
          "return this.setCacheForPostConversion(this.store, f.totalDonationAmount, f.donationBreakdown), this.emit(\"SDK::Updated\", this.donationInfo), f;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error updating widget\", g), {};",
          "let i = await this.productAdapter.getCartDonation(this.storeId, { ...t }), o = new pe({ ...i });",
          "let s = await this.getCharities(Object.keys(o.donationRecipients)), n = [];",
          "return s.length && s.forEach((u) => {",
          "let g = { ...u };",
          "g.donation = o.donationRecipients[u.ein || u.id], n.push(g);",
          "}), o.donationRecipients = n, this.selectedCauses = n.map((u) => new G(u)), this.donationInfo = o, o;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error calculating donation\", i), {};",
          "return t.onlinePurchase && this.donationInfo.totalDonationAmount > 0 || t.addOnDonation || t.roundUpDonation;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error retrieving donation eligibility\", t), !1;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error retrieving donation breakdown\", t), {};",
          "o && typeof o == \"number\" && (t.cartDonation.donation[i] = this.convertUSDtoForeignCurrency(o));",
          "t.cartDonation.totalDonationValue = this.convertUSDtoForeignCurrency(t.cartDonation.totalDonationValue);",
          "o && typeof o == \"number\" && (t.donationRecipients[i] = this.convertUSDtoForeignCurrency(o));",
          "t.lineItems[s].donations[n] = g, i[n] ? i[n] += g : i[n] = g;",
          "t.lineItems[s].totalDonationValue = this.convertUSDtoForeignCurrency(t.lineItems[s].totalDonationValue);",
          "u && typeof u == \"number\" && (i[n] ? i[n] += t.lineItems[s].donations[n] : i[n] = t.lineItems[s].donations[n]);",
          "}), t.donationRecipients = i;",
          "let o = await this.setSelectedCause(t, i), s = await this.cache.get(\"tracking\"), n = await this.calculateDonation(",
          "new ue(this.config.lineItems, this.config.discount, s.causeId ? s.causeId : \"0\", !1, (g = this.segment) == null ? void 0 : g.id)",
          "), u = this.store.letShoppersChoose ? (f = this.selectedCauses) != null ? f : [] : (v = Object.keys(n.donationRecipients)) != null && v.length ? n.donationRecipients : this.charities;",
          "return this.setCacheForPostConversion(this.store, n.totalDonationAmount, u), n.totalDonationAmount && (this.emit(\"SDK::Updated\", n), o.newTotalDonation = n.totalDonationAmount), o;",
          "return this.store.letShoppersChoose && this.store.defaultCauseId ? (!t || !t.causeId) && (this.selectedCauses = [this.charities.find((o) => (o.id || o.ein) == this.store.defaultCauseId)]) : this.store.letShoppersChoose || (this.selectedCauses = Object.keys((i = this.donationInfo.donationRecipients) != null ? i : {}).length ? this.donationInfo.donationRecipients : this.charities), this.selectedCauses;",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting initial cause selection\", o);",
          "this.donationInfo = {}, this.charities = [], this.productAdapter = new Ge(this.storeId, this.environment, this.cache, this.errorHandler), this.config = {}, this.segment = null;",
          "if (this.config = t, await this.pollForStore())",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\"), new ie({",
          "donationBreakdown: [],",
          "totalDonationAmount: 0,",
          "showWidget: !1,",
          "charities: [],",
          "selectedCauses: [],",
          "activeCampaigns: [],",
          "searchEnabled: !1,",
          "letShoppersChoose: !1,",
          "trackingId: \"\",",
          "storeName: \"\"",
          "});",
          "this.config.currencyCode && this.config.currencyConversionRate && this.currency !== this.config.currencyCode && this.setCurrency(this.config.currencyCode.toUpperCase(), this.config.currencyConversionRate);",
          "let g = await this.startTracking(this.storeId, this.testMode, !1), f = null;",
          "this.store.segments.length != 0 ? f = this.evaluateSegments() : f = { excludeSegment: !1 }, this.segment = f, this.donationInfo = await this.calculateDonation(",
          "new ge(t.cmsId, t.price, g.causeId ? g.causeId : \"0\", (o = this.segment) == null ? void 0 : o.id)",
          ");",
          "let v = this.store.letShoppersChoose ? this.store.featuredCauseIds : this.store.defaultCauseIds, S = await this.getCharities(v);",
          "this.charities = S, this.selectedCauses = this.getInitialSelectedCauses(g);",
          "showWidget: (s = this.segment) != null && s.excludeSegment ? !1 : this.isEligibleForDonation(),",
          "charities: this.store.letShoppersChoose ? S : this.donationInfo.donationRecipients,",
          "searchEnabled: this.store.letShoppersChoose ? this.store.searchEnabled : !1,",
          "storeName: this.store.name",
          "return this.setCacheForPostConversion(this.store, c.totalDonationAmount, c.donationBreakdown), this.emit(\"SDK::Ready\", c), c;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\", u), {};",
          "new ge(t.cmsId, t.price, this.tracking.causeId ? this.tracking.causeId : \"0\", (i = this.segment) == null ? void 0 : i.id)",
          "charities: this.store.letShoppersChoose ? this.charities : (o = Object.keys(this.donationInfo.donationRecipients)) != null && o.length ? this.donationInfo.donationRecipients : this.charities,",
          "selectedCauses: this.store.letShoppersChoose ? (s = this.selectedCauses) != null ? s : [] : (n = Object.keys(this.donationInfo.donationRecipients)) != null && n.length ? this.donationInfo.donationRecipients : this.charities,",
          "excluded: this.donationInfo.excluded",
          "return this.setCacheForPostConversion(this.store, g.totalDonationAmount, g.donationBreakdown), this.emit(\"SDK::Updated\", this.donationInfo), g;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error updating widget\", u), {};",
          "let i = await this.productAdapter.getProductDonation(this.storeId, { ...t }), o = new Te({ ...i });",
          "let s = await this.getCharities(Object.keys(o.donationRecipients)), n = [];",
          "return s.length && s.forEach((u) => {",
          "let g = { ...u };",
          "g.donation = o.donationRecipients[u.ein || u.id], n.push(g);",
          "}), o.donationRecipients = n, this.selectedCauses = n.map((u) => new G(u)), this.donationInfo = o, o;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error calculating donation\", i), {};",
          "let o = await this.setSelectedCause(t, i), s = await this.cache.get(\"tracking\"), n = await this.calculateDonation(",
          "new ge(this.config.cmsId, this.config.price, s.causeId ? s.causeId : \"0\", (g = this.segment) == null ? void 0 : g.id)",
          "), u = this.store.letShoppersChoose ? (f = this.selectedCauses) != null ? f : [] : (v = Object.keys(n.donationRecipients)) != null && v.length ? n.donationRecipients : this.charities;",
          "return this.setCacheForPostConversion(this.store, n.totalDonationAmount, u), n.totalDonationAmount && (this.emit(\"SDK::Updated\", n), o.newTotalDonation = n.totalDonationAmount), o;",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error retrieving donation eligibility\", t), !1;",
          "s && typeof s == \"number\" && (t.result.donations[o] = this.convertUSDtoForeignCurrency(s));",
          "t.result.totalDonationValue = this.convertUSDtoForeignCurrency(t.result.totalDonationValue);",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting donation breakdown\", t), {};",
          "xt as ProductHandler",
          "//# sourceMappingURL=shoppingGives-sdk.js.map"
        ],
        "impact": "major"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "eb36339",
    "original_message": "Use a vendored version of the SDK for the checkout UI extension",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/src/index.tsx",
        "summary": "",
        "additions": [
          "import { CartHandler, Environments } from \"../vendor/shopping-gives\";"
        ],
        "removals": [
          "import { CartHandler, Environments } from \"@shoppinggivesos/impact-sdk\";"
        ],
        "impact": "minor"
      },
      {
        "file": "extensions/checkout-ui-extension/vendor/shopping-gives.js",
        "summary": "",
        "additions": [
          "var Ye = Object.defineProperty;",
          "var Xe = (a, e, t) => e in a ? Ye(a, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : a[e] = t;",
          "var r = (a, e, t) => (Xe(a, typeof e != \"symbol\" ? e + \"\" : e, t), t);",
          "const Ze = (a = \"\") => {",
          "if (typeof a != \"string\")",
          "return !1;",
          "let e = a.trim().replace(/[\\s-\\{\\}\\(\\)]/g, \"\");",
          "if (e.length !== 32)",
          "return !1;",
          "let t = /^[0-9A-Fa-f]+$/;",
          "return t.lastIndex = 0, t.test(e);",
          "};",
          "class Qe {",
          "constructor() {",
          "r(this, \"storeName\");",
          "r(this, \"causeName\");",
          "r(this, \"donation\");",
          "}",
          "getUrlParams(e) {",
          "if (e) {",
          "let t = document.getElementsByTagName(\"script\");",
          "for (const i of t)",
          "if (i.id == e)",
          "return this.getQueryParams(i.src);",
          "return null;",
          "}",
          "return this.getQueryParams(window.location.href);",
          "}",
          "getCurrentScript(e) {",
          "try {",
          "if (document.currentScript)",
          "return document.currentScript;",
          "if (document._currentScript)",
          "return document._currentScript();",
          "} catch {",
          "}",
          "for (let t = document.scripts.length - 1; t >= 0; t--)",
          "if ((document.scripts[t].src.indexOf(\"shoppinggives.com\") >= 0 || document.scripts[t].src.indexOf(\"../\") >= 0 || document.scripts[t].src.indexOf(\"http://localhost\") >= 0) && (!e || document.scripts[t].src.indexOf(e) >= 0))",
          "return document.scripts[t];",
          "return null;",
          "}",
          "getCurrentScriptUrlParams(e = null) {",
          "let t = this.getCurrentScript(e);",
          "return t ? this.getQueryParams(t.src) : null;",
          "}",
          "getQueryParams(e) {",
          "if (e = e.split(\"?\")[1], !e)",
          "return {};",
          "let t = e.split(\"&\"), i = {};",
          "for (const o of t) {",
          "let s = o.split(\"=\");",
          "i[s[0]] = s[1];",
          "}",
          "return i;",
          "}",
          "}",
          "const We = (a) => {",
          "const e = /^[0-9/-]{1,31}$/g;",
          "let t = {",
          "charityIds: [],",
          "portfolioIds: []",
          "};",
          "return a.forEach((i) => {",
          "i.match(e) ? t.charityIds.push(i) : t.portfolioIds.push(i);",
          "}), t;",
          "};",
          "var et = /* @__PURE__ */ ((a) => (a.Dev = \"dev\", a.QA = \"qa\", a.Staging = \"staging1\", a.Production = \"prod\", a))(et || {}), ee = /* @__PURE__ */ ((a) => (a[a.Default = 1] = \"Default\", a[a.Searched = 2] = \"Searched\", a[a.Featured = 3] = \"Featured\", a))(ee || {}), te = /* @__PURE__ */ ((a) => (a.Klaviyo = \"klaviyo\", a.Yotpo = \"yotpo\", a))(te || {}), we = /* @__PURE__ */ ((a) => (a[a.Percentage = 0] = \"Percentage\", a[a.Flat = 1] = \"Flat\", a))(we || {}), me = /* @__PURE__ */ ((a) => (a.USD = \"USD\", a))(me || {});",
          "const _e = (a, e) => {",
          "const t = e.filter((i) => i.id == a.id);",
          "return t.length == 0 ? ee.Searched : t[0].default ? ee.Default : ee.Featured;",
          "};",
          "class G {",
          "constructor(e) {",
          "r(this, \"isPortfolio\");",
          "r(this, \"id\");",
          "r(this, \"name\");",
          "r(this, \"website\");",
          "r(this, \"logoUrl\");",
          "r(this, \"streetAddress\");",
          "r(this, \"city\");",
          "r(this, \"state\");",
          "r(this, \"zip\");",
          "r(this, \"description\");",
          "r(this, \"multiplier\");",
          "r(this, \"categoryId\");",
          "r(this, \"categoryName\");",
          "r(this, \"categoryLogoUrl\");",
          "r(this, \"headline\");",
          "r(this, \"bannerUrl\");",
          "r(this, \"portfolioCharities\");",
          "r(this, \"default\");",
          "var i;",
          "let t = !1;",
          "e.id && Ze(e.id) && (t = !0), this.isPortfolio = t, this.id = (i = e.ein) != null ? i : e.id, this.name = e.name, this.website = e.website, this.logoUrl = e.logoUrl, this.streetAddress = e.streetAddress, this.city = e.city, this.state = e.state, this.zip = e.zip, this.description = e.description, this.multiplier = e.multiplier, this.categoryId = e.categoryId, this.categoryName = e.categoryName, this.categoryLogoUrl = e.categoryLogoUrl, this.headline = e.headline, this.bannerUrl = e.imageUrl, this.portfolioCharities = e.charities ? e.charities : e.portfolioCharities, this.default = e.default;",
          "}",
          "}",
          "class tt {",
          "constructor(e) {",
          "r(this, \"causeId\");",
          "r(this, \"causeName\");",
          "this.causeId = e.CauseId, this.causeName = e.CauseName;",
          "}",
          "}",
          "class it {",
          "constructor(e, t, i, o, s, n, u, g, f, v, S, c, d) {",
          "r(this, \"id\");",
          "r(this, \"isActive\");",
          "r(this, \"name\");",
          "r(this, \"backEndPropertyName\");",
          "r(this, \"description\");",
          "r(this, \"donationAction\");",
          "r(this, \"donationActionValue\");",
          "r(this, \"excludeSegment\");",
          "r(this, \"frontEndPropertyName\");",
          "r(this, \"frontEndSource\");",
          "r(this, \"priorityIndex\");",
          "r(this, \"valueCategory\");",
          "r(this, \"specifiedValues\");",
          "this.id = e, this.isActive = t, this.name = i, this.excludeSegment = o, this.frontEndPropertyName = s, this.frontEndSource = n, this.priorityIndex = u, this.valueCategory = g, this.backEndPropertyName = f, this.description = v, this.donationAction = S, this.donationActionValue = c, this.specifiedValues = d;",
          "}",
          "}",
          "class Ne {",
          "constructor(e, t) {",
          "r(this, \"id\");",
          "r(this, \"activeCampaigns\");",
          "r(this, \"addressInformation\");",
          "r(this, \"cmsMetaData\");",
          "r(this, \"causeMultipliers\");",
          "r(this, \"contactInformation\");",
          "r(this, \"customCSS\");",
          "r(this, \"defaultCauseId\");",
          "r(this, \"defaultCauseIds\");",
          "r(this, \"defaultDonation\");",
          "r(this, \"defaultDonationType\");",
          "r(this, \"featuredCauseIds\");",
          "r(this, \"isActive\");",
          "r(this, \"isEmbeddedConfirmation\");",
          "r(this, \"isExperienceActive\");",
          "r(this, \"letShoppersChoose\");",
          "r(this, \"metaData\");",
          "r(this, \"name\");",
          "r(this, \"previewWidget\");",
          "r(this, \"primaryCurrency\");",
          "r(this, \"roundupPreviewWidget\");",
          "r(this, \"searchEnabled\");",
          "r(this, \"targetCssSelector\");",
          "r(this, \"segments\");",
          "this.id = t, this.activeCampaigns = e.ActiveCampaigns, this.addressInformation = e.AddressInformation, this.cmsMetaData = e.CMSMetaData, this.causeMultipliers = e.CauseMultipliers, this.contactInformation = e.ContactInformation, this.customCSS = e.CustomCSS, this.defaultCauseId = e.DefaultCauseId, this.defaultCauseIds = e.DefaultCauseIds || [], this.defaultDonation = e.DefaultDonation, this.defaultDonationType = e.DefaultDonationType, this.featuredCauseIds = e.FeaturedCauseIds || [], this.isActive = e.IsActive, this.isEmbeddedConfirmation = e.IsEmbeddedConfirmation, this.isExperienceActive = e.IsExperienceActive, this.letShoppersChoose = e.LetShoppersChoose, this.metaData = e.MetaData, this.name = e.Name, this.previewWidget = e.PreviewWidget, this.primaryCurrency = e.PrimaryCurrency, this.roundupPreviewWidget = e.RoundupPreviewWidget, this.searchEnabled = e.SearchEnabled, this.targetCssSelector = e.TargetCssSelector, this.segments = this.formatSegments(e.CustomerSegments);",
          "}",
          "formatSegments(e = []) {",
          "return e == null ? [] : e.map((t) => new it(",
          "t.Id,",
          "t.IsActive,",
          "t.Name,",
          "t.ExcludeSegment,",
          "t.FrontEndPropertyName,",
          "t.FrontEndSource,",
          "t.PriorityIndex,",
          "t.ValueCategory,",
          "t == null ? void 0 : t.BackEndPropertyName,",
          "t == null ? void 0 : t.Description,",
          "t == null ? void 0 : t.DonationAction,",
          "t == null ? void 0 : t.DonationActionValue,",
          "t == null ? void 0 : t.SpecifiedValues",
          "));",
          "}",
          "}",
          "class $e {",
          "constructor() {",
          "}",
          "debug(e, t = {}) {",
          "console.debug(e, t);",
          "}",
          "warn(e, t = {}) {",
          "console.warn(e, t);",
          "}",
          "error(e, t = {}) {",
          "console.error(e, t);",
          "}",
          "}",
          "class Me {",
          "constructor() {",
          "r(this, \"baseCategoryCdnUrl\", \"https://cdn.shoppinggives.com/charity-logos/categories/\");",
          "r(this, \"categories\", {",
          "0: \"Art_and_Culture.svg\",",
          "1: \"Education.svg\",",
          "2: \"Environment.svg\",",
          "3: \"Animal_Protection_and_Services.svg\",",
          "4: \"Health.svg\",",
          "5: \"Mental_Health_and_Rehabilitation.svg\",",
          "6: \"Disease_and_Disorder.svg\",",
          "7: \"Medical_Research.svg\",",
          "8: \"Criminal_Justice_and_Legal.svg\",",
          "9: \"Employment.svg\",",
          "10: \"Food_and_Nutrition.svg\",",
          "11: \"Housing_and_Shelters.svg\",",
          "12: \"Public_Safety.svg\",",
          "13: \"Sports.svg\",",
          "14: \"Youth_Development.svg\",",
          "15: \"Human_Services.svg\",",
          "16: \"International_Affairs.svg\",",
          "17: \"Civil_Rights.svg\",",
          "18: \"Community.svg\",",
          "19: \"Philanthropy_and_Volunteering.svg\",",
          "20: \"Science_and_Tech.svg\",",
          "21: \"Social_Science.svg\",",
          "22: \"Public_Benefits.svg\",",
          "23: \"Religion.svg\",",
          "24: \"Mutual_Benefit_Organizations.svg\",",
          "25: \"Other.svg\"",
          "});",
          "}",
          "async replaceEmptyLogos(e) {",
          "return e.forEach((t) => {",
          "(!t.logoUrl || t.logoUrl.includes(\"paypal\")) && !t.shortKey ? t.logoUrl = `${this.baseCategoryCdnUrl}${this.categories[t.categoryId]}` : t.shortKey && t.charities.forEach((i) => {",
          "i.logoUrl || (i.logoUrl = `${this.baseCategoryCdnUrl}${this.categories[i.categoryId]}`);",
          "});",
          "}), e;",
          "}",
          "}",
          "let de;",
          "class ot {",
          "constructor() {",
          "r(this, \"events\");",
          "r(this, \"on\", (e, t) => {",
          "this.events[e] ? this.events[e].push(t) : this.events[e] = [t];",
          "});",
          "r(this, \"emit\", async (e, t) => {",
          "let i = !1;",
          "return this.events[e] && (this.events[e].forEach((o) => {",
          "o.call(null, [t][0]);",
          "}), i = !0), i;",
          "});",
          "if (de)",
          "return de;",
          "this.events = {}, de = this;",
          "}",
          "}",
          "const rt = Object.freeze(new ot());",
          "class st {",
          "constructor() {",
          "}",
          "get(e) {",
          "let t = sessionStorage.getItem(e);",
          "if (t)",
          "return JSON.parse(t);",
          "}",
          "set(e, t) {",
          "sessionStorage.setItem(e, JSON.stringify(t));",
          "}",
          "delete(e) {",
          "sessionStorage.removeItem(e);",
          "}",
          "}",
          "class at {",
          "constructor(e, t, i) {",
          "r(this, \"type\");",
          "r(this, \"message\");",
          "r(this, \"data\");",
          "this.type = e, this.message = t, this.data = i;",
          "}",
          "}",
          "class nt {",
          "constructor(e) {",
          "r(this, \"eventEmitter\");",
          "this.eventEmitter = e;",
          "}",
          "async throw(e, t, i) {",
          "if (!await this.eventEmitter.emit(\"SDK::Error\", { type: e, message: t, data: i }))",
          "throw new at(e, t, i);",
          "}",
          "}",
          "class ct {",
          "constructor(e) {",
          "r(this, \"customData\", {});",
          "r(this, \"logger\");",
          "this.customData = e, this.logger = new $e();",
          "}",
          "evaluate(e) {",
          "var o;",
          "this.logger.debug(\"evaluating segments\");",
          "let t = [], i = new Qe().getCurrentScriptUrlParams();",
          "this.logger.debug(\"processing segment rules\");",
          "try {",
          "e.map((s) => {",
          "var u, g, f, v;",
          "if (t.length > 0 || !s.isActive)",
          "return;",
          "let n = null;",
          "switch (s.frontEndSource) {",
          "case 0:",
          "n = window[s.frontEndPropertyName], this.logger.debug(`input value: ${n}`);",
          "break;",
          "case 1:",
          "s.frontEndPropertyName.includes(\".\") ? (n = this.extractValue(s.frontEndPropertyName, !0), this.logger.debug(`input value: ${n}`)) : (n = this.extractValue(s.frontEndPropertyName), this.logger.debug(`input value: ${n}`));",
          "break;",
          "case 2:",
          "n = i[s.frontEndPropertyName], this.logger.debug(`input value: ${n}`);",
          "break;",
          "default:",
          "n = i[s.frontEndPropertyName], this.logger.debug(`input value: ${n}`);",
          "break;",
          "}",
          "switch (s.valueCategory) {",
          "case 0:",
          "(n == null || n == null || n == \"\") && t.push(this.formatSegmentData(s));",
          "break;",
          "case 1:",
          "n != null && n !== \"\" && n.length != 0 && t.push(this.formatSegmentData(s));",
          "break;",
          "case 2:",
          "if (Array.isArray(n)) {",
          "let S = [];",
          "n.length == ((u = s == null ? void 0 : s.specifiedValues) == null ? void 0 : u.length) && (n.map((c) => {",
          "var d;",
          "(d = s == null ? void 0 : s.specifiedValues) != null && d.includes(c) ? (this.logger.debug(`does ${s.specifiedValues} include ${c}? - true`), S.push(!0)) : (this.logger.debug(`does ${s.specifiedValues} include ${c}? - false`), S.push(!1));",
          "}), S.indexOf(!1) == -1 && t.push(this.formatSegmentData(s)));",
          "} else",
          "((g = s == null ? void 0 : s.specifiedValues) == null ? void 0 : g.length) == 1 && s.specifiedValues[0] == n && t.push(this.formatSegmentData(s));",
          "break;",
          "default:",
          "if (Array.isArray(n)) {",
          "let S = [];",
          "n.length == ((f = s == null ? void 0 : s.specifiedValues) == null ? void 0 : f.length) && (n.map((c) => {",
          "var d;",
          "this.logger.debug(`does ${s.specifiedValues} equal ${c}?`), (d = s == null ? void 0 : s.specifiedValues) != null && d.includes(c) ? S.push(!0) : S.push(!1);",
          "}), S.indexOf(!1) == -1 && t.push(this.formatSegmentData(s)));",
          "} else",
          "((v = s == null ? void 0 : s.specifiedValues) == null ? void 0 : v.length) == 1 && s.specifiedValues[0] == n && t.push(this.formatSegmentData(s));",
          "break;",
          "}",
          "});",
          "} catch (s) {",
          "this.logger.error(\"unable to process customer segments\", { error: s }), t = [];",
          "}",
          "return t[0] ? this.logger.debug(`returning selected segment (id): ${(o = t[0]) == null ? void 0 : o.id}`) : this.logger.debug(\"no segments have passed the rule checks!\"), t[0] || { excludeSegment: !1 };",
          "}",
          "formatSegmentData(e) {",
          "return {",
          "id: e.id,",
          "excludeSegment: e.excludeSegment",
          "};",
          "}",
          "extractValue(e, t = !1) {",
          "let i = Object.entries(this.customData).length > 0 ? [this.customData] : window.dataLayer, o = null;",
          "return t ? o = this.getNestedPropByPath(i, e) : o = this.getNestedProp(i, e), o;",
          "}",
          "getNestedProp(e, t) {",
          "let i = null;",
          "if (Array.isArray(e))",
          "for (let o = 0; o < e.length && (i = this.getNestedProp(e[o], t), !i); o++)",
          ";",
          "else",
          "for (let o in e) {",
          "if (o == t)",
          "return e[o];",
          "if ((e[o] instanceof Object || Array.isArray(e[o])) && (i = this.getNestedProp(e[o], t), i))",
          "break;",
          "}",
          "return i;",
          "}",
          "getNestedPropByPath(e, t) {",
          "let i = null, o = t.split(\".\");",
          "for (let s = 0; s < e.length && (i = o.reduce((n, u) => n && n[u], e[s]), !i); s++)",
          ";",
          "return i;",
          "}",
          "}",
          "const ht = new Me(), lt = \"https://cdn.shoppinggives.com/charity-logos/categories/\";",
          "class dt {",
          "constructor(e) {",
          "r(this, \"id\");",
          "r(this, \"name\");",
          "r(this, \"website\");",
          "r(this, \"logoUrl\");",
          "r(this, \"streetAddress\");",
          "r(this, \"city\");",
          "r(this, \"state\");",
          "r(this, \"zip\");",
          "r(this, \"description\");",
          "r(this, \"categoryId\");",
          "r(this, \"categoryName\");",
          "r(this, \"categoryLogoUrl\");",
          "r(this, \"nteeFullCode\");",
          "r(this, \"nteeMainCode\");",
          "r(this, \"nteeSubCode\");",
          "this.id = e.ein, this.name = e.name, this.website = e.website, this.logoUrl = e.logoUrl ? e.logoUrl : `${lt}${ht.categories[e.categoryId]}`, this.streetAddress = e.streetAddress, this.city = e.city, this.state = e.state, this.zip = e.zip, this.description = e.description, this.categoryId = e.categoryId, this.categoryName = e.categoryName, this.categoryLogoUrl = e.categoryLogoUrl, this.nteeFullCode = e.nteeFullCode, this.nteeMainCode = e.nteeMainCode, this.nteeSubCode = e.nteeSubCode;",
          "}",
          "}",
          "const N = {",
          "onlinePurchase: 1,",
          "yotpoRedemption: 2,",
          "roundUpDonation: 3,",
          "addOnDonation: 4,",
          "pointOfSale: 5,",
          "postPurchaseDonation: 6,",
          "roundUpPos: 7",
          "};",
          "class He {",
          "constructor(e) {",
          "r(this, \"onlinePurchase\");",
          "r(this, \"yotpoRedemption\");",
          "r(this, \"roundUpDonation\");",
          "r(this, \"addOnDonation\");",
          "r(this, \"pointOfSale\");",
          "r(this, \"postPurchaseDonation\");",
          "r(this, \"roundUpPos\");",
          "var t, i, o, s, n, u, g;",
          "this.onlinePurchase = ((t = e.find((f) => f.Id === N.onlinePurchase)) == null ? void 0 : t.IsActive) || !1, this.yotpoRedemption = ((i = e.find((f) => f.Id === N.yotpoRedemption)) == null ? void 0 : i.IsActive) || !1, this.roundUpDonation = ((o = e.find((f) => f.Id === N.roundUpDonation)) == null ? void 0 : o.IsActive) || !1, this.addOnDonation = ((s = e.find((f) => f.Id === N.addOnDonation)) == null ? void 0 : s.IsActive) || !1, this.pointOfSale = ((n = e.find((f) => f.Id === N.pointOfSale)) == null ? void 0 : n.IsActive) || !1, this.postPurchaseDonation = ((u = e.find((f) => f.Id === N.postPurchaseDonation)) == null ? void 0 : u.IsActive) || !1, this.roundUpPos = ((g = e.find((f) => f.Id === N.roundUpPos)) == null ? void 0 : g.IsActive) || !1;",
          "}",
          "}",
          "class ue {",
          "constructor(e, t = 0, i = \"0\", o = !1, s) {",
          "r(this, \"cmsIds\", []);",
          "r(this, \"cartDiscount\");",
          "r(this, \"ignoreDirectDonations\");",
          "r(this, \"providedCauseId\");",
          "r(this, \"customerSegmentId\");",
          "if (e)",
          "for (let n of e)",
          "this.cmsIds.push({ id: n.id, price: n.price, quantity: n.quantity, discount: n.discount });",
          "this.cartDiscount = t, this.providedCauseId = i.toString(), this.ignoreDirectDonations = o, this.customerSegmentId = s;",
          "}",
          "}",
          "class pe {",
          "constructor(e) {",
          "r(this, \"donationRecipients\");",
          "r(this, \"lineItems\");",
          "r(this, \"totalDonationAmount\");",
          "r(this, \"showWidget\");",
          "var t;",
          "this.donationRecipients = e.donationRecipients, this.lineItems = (t = e.lineItems) != null ? t : [], this.totalDonationAmount = pt(e), this.showWidget = this.totalDonationAmount > 0;",
          "}",
          "}",
          "const ut = (a) => a.reduce((e, t) => e + t.totalDonationValue, 0), pt = (a) => {",
          "var t;",
          "let e = 0;",
          "return (t = a.lineItems) != null && t.length && (e += ut(a.lineItems)), a.cartDonation && (e += a.cartDonation.totalDonationValue), e;",
          "};",
          "class ge {",
          "constructor(e, t, i, o) {",
          "r(this, \"cmsId\");",
          "r(this, \"realPrice\");",
          "r(this, \"providedCauseId\");",
          "r(this, \"customerSegmentId\");",
          "this.cmsId = e, this.realPrice = t, this.providedCauseId = i, this.customerSegmentId = o != null ? o : \"\";",
          "}",
          "}",
          "class Te {",
          "constructor(e) {",
          "r(this, \"totalDonationAmount\");",
          "r(this, \"donationRecipients\");",
          "r(this, \"excluded\");",
          "r(this, \"donationType\");",
          "this.totalDonationAmount = e.result.totalDonationValue, this.donationRecipients = e.result.portfolioId ? { [e.result.portfolioId]: e.result.totalDonationValue } : e.result.donations, this.excluded = e.result.excluded, this.donationType = e.result.donationType;",
          "}",
          "}",
          "class ie {",
          "constructor(e) {",
          "r(this, \"totalDonationAmount\");",
          "r(this, \"showWidget\");",
          "r(this, \"donationBreakdown\");",
          "r(this, \"charities\");",
          "r(this, \"selectedCauses\");",
          "r(this, \"activeCampaigns\");",
          "r(this, \"searchEnabled\");",
          "r(this, \"letShoppersChoose\");",
          "r(this, \"trackingId\");",
          "r(this, \"storeName\");",
          "r(this, \"directDonationInCart\");",
          "var t, i, o, s;",
          "this.totalDonationAmount = e.totalDonationAmount, this.showWidget = e.showWidget, this.donationBreakdown = (t = e.donationBreakdown) != null ? t : [], this.charities = (i = e.charities) != null ? i : [], this.selectedCauses = (o = e.selectedCauses) != null ? o : [], this.activeCampaigns = new He(e.activeCampaigns), this.searchEnabled = e.searchEnabled, this.letShoppersChoose = e.letShoppersChoose, this.trackingId = e.trackingId, this.directDonationInCart = (s = e.directDonationInCart) != null ? s : !1, this.storeName = e.storeName;",
          "}",
          "}",
          "class gt {",
          "constructor(e) {",
          "r(this, \"totalDonationAmount\");",
          "r(this, \"donationBreakdown\");",
          "r(this, \"charities\");",
          "r(this, \"selectedCauses\");",
          "r(this, \"directDonationInCart\");",
          "var t, i, o, s;",
          "this.totalDonationAmount = e.totalDonationAmount, this.donationBreakdown = (t = e.donationBreakdown) != null ? t : [], this.charities = (i = e.charities) != null ? i : [], this.selectedCauses = (o = e.selectedCauses) != null ? o : [], this.directDonationInCart = (s = e.directDonationInCart) != null ? s : !1;",
          "}",
          "}",
          "class ft {",
          "constructor(e) {",
          "r(this, \"totalDonationAmount\");",
          "r(this, \"donationBreakdown\");",
          "r(this, \"charities\");",
          "r(this, \"selectedCauses\");",
          "r(this, \"excluded\");",
          "this.totalDonationAmount = e.totalDonationAmount, this.donationBreakdown = e.donationBreakdown, this.charities = e.charities, this.selectedCauses = e.selectedCauses, this.excluded = e.excluded;",
          "}",
          "}",
          "const T = {",
          "GET: \"get\",",
          "POST: \"post\",",
          "DELETE: \"delete\",",
          "PUT: \"put\"",
          "}, O = {",
          "STORES: \"stores\",",
          "PRODUCTS: \"products\",",
          "USERS: \"users\",",
          "CUSTOMER_SEGMENTS: \"customer_segments\",",
          "SCHEDULER: \"scheduler\",",
          "RECEIVABLES: \"receivables\",",
          "POST_PURCHASE_DONATIONS: \"post_purchase_donations\",",
          "ORGANIZATIONS: \"organizations\",",
          "SHOPIFY: \"shopify\",",
          "INTEGRATIONS: \"integrations\",",
          "EXTERNAL_REPORTS: \"external_reports\",",
          "DONATIONS: \"donations\",",
          "CHARITIES_CMD: \"charities_cdm\",",
          "CHARITIES: \"charities\",",
          "CDN: \"cdn\",",
          "PORTFOLIOS: \"portfolios\",",
          "REPORTING: \"reporting\",",
          "CONVERSIONS: \"conversions\",",
          "CUSTOMIZATIONS: \"customizations\",",
          "LOCATIONS: \"locations\",",
          "BANNERS: \"banners\",",
          "TRACKING: \"tracking\"",
          "};",
          "class wt {",
          "constructor(e, t, i) {",
          "r(this, \"proxyUrl\");",
          "r(this, \"baseUrl\");",
          "r(this, \"storeId\");",
          "r(this, \"errorHandler\");",
          "r(this, \"useProxy\");",
          "const o = t !== \"prod\" ? `${t}.` : \"\";",
          "this.proxyUrl = `https://sdk.${o}shoppinggives.com/authorize`, this.baseUrl = `https://tracking.api.${o}shoppinggives.com`, this.storeId = e, this.errorHandler = i, this.useProxy = !1;",
          "}",
          "async startTracking(e, t = !1, i = !1) {",
          "try {",
          "let o;",
          "return this.useProxy ? o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.POST,",
          "service: O.TRACKING,",
          "endpoint: \"/\",",
          "data: {",
          "body: { storeId: e, isTestMode: t, isForceTestMode: i }",
          "}",
          "})",
          "}).then((s) => s.json()) : o = await fetch(`${this.baseUrl}/`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({ storeId: e, isTestMode: t, isForceTestMode: i })",
          "}).then((s) => s.json()), o;",
          "} catch (o) {",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error starting tracking\", o), {};",
          "}",
          "}",
          "async updateTracking(e, t, i) {",
          "try {",
          "const o = `/${e}/set-cause`;",
          "let s;",
          "return this.useProxy ? s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.PUT,",
          "service: O.TRACKING,",
          "endpoint: `${o}`,",
          "data: {",
          "body: { causeId: t, causeName: i }",
          "}",
          "})",
          "}).then((n) => n.json()) : s = await fetch(`${this.baseUrl}${o}`, {",
          "method: \"PUT\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({ causeId: t, causeName: i })",
          "}).then((n) => n.json()), s;",
          "} catch (o) {",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error updating tracking\", o), !1;",
          "}",
          "}",
          "async getTrackedCause(e) {",
          "const t = `/${e}/cause`;",
          "let i;",
          "return this.useProxy ? i = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.TRACKING,",
          "endpoint: `${t}`",
          "})",
          "}).then((o) => o.json()) : i = await fetch(`${this.baseUrl}${t}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" }",
          "}).then((o) => o.json()), i;",
          "}",
          "async setIntegrationMetadata(e, t, i) {",
          "try {",
          "const o = `/${e}/add-integration-info`;",
          "let s;",
          "return this.useProxy ? s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "method: T.PUT,",
          "service: O.TRACKING,",
          "endpoint: `${o}`,",
          "data: {",
          "body: { integrationType: t, info: { ...i } }",
          "}",
          "})",
          "}).then((n) => n.json()) : s = await fetch(`${this.baseUrl}${o}`, {",
          "method: \"PUT\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify({",
          "integrationType: t,",
          "info: { ...i }",
          "})",
          "}).then((n) => n.json()), s;",
          "} catch (o) {",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error updating integration metadata\", o), !1;",
          "}",
          "}",
          "}",
          "class mt {",
          "constructor(e, t, i, o) {",
          "r(this, \"proxyUrl\");",
          "r(this, \"baseUrl\");",
          "r(this, \"storeId\");",
          "r(this, \"cache\");",
          "r(this, \"errorHandler\");",
          "r(this, \"useProxy\");",
          "const s = t !== \"prod\" ? `${t}.` : \"\";",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://stores.api.${s}shoppinggives.com`, this.storeId = e, this.cache = i, this.errorHandler = o, this.useProxy = !1;",
          "}",
          "async getStore() {",
          "try {",
          "const e = \"/cc-small/none\";",
          "let t = {};",
          "return this.useProxy ? t = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.STORES,",
          "endpoint: `${e}`,",
          "data: {}",
          "})",
          "}).then((i) => i.json()) : t = await fetch(`${this.baseUrl}${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}).then((i) => i.json()), new Ne(t, this.storeId);",
          "} catch (e) {",
          "return console.log(e), this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving store\", e), {};",
          "}",
          "}",
          "}",
          "class Ge {",
          "constructor(e, t, i, o) {",
          "r(this, \"proxyUrl\");",
          "r(this, \"baseUrl\");",
          "r(this, \"storeId\");",
          "r(this, \"cache\");",
          "r(this, \"errorHandler\");",
          "r(this, \"useProxy\");",
          "const s = t !== \"prod\" ? `${t}.` : \"\";",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://products.api.${s}shoppinggives.com`, this.storeId = e, this.cache = i, this.errorHandler = o, this.useProxy = !1;",
          "}",
          "async getProductDonation(e, t) {",
          "var i;",
          "try {",
          "const o = \"/donation-by-cms-id\", s = JSON.stringify(t);",
          "let n = await this.cache.get(s);",
          "return n || (this.useProxy ? n = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.PRODUCTS,",
          "endpoint: `${o}`,",
          "data: {",
          "params: {",
          "cmsId: t.cmsId,",
          "realPrice: t.realPrice,",
          "providedCauseId: t.providedCauseId ? t.providedCauseId : null,",
          "customerSegmentId: (i = t.customerSegmentId) != null ? i : null",
          "}",
          "}",
          "})",
          "}).then((u) => u.json()) : n = await fetch(`${this.baseUrl}${o}?${new URLSearchParams(t)}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" }",
          "}).then((u) => u.json()), this.cache.set(s, n), n);",
          "} catch (o) {",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving product donation\", o), {};",
          "}",
          "}",
          "async getCartDonation(e, t) {",
          "try {",
          "const i = \"/get-multiple-donation\", o = JSON.stringify(t);",
          "let s = await this.cache.get(o);",
          "const { cmsIds: n, cartDiscount: u, ignoreDirectDonations: g, providedCauseId: f, customerSegmentId: v } = t;",
          "return s || (this.useProxy ? s = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.POST,",
          "service: O.PRODUCTS,",
          "endpoint: `${i}`,",
          "data: {",
          "body: {",
          "cmsIds: n,",
          "cartDiscount: u,",
          "ignoreDirectDonations: g,",
          "providedCauseId: f,",
          "customerSegmentId: v != null ? v : null",
          "}",
          "}",
          "})",
          "}).then((S) => S.json()) : s = await fetch(`${this.baseUrl}${i}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId, \"Content-Type\": \"application/json\" },",
          "body: JSON.stringify(t)",
          "}).then((S) => S.json()), this.cache.set(o, s), s);",
          "} catch (i) {",
          "return this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving cart donation\", i), {};",
          "}",
          "}",
          "}",
          "class bt {",
          "constructor(e, t, i, o) {",
          "r(this, \"proxyUrl\");",
          "r(this, \"baseUrl\");",
          "r(this, \"cache\");",
          "r(this, \"errorHandler\");",
          "r(this, \"storeId\");",
          "r(this, \"useProxy\");",
          "const s = e !== \"prod\" ? `${e}.` : \"\";",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://charities.api.${s}shoppinggives.com`, this.cache = t, this.errorHandler = i, this.storeId = o, this.useProxy = !1;",
          "}",
          "async search(e) {",
          "try {",
          "const t = \"/search\", { searchTerm: i, skip: o, take: s, zip: n, city: u, state: g, category: f } = e, v = JSON.stringify(e);",
          "let S = await this.cache.get(v);",
          "return S || (this.useProxy ? S = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.CHARITIES,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "skip: o,",
          "take: s,",
          "q: i != null ? i : null,",
          "zip: n != null ? n : null,",
          "city: u != null ? u : null,",
          "state: g != null ? g : null,",
          "categoryId: f != null ? f : null",
          "}",
          "}",
          "})",
          "}).then((c) => c.json()) : S = await fetch(",
          "`${this.baseUrl}${t}?` + new URLSearchParams({",
          "q: `${i != null ? i : \"\"}`,",
          "skip: `${o}`,",
          "take: `${s}`,",
          "zip: `${n != null ? n : \"\"}`,",
          "city: `${u != null ? u : \"\"}`,",
          "state: `${g != null ? g : \"\"}`,",
          "categoryId: `${f != null ? f : \"\"}`",
          "}),",
          "{",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}",
          ").then((c) => c.json()), this.cache.set(v, S), S);",
          "} catch (t) {",
          "this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error searching charities\", t);",
          "return;",
          "}",
          "}",
          "async getByEins(e) {",
          "try {",
          "const t = \"/search-by-eins\", i = e;",
          "let o = await this.cache.get(i);",
          "return o || (this.useProxy ? o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.CHARITIES,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "eins: e",
          "}",
          "}",
          "})",
          "}).then((s) => s.json()) : o = await fetch(`${this.baseUrl}${t}?eins=${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}).then((s) => s.json()), this.cache.set(i, o), o);",
          "} catch (t) {",
          "this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving charities by EIN\", t);",
          "return;",
          "}",
          "}",
          "}",
          "class vt {",
          "constructor(e, t, i, o) {",
          "r(this, \"proxyUrl\");",
          "r(this, \"baseUrl\");",
          "r(this, \"cache\");",
          "r(this, \"errorHandler\");",
          "r(this, \"storeId\");",
          "r(this, \"useProxy\");",
          "const s = e !== \"prod\" ? `${e}.` : \"\";",
          "this.proxyUrl = `https://sdk.${s}shoppinggives.com/authorize`, this.baseUrl = `https://portfolios.api.${s}shoppinggives.com`, this.cache = t, this.errorHandler = i, this.storeId = o, this.useProxy = !1;",
          "}",
          "async getPortfolios(e) {",
          "try {",
          "const t = \"/cc-query-with-charities\", i = e;",
          "let o = await this.cache.get(i);",
          "return o || (this.useProxy ? o = await fetch(`${this.proxyUrl}`, {",
          "method: \"POST\",",
          "headers: { \"x-store-id\": this.storeId },",
          "body: JSON.stringify({",
          "method: T.GET,",
          "service: O.PORTFOLIOS,",
          "endpoint: `${t}`,",
          "data: {",
          "params: {",
          "id: e",
          "}",
          "}",
          "})",
          "}).then((s) => s.json()) : o = await fetch(`${this.baseUrl}${t}?id=${e}`, {",
          "method: \"GET\",",
          "headers: { \"x-store-id\": this.storeId }",
          "}).then((s) => s.json()), this.cache.set(i, o), o);",
          "} catch (t) {",
          "this.errorHandler.throw(\"ShoppingGivesApiError\", \"Error retrieving portfolios\", t);",
          "return;",
          "}",
          "}",
          "}",
          "var yt = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, fe = { exports: {} };",
          "(function(a, e) {",
          "(function(t, i) {",
          "var o = \"1.0.40\", s = \"\", n = \"?\", u = \"function\", g = \"undefined\", f = \"object\", v = \"string\", S = \"major\", c = \"model\", d = \"name\", h = \"type\", l = \"vendor\", p = \"version\", A = \"architecture\", j = \"console\", b = \"mobile\", y = \"tablet\", E = \"smarttv\", R = \"wearable\", oe = \"embedded\", re = 500, L = \"Amazon\", F = \"Apple\", be = \"ASUS\", ve = \"BlackBerry\", q = \"Browser\", J = \"Chrome\", Ve = \"Edge\", Y = \"Firefox\", K = \"Google\", ye = \"Huawei\", se = \"LG\", ae = \"Microsoft\", Se = \"Motorola\", B = \"Opera\", z = \"Samsung\", Ce = \"Sharp\", X = \"Sony\", ne = \"Xiaomi\", ce = \"Zebra\", Ie = \"Facebook\", ke = \"Chromium OS\", De = \"Mac OS\", Ee = \" Browser\", Le = function(C, I) {",
          "var m = {};",
          "for (var D in C)",
          "I[D] && I[D].length % 2 === 0 ? m[D] = I[D].concat(C[D]) : m[D] = C[D];",
          "return m;",
          "}, Z = function(C) {",
          "for (var I = {}, m = 0; m < C.length; m++)",
          "I[C[m].toUpperCase()] = C[m];",
          "return I;",
          "}, Ae = function(C, I) {",
          "return typeof C === v ? M(I).indexOf(M(C)) !== -1 : !1;",
          "}, M = function(C) {",
          "return C.toLowerCase();",
          "}, qe = function(C) {",
          "return typeof C === v ? C.replace(/[^\\d\\.]/g, s).split(\".\")[0] : i;",
          "}, he = function(C, I) {",
          "if (typeof C === v)",
          "return C = C.replace(/^\\s\\s*/, s), typeof I === g ? C : C.substring(0, re);",
          "}, V = function(C, I) {",
          "for (var m = 0, D, _, U, k, w, P; m < I.length && !w; ) {",
          "var le = I[m], Pe = I[m + 1];",
          "for (D = _ = 0; D < le.length && !w && le[D]; )",
          "if (w = le[D++].exec(C), w)",
          "for (U = 0; U < Pe.length; U++)",
          "P = w[++_], k = Pe[U], typeof k === f && k.length > 0 ? k.length === 2 ? typeof k[1] == u ? this[k[0]] = k[1].call(this, P) : this[k[0]] = k[1] : k.length === 3 ? typeof k[1] === u && !(k[1].exec && k[1].test) ? this[k[0]] = P ? k[1].call(this, P, k[2]) : i : this[k[0]] = P ? P.replace(k[1], k[2]) : i : k.length === 4 && (this[k[0]] = P ? k[3].call(this, P.replace(k[1], k[2])) : i) : this[k] = P || i;",
          "m += 2;",
          "}",
          "}, Q = function(C, I) {",
          "for (var m in I)",
          "if (typeof I[m] === f && I[m].length > 0) {",
          "for (var D = 0; D < I[m].length; D++)",
          "if (Ae(I[m][D], C))",
          "return m === n ? i : m;",
          "} else if (Ae(I[m], C))",
          "return m === n ? i : m;",
          "return I.hasOwnProperty(\"*\") ? I[\"*\"] : C;",
          "}, Je = {",
          "\"1.0\": \"/8\",",
          "\"1.2\": \"/1\",",
          "\"1.3\": \"/3\",",
          "\"2.0\": \"/412\",",
          "\"2.0.2\": \"/416\",",
          "\"2.0.3\": \"/417\",",
          "\"2.0.4\": \"/419\",",
          "\"?\": \"/\"",
          "}, xe = {",
          "ME: \"4.90\",",
          "\"NT 3.11\": \"NT3.51\",",
          "\"NT 4.0\": \"NT4.0\",",
          "2e3: \"NT 5.0\",",
          "XP: [\"NT 5.1\", \"NT 5.2\"],",
          "Vista: \"NT 6.0\",",
          "7: \"NT 6.1\",",
          "8: \"NT 6.2\",",
          "\"8.1\": \"NT 6.3\",",
          "10: [\"NT 6.4\", \"NT 10.0\"],",
          "RT: \"ARM\"",
          "}, Ue = {",
          "browser: [",
          "[",
          "/\\b(?:crmo|crios)\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Chrome\"]],",
          "[",
          "/edg(?:e|ios|a)?\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Edge\"]],",
          "[",
          "/(opera mini)\\/([-\\w\\.]+)/i,",
          "/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,",
          "/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/opios[\\/ ]+([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" Mini\"]],",
          "[",
          "/\\bop(?:rg)?x\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" GX\"]],",
          "[",
          "/\\bopr\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B]],",
          "[",
          "/\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Baidu\"]],",
          "[",
          "/\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i",
          "],",
          "[p, [d, \"Maxthon\"]],",
          "[",
          "/(kindle)\\/([\\w\\.]+)/i,",
          "/(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,",
          "/(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,",
          "/(?:ms|\\()(ie) ([\\w\\.]+)/i,",
          "/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\\/([-\\w\\.]+)/i,",
          "/(heytap|ovi|115)browser\\/([\\d\\.]+)/i,",
          "/(weibo)__([\\d\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/quark(?:pc)?\\/([-\\w\\.]+)/i",
          "],",
          "[p, [d, \"Quark\"]],",
          "[",
          "/\\bddg\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"DuckDuckGo\"]],",
          "[",
          "/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i",
          "],",
          "[p, [d, \"UC\" + q]],",
          "[",
          "/microm.+\\bqbcore\\/([\\w\\.]+)/i,",
          "/\\bqbcore\\/([\\w\\.]+).+microm/i,",
          "/micromessenger\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"WeChat\"]],",
          "[",
          "/konqueror\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Konqueror\"]],",
          "[",
          "/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i",
          "],",
          "[p, [d, \"IE\"]],",
          "[",
          "/ya(?:search)?browser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Yandex\"]],",
          "[",
          "/slbrowser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Smart Lenovo \" + q]],",
          "[",
          "/(avast|avg)\\/([\\w\\.]+)/i",
          "],",
          "[[d, /(.+)/, \"$1 Secure \" + q], p],",
          "[",
          "/\\bfocus\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, Y + \" Focus\"]],",
          "[",
          "/\\bopt\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" Touch\"]],",
          "[",
          "/coc_coc\\w+\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Coc Coc\"]],",
          "[",
          "/dolfin\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Dolphin\"]],",
          "[",
          "/coast\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, B + \" Coast\"]],",
          "[",
          "/miuibrowser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"MIUI\" + Ee]],",
          "[",
          "/fxios\\/([\\w\\.-]+)/i",
          "],",
          "[p, [d, Y]],",
          "[",
          "/\\bqihoobrowser\\/?([\\w\\.]*)/i",
          "],",
          "[p, [d, \"360\"]],",
          "[",
          "/\\b(qq)\\/([\\w\\.]+)/i",
          "],",
          "[[d, /(.+)/, \"$1Browser\"], p],",
          "[",
          "/(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i",
          "],",
          "[[d, /(.+)/, \"$1\" + Ee], p],",
          "[",
          "/samsungbrowser\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, z + \" Internet\"]],",
          "[",
          "/metasr[\\/ ]?([\\d\\.]+)/i",
          "],",
          "[p, [d, \"Sogou Explorer\"]],",
          "[",
          "/(sogou)mo\\w+\\/([\\d\\.]+)/i",
          "],",
          "[[d, \"Sogou Mobile\"], p],",
          "[",
          "/(electron)\\/([\\w\\.]+) safari/i,",
          "/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,",
          "/m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/(lbbrowser|rekonq)/i,",
          "/\\[(linkedin)app\\]/i",
          "],",
          "[d],",
          "[",
          "/ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,",
          "/ome\\/([\\w\\.]+).+qihu (360)[es]e/i",
          "],",
          "[p, d],",
          "[",
          "/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i",
          "],",
          "[[d, Ie], p],",
          "[",
          "/(Klarna)\\/([\\w\\.]+)/i,",
          "/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,",
          "/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,",
          "/safari (line)\\/([\\w\\.]+)/i,",
          "/\\b(line)\\/([\\w\\.]+)\\/iab/i,",
          "/(alipay)client\\/([\\w\\.]+)/i,",
          "/(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,",
          "/(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/\\bgsa\\/([\\w\\.]+) .*safari\\//i",
          "],",
          "[p, [d, \"GSA\"]],",
          "[",
          "/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i",
          "],",
          "[p, [d, \"TikTok\"]],",
          "[",
          "/headlesschrome(?:\\/([\\w\\.]+)| )/i",
          "],",
          "[p, [d, J + \" Headless\"]],",
          "[",
          "/ wv\\).+(chrome)\\/([\\w\\.]+)/i",
          "],",
          "[[d, J + \" WebView\"], p],",
          "[",
          "/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i",
          "],",
          "[p, [d, \"Android \" + q]],",
          "[",
          "/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i",
          "],",
          "[p, [d, \"Mobile Safari\"]],",
          "[",
          "/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i",
          "],",
          "[p, d],",
          "[",
          "/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i",
          "],",
          "[d, [p, Q, Je]],",
          "[",
          "/(webkit|khtml)\\/([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i",
          "],",
          "[[d, \"Netscape\"], p],",
          "[",
          "/(wolvic|librewolf)\\/([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/mobile vr; rv:([\\w\\.]+)\\).+firefox/i",
          "],",
          "[p, [d, Y + \" Reality\"]],",
          "[",
          "/ekiohf.+(flow)\\/([\\w\\.]+)/i,",
          "/(swiftfox)/i,",
          "/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,",
          "/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,",
          "/(firefox)\\/([\\w\\.]+)/i,",
          "/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,",
          "/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,",
          "/(links) \\(([\\w\\.]+)/i",
          "],",
          "[d, [p, /_/g, \".\"]],",
          "[",
          "/(cobalt)\\/([\\w\\.]+)/i",
          "],",
          "[d, [p, /master.|lts./, \"\"]]",
          "],",
          "cpu: [",
          "[",
          "/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i",
          "],",
          "[[A, \"amd64\"]],",
          "[",
          "/(ia32(?=;))/i",
          "],",
          "[[A, M]],",
          "[",
          "/((?:i[346]|x)86)[;\\)]/i",
          "],",
          "[[A, \"ia32\"]],",
          "[",
          "/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i",
          "],",
          "[[A, \"arm64\"]],",
          "[",
          "/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i",
          "],",
          "[[A, \"armhf\"]],",
          "[",
          "/windows (ce|mobile); ppc;/i",
          "],",
          "[[A, \"arm\"]],",
          "[",
          "/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i",
          "],",
          "[[A, /ower/, s, M]],",
          "[",
          "/(sun4\\w)[;\\)]/i",
          "],",
          "[[A, \"sparc\"]],",
          "[",
          "/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i",
          "],",
          "[[A, M]]",
          "],",
          "device: [",
          "[",
          "/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i",
          "],",
          "[c, [l, z], [h, y]],",
          "[",
          "/\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,",
          "/samsung[- ]((?!sm-[lr])[-\\w]+)/i,",
          "/sec-(sgh\\w+)/i",
          "],",
          "[c, [l, z], [h, b]],",
          "[",
          "/(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i",
          "],",
          "[c, [l, F], [h, b]],",
          "[",
          "/\\((ipad);[-\\w\\),; ]+apple/i,",
          "/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,",
          "/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i",
          "],",
          "[c, [l, F], [h, y]],",
          "[",
          "/(macintosh);/i",
          "],",
          "[c, [l, F]],",
          "[",
          "/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i",
          "],",
          "[c, [l, Ce], [h, b]],",
          "[",
          "/(?:honor)([-\\w ]+)[;\\)]/i",
          "],",
          "[c, [l, \"Honor\"], [h, b]],",
          "[",
          "/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i",
          "],",
          "[c, [l, ye], [h, y]],",
          "[",
          "/(?:huawei)([-\\w ]+)[;\\)]/i,",
          "/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i",
          "],",
          "[c, [l, ye], [h, b]],",
          "[",
          "/\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,",
          "/\\b; (\\w+) build\\/hm\\1/i,",
          "/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,",
          "/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,",
          "/oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,",
          "/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i",
          "],",
          "[[c, /_/g, \" \"], [l, ne], [h, b]],",
          "[",
          "/oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,",
          "/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i",
          "],",
          "[[c, /_/g, \" \"], [l, ne], [h, y]],",
          "[",
          "/; (\\w+) bui.+ oppo/i,",
          "/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i",
          "],",
          "[c, [l, \"OPPO\"], [h, b]],",
          "[",
          "/\\b(opd2\\d{3}a?) bui/i",
          "],",
          "[c, [l, \"OPPO\"], [h, y]],",
          "[",
          "/vivo (\\w+)(?: bui|\\))/i,",
          "/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i",
          "],",
          "[c, [l, \"Vivo\"], [h, b]],",
          "[",
          "/\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i",
          "],",
          "[c, [l, \"Realme\"], [h, b]],",
          "[",
          "/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,",
          "/\\bmot(?:orola)?[- ](\\w*)/i,",
          "/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i",
          "],",
          "[c, [l, Se], [h, b]],",
          "[",
          "/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i",
          "],",
          "[c, [l, Se], [h, y]],",
          "[",
          "/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i",
          "],",
          "[c, [l, se], [h, y]],",
          "[",
          "/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,",
          "/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,",
          "/\\blg-?([\\d\\w]+) bui/i",
          "],",
          "[c, [l, se], [h, b]],",
          "[",
          "/(ideatab[-\\w ]+)/i,",
          "/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i",
          "],",
          "[c, [l, \"Lenovo\"], [h, y]],",
          "[",
          "/(?:maemo|nokia).*(n900|lumia \\d+)/i,",
          "/nokia[-_ ]?([-\\w\\.]*)/i",
          "],",
          "[[c, /_/g, \" \"], [l, \"Nokia\"], [h, b]],",
          "[",
          "/(pixel c)\\b/i",
          "],",
          "[c, [l, K], [h, y]],",
          "[",
          "/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i",
          "],",
          "[c, [l, K], [h, b]],",
          "[",
          "/droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i",
          "],",
          "[c, [l, X], [h, b]],",
          "[",
          "/sony tablet [ps]/i,",
          "/\\b(?:sony)?sgp\\w+(?: bui|\\))/i",
          "],",
          "[[c, \"Xperia Tablet\"], [l, X], [h, y]],",
          "[",
          "/ (kb2005|in20[12]5|be20[12][59])\\b/i,",
          "/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i",
          "],",
          "[c, [l, \"OnePlus\"], [h, b]],",
          "[",
          "/(alexa)webm/i,",
          "/(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,",
          "/(kf[a-z]+)( bui|\\)).+silk\\//i",
          "],",
          "[c, [l, L], [h, y]],",
          "[",
          "/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i",
          "],",
          "[[c, /(.+)/g, \"Fire Phone $1\"], [l, L], [h, b]],",
          "[",
          "/(playbook);[-\\w\\),; ]+(rim)/i",
          "],",
          "[c, l, [h, y]],",
          "[",
          "/\\b((?:bb[a-f]|st[hv])100-\\d)/i,",
          "/\\(bb10; (\\w+)/i",
          "],",
          "[c, [l, ve], [h, b]],",
          "[",
          "/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i",
          "],",
          "[c, [l, be], [h, y]],",
          "[",
          "/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i",
          "],",
          "[c, [l, be], [h, b]],",
          "[",
          "/(nexus 9)/i",
          "],",
          "[c, [l, \"HTC\"], [h, y]],",
          "[",
          "/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,",
          "/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,",
          "/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i",
          "],",
          "[l, [c, /_/g, \" \"], [h, b]],",
          "[",
          "/droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i",
          "],",
          "[c, [l, \"TCL\"], [h, y]],",
          "[",
          "/(itel) ((\\w+))/i",
          "],",
          "[[l, M], c, [h, Q, { tablet: [\"p10001l\", \"w7001\"], \"*\": \"mobile\" }]],",
          "[",
          "/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i",
          "],",
          "[c, [l, \"Acer\"], [h, y]],",
          "[",
          "/droid.+; (m[1-5] note) bui/i,",
          "/\\bmz-([-\\w]{2,})/i",
          "],",
          "[c, [l, \"Meizu\"], [h, b]],",
          "[",
          "/; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i",
          "],",
          "[c, [l, \"Ulefone\"], [h, b]],",
          "[",
          "/; (energy ?\\w+)(?: bui|\\))/i,",
          "/; energizer ([\\w ]+)(?: bui|\\))/i",
          "],",
          "[c, [l, \"Energizer\"], [h, b]],",
          "[",
          "/; cat (b35);/i,",
          "/; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i",
          "],",
          "[c, [l, \"Cat\"], [h, b]],",
          "[",
          "/((?:new )?andromax[\\w- ]+)(?: bui|\\))/i",
          "],",
          "[c, [l, \"Smartfren\"], [h, b]],",
          "[",
          "/droid.+; (a(?:015|06[35]|142p?))/i",
          "],",
          "[c, [l, \"Nothing\"], [h, b]],",
          "[",
          "/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,",
          "/; (imo) ((?!tab)[\\w ]+?)(?: bui|\\))/i,",
          "/(hp) ([\\w ]+\\w)/i,",
          "/(asus)-?(\\w+)/i,",
          "/(microsoft); (lumia[\\w ]+)/i,",
          "/(lenovo)[-_ ]?([-\\w]+)/i,",
          "/(jolla)/i,",
          "/(oppo) ?([\\w ]+) bui/i",
          "],",
          "[l, c, [h, b]],",
          "[",
          "/(imo) (tab \\w+)/i,",
          "/(kobo)\\s(ereader|touch)/i,",
          "/(archos) (gamepad2?)/i,",
          "/(hp).+(touchpad(?!.+tablet)|tablet)/i,",
          "/(kindle)\\/([\\w\\.]+)/i,",
          "/(nook)[\\w ]+build\\/(\\w+)/i,",
          "/(dell) (strea[kpr\\d ]*[\\dko])/i,",
          "/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,",
          "/(trinity)[- ]*(t\\d{3}) bui/i,",
          "/(gigaset)[- ]+(q\\w{1,9}) bui/i,",
          "/(vodafone) ([\\w ]+)(?:\\)| bui)/i",
          "],",
          "[l, c, [h, y]],",
          "[",
          "/(surface duo)/i",
          "],",
          "[c, [l, ae], [h, y]],",
          "[",
          "/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i",
          "],",
          "[c, [l, \"Fairphone\"], [h, b]],",
          "[",
          "/(u304aa)/i",
          "],",
          "[c, [l, \"AT&T\"], [h, b]],",
          "[",
          "/\\bsie-(\\w*)/i",
          "],",
          "[c, [l, \"Siemens\"], [h, b]],",
          "[",
          "/\\b(rct\\w+) b/i",
          "],",
          "[c, [l, \"RCA\"], [h, y]],",
          "[",
          "/\\b(venue[\\d ]{2,7}) b/i",
          "],",
          "[c, [l, \"Dell\"], [h, y]],",
          "[",
          "/\\b(q(?:mv|ta)\\w+) b/i",
          "],",
          "[c, [l, \"Verizon\"], [h, y]],",
          "[",
          "/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i",
          "],",
          "[c, [l, \"Barnes & Noble\"], [h, y]],",
          "[",
          "/\\b(tm\\d{3}\\w+) b/i",
          "],",
          "[c, [l, \"NuVision\"], [h, y]],",
          "[",
          "/\\b(k88) b/i",
          "],",
          "[c, [l, \"ZTE\"], [h, y]],",
          "[",
          "/\\b(nx\\d{3}j) b/i",
          "],",
          "[c, [l, \"ZTE\"], [h, b]],",
          "[",
          "/\\b(gen\\d{3}) b.+49h/i",
          "],",
          "[c, [l, \"Swiss\"], [h, b]],",
          "[",
          "/\\b(zur\\d{3}) b/i",
          "],",
          "[c, [l, \"Swiss\"], [h, y]],",
          "[",
          "/\\b((zeki)?tb.*\\b) b/i",
          "],",
          "[c, [l, \"Zeki\"], [h, y]],",
          "[",
          "/\\b([yr]\\d{2}) b/i,",
          "/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i",
          "],",
          "[[l, \"Dragon Touch\"], c, [h, y]],",
          "[",
          "/\\b(ns-?\\w{0,9}) b/i",
          "],",
          "[c, [l, \"Insignia\"], [h, y]],",
          "[",
          "/\\b((nxa|next)-?\\w{0,9}) b/i",
          "],",
          "[c, [l, \"NextBook\"], [h, y]],",
          "[",
          "/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i",
          "],",
          "[[l, \"Voice\"], c, [h, b]],",
          "[",
          "/\\b(lvtel\\-)?(v1[12]) b/i",
          "],",
          "[[l, \"LvTel\"], c, [h, b]],",
          "[",
          "/\\b(ph-1) /i",
          "],",
          "[c, [l, \"Essential\"], [h, b]],",
          "[",
          "/\\b(v(100md|700na|7011|917g).*\\b) b/i",
          "],",
          "[c, [l, \"Envizen\"], [h, y]],",
          "[",
          "/\\b(trio[-\\w\\. ]+) b/i",
          "],",
          "[c, [l, \"MachSpeed\"], [h, y]],",
          "[",
          "/\\btu_(1491) b/i",
          "],",
          "[c, [l, \"Rotor\"], [h, y]],",
          "[",
          "/(shield[\\w ]+) b/i",
          "],",
          "[c, [l, \"Nvidia\"], [h, y]],",
          "[",
          "/(sprint) (\\w+)/i",
          "],",
          "[l, c, [h, b]],",
          "[",
          "/(kin\\.[onetw]{3})/i",
          "],",
          "[[c, /\\./g, \" \"], [l, ae], [h, b]],",
          "[",
          "/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i",
          "],",
          "[c, [l, ce], [h, y]],",
          "[",
          "/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i",
          "],",
          "[c, [l, ce], [h, b]],",
          "[",
          "/smart-tv.+(samsung)/i",
          "],",
          "[l, [h, E]],",
          "[",
          "/hbbtv.+maple;(\\d+)/i",
          "],",
          "[[c, /^/, \"SmartTV\"], [l, z], [h, E]],",
          "[",
          "/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i",
          "],",
          "[[l, se], [h, E]],",
          "[",
          "/(apple) ?tv/i",
          "],",
          "[l, [c, F + \" TV\"], [h, E]],",
          "[",
          "/crkey/i",
          "],",
          "[[c, J + \"cast\"], [l, K], [h, E]],",
          "[",
          "/droid.+aft(\\w+)( bui|\\))/i",
          "],",
          "[c, [l, L], [h, E]],",
          "[",
          "/\\(dtv[\\);].+(aquos)/i,",
          "/(aquos-tv[\\w ]+)\\)/i",
          "],",
          "[c, [l, Ce], [h, E]],",
          "[",
          "/(bravia[\\w ]+)( bui|\\))/i",
          "],",
          "[c, [l, X], [h, E]],",
          "[",
          "/(mitv-\\w{5}) bui/i",
          "],",
          "[c, [l, ne], [h, E]],",
          "[",
          "/Hbbtv.*(technisat) (.*);/i",
          "],",
          "[l, c, [h, E]],",
          "[",
          "/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,",
          "/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i",
          "],",
          "[[l, he], [c, he], [h, E]],",
          "[",
          "/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i",
          "],",
          "[[h, E]],",
          "[",
          "/(ouya)/i,",
          "/(nintendo) ([wids3utch]+)/i",
          "],",
          "[l, c, [h, j]],",
          "[",
          "/droid.+; (shield) bui/i",
          "],",
          "[c, [l, \"Nvidia\"], [h, j]],",
          "[",
          "/(playstation [345portablevi]+)/i",
          "],",
          "[c, [l, X], [h, j]],",
          "[",
          "/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i",
          "],",
          "[c, [l, ae], [h, j]],",
          "[",
          "/\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i",
          "],",
          "[c, [l, z], [h, R]],",
          "[",
          "/((pebble))app/i",
          "],",
          "[l, c, [h, R]],",
          "[",
          "/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i",
          "],",
          "[c, [l, F], [h, R]],",
          "[",
          "/droid.+; (glass) \\d/i",
          "],",
          "[c, [l, K], [h, R]],",
          "[",
          "/droid.+; (wt63?0{2,3})\\)/i",
          "],",
          "[c, [l, ce], [h, R]],",
          "[",
          "/droid.+; (glass) \\d/i",
          "],",
          "[c, [l, K], [h, R]],",
          "[",
          "/(pico) (4|neo3(?: link|pro)?)/i",
          "],",
          "[l, c, [h, R]],",
          "[",
          "/; (quest( \\d| pro)?)/i",
          "],",
          "[c, [l, Ie], [h, R]],",
          "[",
          "/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i",
          "],",
          "[l, [h, oe]],",
          "[",
          "/(aeobc)\\b/i",
          "],",
          "[c, [l, L], [h, oe]],",
          "[",
          "/droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i",
          "],",
          "[c, [h, b]],",
          "[",
          "/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i",
          "],",
          "[c, [h, y]],",
          "[",
          "/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i",
          "],",
          "[[h, y]],",
          "[",
          "/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i",
          "],",
          "[[h, b]],",
          "[",
          "/(android[-\\w\\. ]{0,9});.+buil/i",
          "],",
          "[c, [l, \"Generic\"]]",
          "],",
          "engine: [",
          "[",
          "/windows.+ edge\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, Ve + \"HTML\"]],",
          "[",
          "/(arkweb)\\/([\\w\\.]+)/i",
          "],",
          "[d, p],",
          "[",
          "/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i",
          "],",
          "[p, [d, \"Blink\"]],",
          "[",
          "/(presto)\\/([\\w\\.]+)/i,",
          "/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i,",
          "/ekioh(flow)\\/([\\w\\.]+)/i,",
          "/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,",
          "/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,",
          "/\\b(libweb)/i",
          "],",
          "[d, p],",
          "[",
          "/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i",
          "],",
          "[p, d]",
          "],",
          "os: [",
          "[",
          "/microsoft (windows) (vista|xp)/i",
          "],",
          "[d, p],",
          "[",
          "/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i",
          "],",
          "[d, [p, Q, xe]],",
          "[",
          "/windows nt 6\\.2; (arm)/i,",
          "/windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,",
          "/(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i",
          "],",
          "[[p, Q, xe], [d, \"Windows\"]],",
          "[",
          "/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,",
          "/(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,",
          "/cfnetwork\\/.+darwin/i",
          "],",
          "[[p, /_/g, \".\"], [d, \"iOS\"]],",
          "[",
          "/(mac os x) ?([\\w\\. ]*)/i,",
          "/(macintosh|mac_powerpc\\b)(?!.+haiku)/i",
          "],",
          "[[d, De], [p, /_/g, \".\"]],",
          "[",
          "/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i",
          "],",
          "[p, d],",
          "[",
          "/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\\/ ]?([\\w\\.]*)/i,",
          "/(blackberry)\\w*\\/([\\w\\.]*)/i,",
          "/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,",
          "/\\((series40);/i",
          "],",
          "[d, p],",
          "[",
          "/\\(bb(10);/i",
          "],",
          "[p, [d, ve]],",
          "[",
          "/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i",
          "],",
          "[p, [d, \"Symbian\"]],",
          "[",
          "/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, Y + \" OS\"]],",
          "[",
          "/web0s;.+rt(tv)/i,",
          "/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i",
          "],",
          "[p, [d, \"webOS\"]],",
          "[",
          "/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i",
          "],",
          "[p, [d, \"watchOS\"]],",
          "[",
          "/crkey\\/([\\d\\.]+)/i",
          "],",
          "[p, [d, J + \"cast\"]],",
          "[",
          "/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i",
          "],",
          "[[d, ke], p],",
          "[",
          "/panasonic;(viera)/i,",
          "/(netrange)mmh/i,",
          "/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,",
          "/(nintendo|playstation) ([wids345portablevuch]+)/i,",
          "/(xbox); +xbox ([^\\);]+)/i,",
          "/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,",
          "/(mint)[\\/\\(\\) ]?(\\w*)/i,",
          "/(mageia|vectorlinux)[; ]/i,",
          "/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,",
          "/(hurd|linux) ?([\\w\\.]*)/i,",
          "/(gnu) ?([\\w\\.]*)/i,",
          "/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,",
          "/(haiku) (\\w+)/i",
          "],",
          "[d, p],",
          "[",
          "/(sunos) ?([\\w\\.\\d]*)/i",
          "],",
          "[[d, \"Solaris\"], p],",
          "[",
          "/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,",
          "/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,",
          "/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,",
          "/(unix) ?([\\w\\.]*)/i",
          "],",
          "[d, p]",
          "]",
          "}, x = function(C, I) {",
          "if (typeof C === f && (I = C, C = i), !(this instanceof x))",
          "return new x(C, I).getResult();",
          "var m = typeof t !== g && t.navigator ? t.navigator : i, D = C || (m && m.userAgent ? m.userAgent : s), _ = m && m.userAgentData ? m.userAgentData : i, U = I ? Le(Ue, I) : Ue, k = m && m.userAgent == D;",
          "return this.getBrowser = function() {",
          "var w = {};",
          "return w[d] = i, w[p] = i, V.call(w, D, U.browser), w[S] = qe(w[p]), k && m && m.brave && typeof m.brave.isBrave == u && (w[d] = \"Brave\"), w;",
          "}, this.getCPU = function() {",
          "var w = {};",
          "return w[A] = i, V.call(w, D, U.cpu), w;",
          "}, this.getDevice = function() {",
          "var w = {};",
          "return w[l] = i, w[c] = i, w[h] = i, V.call(w, D, U.device), k && !w[h] && _ && _.mobile && (w[h] = b), k && w[c] == \"Macintosh\" && m && typeof m.standalone !== g && m.maxTouchPoints && m.maxTouchPoints > 2 && (w[c] = \"iPad\", w[h] = y), w;",
          "}, this.getEngine = function() {",
          "var w = {};",
          "return w[d] = i, w[p] = i, V.call(w, D, U.engine), w;",
          "}, this.getOS = function() {",
          "var w = {};",
          "return w[d] = i, w[p] = i, V.call(w, D, U.os), k && !w[d] && _ && _.platform && _.platform != \"Unknown\" && (w[d] = _.platform.replace(/chrome os/i, ke).replace(/macos/i, De)), w;",
          "}, this.getResult = function() {",
          "return {",
          "ua: this.getUA(),",
          "browser: this.getBrowser(),",
          "engine: this.getEngine(),",
          "os: this.getOS(),",
          "device: this.getDevice(),",
          "cpu: this.getCPU()",
          "};",
          "}, this.getUA = function() {",
          "return D;",
          "}, this.setUA = function(w) {",
          "return D = typeof w === v && w.length > re ? he(w, re) : w, this;",
          "}, this.setUA(D), this;",
          "};",
          "x.VERSION = o, x.BROWSER = Z([d, p, S]), x.CPU = Z([A]), x.DEVICE = Z([c, l, h, j, b, E, y, R, oe]), x.ENGINE = x.OS = Z([d, p]), a.exports && (e = a.exports = x), e.UAParser = x;",
          "var H = typeof t !== g && (t.jQuery || t.Zepto);",
          "if (H && !H.ua) {",
          "var W = new x();",
          "H.ua = W.getResult(), H.ua.get = function() {",
          "return W.getUA();",
          "}, H.ua.set = function(C) {",
          "W.setUA(C);",
          "var I = W.getResult();",
          "for (var m in I)",
          "H.ua[m] = I[m];",
          "};",
          "}",
          "})(typeof window == \"object\" ? window : yt);",
          "})(fe, fe.exports);",
          "const St = fe.exports;",
          "var Ct = (a = \"\") => {",
          "if (typeof a != \"string\")",
          "return !1;",
          "let e = a.trim().replace(/[\\s-\\{\\}\\(\\)]/g, \"\");",
          "if (e.length !== 32)",
          "return !1;",
          "let t = /^[0-9A-Fa-f]+$/;",
          "return t.lastIndex = 0, t.test(e);",
          "}, It = \"0.1.15\", Oe = (a, e) => {",
          "fetch(`${a}/events`, {",
          "method: \"POST\",",
          "headers: {",
          "\"Content-Type\": \"application/json\",",
          "\"store-id\": e.store_id",
          "},",
          "body: JSON.stringify(e)",
          "});",
          "}, je = /* @__PURE__ */ ((a) => (a[a.StoreDonation = 0] = \"StoreDonation\", a[a.AddOn = 1] = \"AddOn\", a[a.RoundUp = 2] = \"RoundUp\", a))(je || {}), Fe = /* @__PURE__ */ ((a) => (a[a.Compact = 0] = \"Compact\", a[a.Contained = 1] = \"Contained\", a[a.Full = 2] = \"Full\", a[a.Default = 3] = \"Default\", a))(Fe || {}), Ke = /* @__PURE__ */ ((a) => (a[a.Automatic = 0] = \"Automatic\", a[a.Manual = 1] = \"Manual\", a[a[\"Theme Section\"] = 2] = \"Theme Section\", a[a[\"Checkout Ext\"] = 3] = \"Checkout Ext\", a))(Ke || {}), Be = /* @__PURE__ */ ((a) => (a[a.Cart = 0] = \"Cart\", a[a.Product = 1] = \"Product\", a[a.Checkout = 2] = \"Checkout\", a[a.Unknown = 3] = \"Unknown\", a))(Be || {}), $ = \"unknown\", kt = 5e3, Dt = class {",
          "constructor(a) {",
          "r(this, \"data\", {});",
          "r(this, \"eventList\", []);",
          "r(this, \"baseUrl\", \"\");",
          "const { storeId: e, trackingId: t, baseUrl: i, metadata: o } = a;",
          "if (!Ct(e))",
          "throw new Error(\"Invalid StoreId\");",
          "this.data.client_properties = this.hydrate_properties(), this.data.store_id = e, this.data.tracking_id = t, this.data.metadata = o, this.baseUrl = i;",
          "}",
          "track(a, e) {",
          "this.data.event = {",
          "time_stamp: Date.now(),",
          "event_type: a,",
          "event_version: It,",
          "payload: e",
          "};",
          "let t = { ...this.data };",
          "Oe(this.baseUrl, t);",
          "}",
          "identify({ email: a, id: e }) {",
          "this.data.customer = {",
          "id: e,",
          "email: a",
          "};",
          "}",
          "metadata(a = {}) {",
          "this.data.metadata = {",
          "...this.data.metadata,",
          "...a",
          "};",
          "}",
          "poll() {",
          "setTimeout(() => {",
          "if (this.eventList.length > 0)",
          "try {",
          "Oe(this.baseUrl, this.eventList), this.eventList = [];",
          "} catch {",
          "throw new Error(\"Error Sending Events\");",
          "}",
          "this.poll();",
          "}, kt);",
          "}",
          "hydrate_properties() {",
          "var v;",
          "let a, e, t, i, o = \"unknown\", s, n, { device: u, platform: g, browser: f } = navigator != null && navigator.userAgentData ? this.modernUA() : this.legacyUA();",
          "a = u, e = g, t = f.name, i = f.version;",
          "try {",
          "s = window.location.href;",
          "} catch {",
          "s = o;",
          "}",
          "try {",
          "n = document.referrer;",
          "} catch {",
          "n = o;",
          "}",
          "return {",
          "user_agent: (v = navigator.userAgent) != null ? v : o,",
          "url: s.toLowerCase(),",
          "device_type: a.toLowerCase(),",
          "browser_type: t.toLowerCase(),",
          "browser_version: i.toLowerCase(),",
          "platform_type: e.toLowerCase(),",
          "referral_url: n.toLowerCase()",
          "};",
          "}",
          "modernUA() {",
          "var u, g;",
          "let a = [\"Brave\", \"Chrome\", \"Firefox\", \"AppleWebKit\", \"Safari\", \"Mozilla\"], e, t, i;",
          "t = navigator.userAgentData.mobile, i = navigator.userAgentData.platform.toLowerCase();",
          "let o = navigator.userAgentData.brands;",
          "o && (e = o.filter(({ brand: f, version: v }) => a.includes(f) ? {",
          "brand: f,",
          "version: v",
          "} : null));",
          "let s = (u = e[0]) == null ? void 0 : u.brand, n = (g = e[0]) == null ? void 0 : g.version;",
          "return {",
          "device: t ? \"mobile\" : \"desktop\",",
          "platform: i != null ? i : $,",
          "browser: {",
          "name: s != null ? s : $,",
          "version: n != null ? n : $",
          "}",
          "};",
          "}",
          "legacyUA() {",
          "var o, s;",
          "let { os: a, browser: e, device: t } = St(), i = null;",
          "switch (t == null ? void 0 : t.type) {",
          "case \"mobile\":",
          "i = \"mobile\";",
          "break;",
          "case \"tablet\":",
          "i = \"tablet\";",
          "break;",
          "case \"console\":",
          "i = \"console\";",
          "break;",
          "default:",
          "i = \"desktop\";",
          "break;",
          "}",
          "return {",
          "device: i != null ? i : $,",
          "platform: a != null && a.name ? a.name.toLowerCase() : $,",
          "browser: {",
          "name: (o = e == null ? void 0 : e.name) != null ? o : $,",
          "version: (s = e == null ? void 0 : e.version) != null ? s : $",
          "}",
          "};",
          "}",
          "}, Re = Dt;",
          "class ze {",
          "constructor(e) {",
          "r(this, \"charitiesAdapter\");",
          "r(this, \"portfoliosAdapter\");",
          "r(this, \"storeAdapter\");",
          "r(this, \"trackingAdapter\");",
          "r(this, \"categoriesService\");",
          "r(this, \"tracking\");",
          "r(this, \"store\");",
          "r(this, \"storeId\");",
          "r(this, \"testMode\");",
          "r(this, \"selectedCauses\");",
          "r(this, \"environment\");",
          "r(this, \"cache\");",
          "r(this, \"logger\");",
          "r(this, \"errorHandler\");",
          "r(this, \"eventEmitter\");",
          "r(this, \"eventTracker\");",
          "r(this, \"dataLayer\");",
          "r(this, \"currency\", \"USD\");",
          "r(this, \"currencyRate\", 1);",
          "r(this, \"setCacheForPostConversion\", (e, t, i) => {",
          "this.cache.set(\"sg-confirmation\", {",
          "id: e.id,",
          "customCss: e.customCSS,",
          "embedTarget: e.targetCssSelector,",
          "embedded: e.isEmbeddedConfirmation,",
          "storeName: e.name,",
          "storeUrl: \"testing.com\",",
          "causes: i,",
          "totalDonationAmount: \"$\" + t.toFixed(2)",
          "});",
          "});",
          "r(this, \"setCurrency\", (e, t) => {",
          "this.currency = e, this.currencyRate = t;",
          "});",
          "this.cache = e.persistence ? e.persistence : new st(), this.eventEmitter = rt, this.errorHandler = new nt(this.eventEmitter), this.storeId = e.storeId, this.environment = e.environment, this.charitiesAdapter = new bt(e.environment, this.cache, this.errorHandler, this.storeId), this.portfoliosAdapter = new vt(e.environment, this.cache, this.errorHandler, this.storeId), this.storeAdapter = new mt(this.storeId, e.environment, this.cache, this.errorHandler), this.trackingAdapter = new wt(this.storeId, e.environment, this.errorHandler), this.categoriesService = new Me(), this.store = new Ne({}, \"\"), this.tracking = {}, this.testMode = e.testMode, this.selectedCauses = [], this.logger = e.logger ? e.logger : new $e(), this.getStore(), this.dataLayer = e.dataLayer ? e.dataLayer : {};",
          "}",
          "getSelectedCauses() {",
          "try {",
          "return new G(this.selectedCauses);",
          "} catch (e) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting selected causes\", e), {};",
          "}",
          "}",
          "async search(e, t, i, o, s, n, u) {",
          "try {",
          "let g = await this.charitiesAdapter.search({ searchTerm: i, skip: e, take: t, zip: o, city: s, state: n, category: u });",
          "return this.track(\"Action::Searched\", {",
          "search: i,",
          "zip: o,",
          "city: s,",
          "state: n,",
          "category: u",
          "}), this.emit(\"Search::Finished\", { searchResults: g }), g.map((f) => new dt(f));",
          "} catch (g) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error searching causes\", g), {};",
          "}",
          "}",
          "async startTracking(e, t, i, o) {",
          "var s;",
          "try {",
          "let n, u;",
          "const g = this.environment !== \"prod\" ? `${this.environment}.` : \"\", f = {",
          "storeId: e,",
          "trackingId: o != null ? o : \"\",",
          "baseUrl: `https://clickstream.${g}shoppinggives.com`,",
          "metadata: {",
          "widget: {",
          "type: je.StoreDonation,",
          "style: Fe.Default,",
          "placement: Ke[\"Checkout Ext\"],",
          "location: Be.Checkout",
          "}",
          "}",
          "};",
          "let v = \"\";",
          "try {",
          "if (window) {",
          "let c = new URLSearchParams(window.location.search);",
          "c && (v = (s = c.get(\"sgcause\")) != null ? s : \"\", v && this.cache.set(\"causeId\", v));",
          "}",
          "} catch {",
          "this.logger.debug(\"window not available\");",
          "}",
          "if (o && this.store.letShoppersChoose && !v) {",
          "let c = { trackingId: o };",
          "return n = await this.getTrackedCause(o), n && (c.causeId = n.causeId, c.causeName = n.causeName), this.cache.set(\"tracking\", c), this.tracking = c, this.eventTracker = new Re(f), c;",
          "}",
          "try {",
          "window && (await this.checkUrlParamsForCause(this.tracking.trackingId), await this.checkForKlaviyoUrlParams(this.tracking.trackingId));",
          "} catch {",
          "this.logger.debug(\"window not available\");",
          "}",
          "let S = await this.cache.get(\"tracking\");",
          "return S ? this.tracking = S : (u = await this.trackingAdapter.startTracking(e, t, i), this.cache.set(\"tracking\", u), this.tracking = u), this.emit(\"Tracking::Started\", u || S), f.trackingId = this.tracking.trackingId, this.eventTracker = new Re(f), u || S;",
          "} catch (n) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error starting tracking\", n), {};",
          "}",
          "}",
          "async checkUrlParamsForCause(e) {",
          "let t = this.cache.get(\"causeId\");",
          "if (t || (t = new URLSearchParams(window.location.search).get(\"sgcause\")), t) {",
          "let i = await this.populateCauseIds([t]);",
          "await this.updateTracking(e, i[0].id, i[0].name);",
          "return;",
          "}",
          "}",
          "async checkForKlaviyoUrlParams(e) {",
          "let t = this.cache.get(`sg-${te.Klaviyo}`), i = !1;",
          "if (!t) {",
          "let o = new URLSearchParams(window.location.search), s = o.get(\"_kx\");",
          "s && (t = {",
          "_kx: s,",
          "variation: o.get(\"variation\"),",
          "utm_content: o.get(\"utm_content\"),",
          "utm_campaign: o.get(\"utm_campaign\")",
          "}, i = !0);",
          "}",
          "i && this.trackingAdapter.setIntegrationMetadata(e, te.Klaviyo, t).then(() => {",
          "this.cache.set(`sg-${te.Klaviyo}`, t);",
          "});",
          "}",
          "async updateTracking(e, t, i) {",
          "try {",
          "let o = await this.trackingAdapter.updateTracking(e, t, i);",
          "return this.tracking = { trackingId: e, causeId: t == null ? void 0 : t.toString(), causeName: i }, this.cache.set(\"tracking\", this.tracking), this.emit(\"Tracking::Updated\", { trackingUpdated: o }), o;",
          "} catch (o) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error updating tracking\", o), !1;",
          "}",
          "}",
          "async getTrackedCause(e) {",
          "try {",
          "let t = await this.trackingAdapter.getTrackedCause(e);",
          "return new tt(t);",
          "} catch (t) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting tracked cause\", t), {};",
          "}",
          "}",
          "async setSelectedCause(e, t) {",
          "try {",
          "let i = await this.cache.get(\"tracking\");",
          "await this.updateTracking(i.trackingId, e.id, e.name);",
          "let o = new G(e);",
          "return this.track(this.selectedCauses.length == 0 ? \"Cause::Set\" : \"Cause::Updated\", {",
          "id: o.id,",
          "name: o.name,",
          "redemption_behavior: t,",
          "category_id: o.categoryId,",
          "category_name: o.categoryName",
          "}), this.selectedCauses = o, this.emit(\"Cause::Updated\", { cause: e }), { cause: new G(e), error: [] };",
          "} catch (i) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error setting cause to tracking\", i), {};",
          "}",
          "}",
          "on(e, t) {",
          "this.eventEmitter.on(e, t);",
          "}",
          "async pollForStore() {",
          "return await new Promise((e) => {",
          "var t;",
          "if ((t = this.store) != null && t.id)",
          "e(!1);",
          "else {",
          "let i = new Date().getTime(), o = setInterval(() => {",
          "var s;",
          "new Date().getTime() - i > 5e3 && (clearInterval(o), e(!0)), (s = this.store) != null && s.id && (clearInterval(o), e(!1));",
          "}, 100);",
          "}",
          "});",
          "}",
          "async emit(e, t) {",
          "try {",
          "return await this.eventEmitter.emit(e, t);",
          "} catch (i) {",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error emitting event\", i);",
          "return;",
          "}",
          "}",
          "track(e, t) {",
          "this.eventTracker.track(e, t);",
          "}",
          "metadata(e) {",
          "this.eventTracker.metadata(e);",
          "}",
          "convertUSDtoForeignCurrency(e) {",
          "return parseFloat((e * this.currencyRate).toFixed(2));",
          "}",
          "async getStore() {",
          "this.store = await this.storeAdapter.getStore();",
          "}",
          "async populateCauseIds(e = []) {",
          "var t, i;",
          "try {",
          "let o = We(e), s = [], n = [];",
          "return (t = o.portfolioIds) != null && t.length && s.push(this.portfoliosAdapter.getPortfolios(o.portfolioIds.join(\",\"))), (i = o.charityIds) != null && i.length && s.push(this.charitiesAdapter.getByEins(o.charityIds.join(\",\"))), await Promise.all(s).then((u) => {",
          "u.forEach((g) => {",
          "g.forEach((f) => {",
          "f && n.push(new G(f));",
          "});",
          "});",
          "}), n;",
          "} catch (o) {",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error populating cause IDs\", o);",
          "return;",
          "}",
          "}",
          "async getCharities(e) {",
          "try {",
          "let t = await this.populateCauseIds(e);",
          "t = await this.categoriesService.replaceEmptyLogos([...t]);",
          "let i = this.store.causeMultipliers || [];",
          "return t.forEach(async (o) => {",
          "var n;",
          "let s = o.ein || o.id;",
          "if (this.store.letShoppersChoose && this.store.defaultCauseId)",
          "if (s == this.store.defaultCauseId) {",
          "o.default = !0;",
          "let u = await this.cache.get(\"tracking\");",
          "(!u || !u.causeName) && this.updateTracking(this.tracking.trackingId, s, o.name);",
          "} else",
          "o.default = !1;",
          "else",
          "this.store.letShoppersChoose || (o.default = !0);",
          "this.store.defaultDonationType === 0 && (o.multiplier = i[s] || null), (n = o.portfolioCharities) != null && n.length && this.categoriesService.replaceEmptyLogos([...o.portfolioCharities]);",
          "}), t;",
          "} catch (t) {",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting charities\", t);",
          "return;",
          "}",
          "}",
          "evaluateSegments() {",
          "return new ct(this.dataLayer).evaluate(this.store.segments);",
          "}",
          "}",
          "class At extends ze {",
          "constructor(t) {",
          "super(t);",
          "r(this, \"productAdapter\");",
          "r(this, \"donationInfo\");",
          "r(this, \"charities\");",
          "r(this, \"config\");",
          "r(this, \"segment\");",
          "r(this, \"getInitialSelectedCauses\", (t) => {",
          "var i;",
          "try {",
          "return this.store.letShoppersChoose && this.store.defaultCauseId ? (!t || !t.causeId) && (this.selectedCauses = [this.charities.find((o) => (o.id || o.ein) == this.store.defaultCauseId)]) : this.store.letShoppersChoose || (this.selectedCauses = (i = Object.keys(this.donationInfo.donationRecipients)) != null && i.length ? this.donationInfo.donationRecipients : this.charities), this.selectedCauses;",
          "} catch (o) {",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting initial cause selection\", o);",
          "return;",
          "}",
          "});",
          "this.donationInfo = new pe({ donationRecipients: {}, lineItems: [] }), this.charities = [], this.productAdapter = new Ge(this.storeId, this.environment, this.cache, this.errorHandler), this.config = {}, this.segment = null;",
          "}",
          "async initialize(t) {",
          "var i, o, s, n, u, g;",
          "try {",
          "let f = await this.pollForStore();",
          "if (this.config = t, f)",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\"), new ie({",
          "donationBreakdown: [],",
          "totalDonationAmount: 0,",
          "showWidget: !1,",
          "charities: [],",
          "selectedCauses: [],",
          "activeCampaigns: [],",
          "searchEnabled: !1,",
          "letShoppersChoose: !1,",
          "trackingId: \"\",",
          "directDonationInCart: !1,",
          "storeName: \"\"",
          "});",
          "this.config.currencyCode && this.config.currencyConversionRate && this.currency !== this.config.currencyCode && this.setCurrency(this.config.currencyCode.toUpperCase(), this.config.currencyConversionRate);",
          "let v = await this.startTracking(this.storeId, this.testMode, !1, t.trackingId), S = null;",
          "this.store.segments.length != 0 ? S = this.evaluateSegments() : S = { excludeSegment: !1 }, this.segment = S, this.donationInfo = await this.calculateDonation(",
          "new ue(t.lineItems, t.discount, v.causeId ? v.causeId : \"0\", !1, (i = this.segment) == null ? void 0 : i.id)",
          ");",
          "let c = this.store.letShoppersChoose ? this.store.featuredCauseIds : this.store.defaultCauseIds, d = await this.getCharities(c);",
          "this.charities = d, this.selectedCauses = this.getInitialSelectedCauses(v);",
          "let h = new ie({",
          "donationBreakdown: this.donationInfo.donationRecipients,",
          "totalDonationAmount: this.donationInfo.totalDonationAmount,",
          "showWidget: (o = this.segment) != null && o.excludeSegment ? !1 : this.isEligibleForDonation(),",
          "charities: this.store.letShoppersChoose ? d : (s = Object.keys(this.donationInfo.donationRecipients)) != null && s.length ? this.donationInfo.donationRecipients : this.charities,",
          "selectedCauses: this.store.letShoppersChoose ? (n = this.selectedCauses) != null ? n : [] : (u = Object.keys(this.donationInfo.donationRecipients)) != null && u.length ? this.donationInfo.donationRecipients : this.charities,",
          "activeCampaigns: this.store.activeCampaigns,",
          "searchEnabled: this.store.letShoppersChoose ? this.store.searchEnabled : !1,",
          "letShoppersChoose: this.store.letShoppersChoose,",
          "trackingId: this.tracking.trackingId,",
          "directDonationInCart: (g = this.donationInfo.lineItems) == null ? void 0 : g.some((l) => l.directDonation === !0),",
          "storeName: this.store.name",
          "});",
          "return this.setCacheForPostConversion(this.store, h.totalDonationAmount, h.donationBreakdown), this.emit(\"SDK::Ready\", h), h;",
          "} catch (f) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\", f), {};",
          "}",
          "}",
          "async update(t) {",
          "var i, o, s, n, u;",
          "try {",
          "this.config = t;",
          "let g = await this.calculateDonation(",
          "new ue(t.lineItems, t.discount, this.tracking.causeId ? this.tracking.causeId : \"0\", !1, (i = this.segment) == null ? void 0 : i.id)",
          ");",
          "this.donationInfo = g;",
          "let f = new gt({",
          "donationBreakdown: this.donationInfo.donationRecipients,",
          "totalDonationAmount: this.donationInfo.totalDonationAmount,",
          "charities: this.store.letShoppersChoose ? this.charities : (o = Object.keys(this.donationInfo.donationRecipients)) != null && o.length ? this.donationInfo.donationRecipients : this.charities,",
          "selectedCauses: this.store.letShoppersChoose ? (s = this.selectedCauses) != null ? s : [] : (n = Object.keys(this.donationInfo.donationRecipients)) != null && n.length ? this.donationInfo.donationRecipients : this.charities,",
          "directDonationInCart: (u = this.donationInfo.lineItems) == null ? void 0 : u.some((v) => v.directDonation === !0)",
          "});",
          "return this.setCacheForPostConversion(this.store, f.totalDonationAmount, f.donationBreakdown), this.emit(\"SDK::Updated\", this.donationInfo), f;",
          "} catch (g) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error updating widget\", g), {};",
          "}",
          "}",
          "async calculateDonation(t) {",
          "try {",
          "let i = await this.productAdapter.getCartDonation(this.storeId, { ...t }), o = new pe({ ...i });",
          "this.currency !== me.USD && (o = this.convertCartDonationResponse(i));",
          "let s = await this.getCharities(Object.keys(o.donationRecipients)), n = [];",
          "return s.length && s.forEach((u) => {",
          "let g = { ...u };",
          "g.donation = o.donationRecipients[u.ein || u.id], n.push(g);",
          "}), o.donationRecipients = n, this.selectedCauses = n.map((u) => new G(u)), this.donationInfo = o, o;",
          "} catch (i) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error calculating donation\", i), {};",
          "}",
          "}",
          "isEligibleForDonation() {",
          "try {",
          "const t = new He(this.store.activeCampaigns);",
          "return t.onlinePurchase && this.donationInfo.totalDonationAmount > 0 || t.addOnDonation || t.roundUpDonation;",
          "} catch (t) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error retrieving donation eligibility\", t), !1;",
          "}",
          "}",
          "getDonationBreakdown() {",
          "try {",
          "return this.donationInfo;",
          "} catch (t) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error retrieving donation breakdown\", t), {};",
          "}",
          "}",
          "convertCartDonationResponse(t) {",
          "if (t.cartDonation) {",
          "for (const [i, o] of Object.entries(t.cartDonation.donation))",
          "o && typeof o == \"number\" && (t.cartDonation.donation[i] = this.convertUSDtoForeignCurrency(o));",
          "t.cartDonation.totalDonationValue = this.convertUSDtoForeignCurrency(t.cartDonation.totalDonationValue);",
          "for (const [i, o] of Object.entries(t.donationRecipients))",
          "o && typeof o == \"number\" && (t.donationRecipients[i] = this.convertUSDtoForeignCurrency(o));",
          "}",
          "if (t.lineItems && t.lineItems.length > 0) {",
          "const i = {};",
          "t.lineItems.forEach((o, s) => {",
          "if (t.lineItems[s].donationType === we.Flat) {",
          "for (const [n, u] of Object.entries(o.donations))",
          "if (u && typeof u == \"number\") {",
          "const g = this.convertUSDtoForeignCurrency(u);",
          "t.lineItems[s].donations[n] = g, i[n] ? i[n] += g : i[n] = g;",
          "}",
          "t.lineItems[s].totalDonationValue = this.convertUSDtoForeignCurrency(t.lineItems[s].totalDonationValue);",
          "} else",
          "for (const [n, u] of Object.entries(o.donations))",
          "u && typeof u == \"number\" && (i[n] ? i[n] += t.lineItems[s].donations[n] : i[n] = t.lineItems[s].donations[n]);",
          "}), t.donationRecipients = i;",
          "}",
          "return new pe(t);",
          "}",
          "async setCause(t) {",
          "var g, f, v;",
          "const i = _e(t, this.charities);",
          "let o = await this.setSelectedCause(t, i), s = await this.cache.get(\"tracking\"), n = await this.calculateDonation(",
          "new ue(this.config.lineItems, this.config.discount, s.causeId ? s.causeId : \"0\", !1, (g = this.segment) == null ? void 0 : g.id)",
          "), u = this.store.letShoppersChoose ? (f = this.selectedCauses) != null ? f : [] : (v = Object.keys(n.donationRecipients)) != null && v.length ? n.donationRecipients : this.charities;",
          "return this.setCacheForPostConversion(this.store, n.totalDonationAmount, u), n.totalDonationAmount && (this.emit(\"SDK::Updated\", n), o.newTotalDonation = n.totalDonationAmount), o;",
          "}",
          "async clearCause() {",
          "let t = await this.cache.get(\"tracking\");",
          "await this.updateTracking(t.trackingId, 0, \"0\");",
          "}",
          "}",
          "class xt extends ze {",
          "constructor(t) {",
          "super(t);",
          "r(this, \"productAdapter\");",
          "r(this, \"donationInfo\");",
          "r(this, \"charities\");",
          "r(this, \"config\");",
          "r(this, \"segment\");",
          "r(this, \"getInitialSelectedCauses\", (t) => {",
          "var i;",
          "try {",
          "return this.store.letShoppersChoose && this.store.defaultCauseId ? (!t || !t.causeId) && (this.selectedCauses = [this.charities.find((o) => (o.id || o.ein) == this.store.defaultCauseId)]) : this.store.letShoppersChoose || (this.selectedCauses = Object.keys((i = this.donationInfo.donationRecipients) != null ? i : {}).length ? this.donationInfo.donationRecipients : this.charities), this.selectedCauses;",
          "} catch (o) {",
          "this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting initial cause selection\", o);",
          "return;",
          "}",
          "});",
          "this.donationInfo = {}, this.charities = [], this.productAdapter = new Ge(this.storeId, this.environment, this.cache, this.errorHandler), this.config = {}, this.segment = null;",
          "}",
          "async initialize(t, i = !1) {",
          "var o, s, n;",
          "try {",
          "if (this.config = t, await this.pollForStore())",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\"), new ie({",
          "donationBreakdown: [],",
          "totalDonationAmount: 0,",
          "showWidget: !1,",
          "charities: [],",
          "selectedCauses: [],",
          "activeCampaigns: [],",
          "searchEnabled: !1,",
          "letShoppersChoose: !1,",
          "trackingId: \"\",",
          "storeName: \"\"",
          "});",
          "this.config.currencyCode && this.config.currencyConversionRate && this.currency !== this.config.currencyCode && this.setCurrency(this.config.currencyCode.toUpperCase(), this.config.currencyConversionRate);",
          "let g = await this.startTracking(this.storeId, this.testMode, !1), f = null;",
          "this.store.segments.length != 0 ? f = this.evaluateSegments() : f = { excludeSegment: !1 }, this.segment = f, this.donationInfo = await this.calculateDonation(",
          "new ge(t.cmsId, t.price, g.causeId ? g.causeId : \"0\", (o = this.segment) == null ? void 0 : o.id)",
          ");",
          "let v = this.store.letShoppersChoose ? this.store.featuredCauseIds : this.store.defaultCauseIds, S = await this.getCharities(v);",
          "this.charities = S, this.selectedCauses = this.getInitialSelectedCauses(g);",
          "let c = new ie({",
          "donationBreakdown: this.donationInfo.donationRecipients,",
          "totalDonationAmount: this.donationInfo.totalDonationAmount,",
          "showWidget: (s = this.segment) != null && s.excludeSegment ? !1 : this.isEligibleForDonation(),",
          "charities: this.store.letShoppersChoose ? S : this.donationInfo.donationRecipients,",
          "selectedCauses: (n = this.selectedCauses) != null ? n : [],",
          "activeCampaigns: this.store.activeCampaigns,",
          "searchEnabled: this.store.letShoppersChoose ? this.store.searchEnabled : !1,",
          "letShoppersChoose: this.store.letShoppersChoose,",
          "trackingId: this.tracking.trackingId,",
          "storeName: this.store.name",
          "});",
          "return this.setCacheForPostConversion(this.store, c.totalDonationAmount, c.donationBreakdown), this.emit(\"SDK::Ready\", c), c;",
          "} catch (u) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error initializing SDK\", u), {};",
          "}",
          "}",
          "async update(t) {",
          "var i, o, s, n;",
          "try {",
          "this.config = t;",
          "let u = await this.calculateDonation(",
          "new ge(t.cmsId, t.price, this.tracking.causeId ? this.tracking.causeId : \"0\", (i = this.segment) == null ? void 0 : i.id)",
          ");",
          "this.donationInfo = u;",
          "let g = new ft({",
          "donationBreakdown: this.donationInfo.donationRecipients,",
          "totalDonationAmount: this.donationInfo.totalDonationAmount,",
          "charities: this.store.letShoppersChoose ? this.charities : (o = Object.keys(this.donationInfo.donationRecipients)) != null && o.length ? this.donationInfo.donationRecipients : this.charities,",
          "selectedCauses: this.store.letShoppersChoose ? (s = this.selectedCauses) != null ? s : [] : (n = Object.keys(this.donationInfo.donationRecipients)) != null && n.length ? this.donationInfo.donationRecipients : this.charities,",
          "excluded: this.donationInfo.excluded",
          "});",
          "return this.setCacheForPostConversion(this.store, g.totalDonationAmount, g.donationBreakdown), this.emit(\"SDK::Updated\", this.donationInfo), g;",
          "} catch (u) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error updating widget\", u), {};",
          "}",
          "}",
          "async calculateDonation(t) {",
          "try {",
          "let i = await this.productAdapter.getProductDonation(this.storeId, { ...t }), o = new Te({ ...i });",
          "this.currency !== me.USD && (o = this.convertProductDonationResponse(i));",
          "let s = await this.getCharities(Object.keys(o.donationRecipients)), n = [];",
          "return s.length && s.forEach((u) => {",
          "let g = { ...u };",
          "g.donation = o.donationRecipients[u.ein || u.id], n.push(g);",
          "}), o.donationRecipients = n, this.selectedCauses = n.map((u) => new G(u)), this.donationInfo = o, o;",
          "} catch (i) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error calculating donation\", i), {};",
          "}",
          "}",
          "async setCause(t) {",
          "var g, f, v;",
          "const i = _e(t, this.charities);",
          "let o = await this.setSelectedCause(t, i), s = await this.cache.get(\"tracking\"), n = await this.calculateDonation(",
          "new ge(this.config.cmsId, this.config.price, s.causeId ? s.causeId : \"0\", (g = this.segment) == null ? void 0 : g.id)",
          "), u = this.store.letShoppersChoose ? (f = this.selectedCauses) != null ? f : [] : (v = Object.keys(n.donationRecipients)) != null && v.length ? n.donationRecipients : this.charities;",
          "return this.setCacheForPostConversion(this.store, n.totalDonationAmount, u), n.totalDonationAmount && (this.emit(\"SDK::Updated\", n), o.newTotalDonation = n.totalDonationAmount), o;",
          "}",
          "async clearCause() {",
          "let t = await this.cache.get(\"tracking\");",
          "await this.updateTracking(t.trackingId, 0, \"0\");",
          "}",
          "isEligibleForDonation() {",
          "try {",
          "return this.donationInfo.totalDonationAmount > 0;",
          "} catch (t) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error retrieving donation eligibility\", t), !1;",
          "}",
          "}",
          "convertProductDonationResponse(t) {",
          "let i = t;",
          "if (t.result.donationType === we.Flat) {",
          "for (const [o, s] of Object.entries(t.result.donations))",
          "s && typeof s == \"number\" && (t.result.donations[o] = this.convertUSDtoForeignCurrency(s));",
          "t.result.totalDonationValue = this.convertUSDtoForeignCurrency(t.result.totalDonationValue);",
          "}",
          "return new Te(i);",
          "}",
          "getDonationBreakdown() {",
          "try {",
          "return this.donationInfo;",
          "} catch (t) {",
          "return this.errorHandler.throw(\"ShoppingGivesSDKError\", \"Error getting donation breakdown\", t), {};",
          "}",
          "}",
          "}",
          "export {",
          "At as CartHandler,",
          "G as CauseModel,",
          "et as Environments,",
          "xt as ProductHandler",
          "};",
          "//# sourceMappingURL=shoppingGives-sdk.js.map"
        ],
        "removals": [],
        "impact": "major"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "ca127f3",
    "original_message": "Correctly set up the SDK client",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/src/index.tsx",
        "summary": "",
        "additions": [
          "import { useEffect, useRef, useState } from \"react\";",
          "reactExtension,",
          "View,",
          "useSettings,",
          "useAppMetafields,",
          "BlockStack,",
          "useCartLines,",
          "Heading,",
          "Text,",
          "useExtension,",
          "useAttributes,",
          "useApplyAttributeChange,",
          "useTotalAmount,",
          "useCustomer,",
          "useShippingAddress,",
          "Link,",
          "useApi,",
          "} from \"@shopify/ui-extensions-react/checkout\";",
          "import {",
          "Footer,",
          "TitleModule,",
          "CauseModule,",
          "RoundUpModule,",
          "AddOnDonationModule,",
          "DonationOnPurchaseModule,",
          "} from \"./components\";",
          "import { caZipCodes } from \"./data\";",
          "import { CartHandler, Environments } from \"@shoppinggivesos/impact-sdk\";",
          "import Placeholder from \"./components/Placeholder\";",
          "export default reactExtension(\"purchase.checkout.block.render\", () => <App />);",
          "};",
          "const trackingKey = \"ShoppingGives Donation Tracking ID\";",
          "const { storage } = useApi();",
          "let metafields = useAppMetafields({",
          "namespace: \"sg-cc\",",
          "key: \"sg-metafield\",",
          "});",
          "let {",
          "hideCauseCard,",
          "customTitle,",
          "customSubTitle,",
          "customDonationText,",
          "customSearchPlaceholder,",
          "customAddOnText,",
          "customSearchModalTitle,",
          "hideCategoryFilter,",
          "hideNonUSD,",
          "customAddOnSubText,",
          "AddOnButtonText1,",
          "AddOnButtonText2,",
          "AddOnButtonText3,",
          "AddOnButtonText4,",
          "productVariantExclusions,",
          "} = useSettings();",
          "const lineItems = useCartLines();",
          "const cartAttributes = useAttributes();",
          "const cartTotal = lineItems.reduce(",
          "(sum, object) => sum + object.cost.totalAmount.amount,",
          "0",
          ");",
          "const applyCartAttributes = useApplyAttributeChange();",
          "const [isLoading, setIsLoading] = useState(true);",
          "let metafield = metafields[0]",
          "? JSON.parse(metafields[0].metafield.value)",
          ": \"\";",
          "let storeId = metafield[\"storeId\"];",
          "let roundUpId = metafield[\"sgRoundUpId\"];",
          "let metaAddOnIds = metafield[\"sgAddOnIds\"] || [];",
          "let excludedIds = productVariantExclusions?.split(\",\") || [];",
          "let ext = useExtension();",
          "let client: CartHandler;",
          "let orderTotal = useTotalAmount();",
          "let loadedTime;",
          "let customer = useCustomer();",
          "let customerAddress = useShippingAddress();",
          "let segmentMetafieldRaw =",
          "useAppMetafields({ namespace: \"sg-cc\", key: \"sg-segment-metafield\" }) ?? {};",
          "let segmentMetafield = segmentMetafieldRaw[0]",
          "? JSON.parse(segmentMetafieldRaw[0].metafield.value)",
          ": \"\";",
          "let customAddOnSubTextNormalized = customAddOnSubText ?? \"\";",
          "const dataLayer = {",
          "customer: {",
          "id: customer?.id.match(/\\d+$/)[0],",
          "firstName: customer?.firstName,",
          "lastName: customer?.lastName,",
          "email: customer?.email,",
          "},",
          "order: {",
          "shippingAddress: {",
          "city: customerAddress?.city,",
          "country: customerAddress?.countryCode,",
          "},",
          "},",
          "external: {",
          "...segmentMetafield,",
          "},",
          "cart: {",
          "total: cartTotal,",
          "currencyCode: orderTotal?.currencyCode,",
          "lineItems: formatLineItems(lineItems),",
          "},",
          "};",
          "interface activeCampaignInterface {",
          "addOnDonation: boolean;",
          "roundUpDonation: boolean;",
          "onlinePurchase: boolean;",
          "}",
          "const [widgetState, setWidgetState] = useState({",
          "charities: [],",
          "showWidget: true,",
          "totalDonationAmount: 0,",
          "selectedCauses: [],",
          "activeCampaigns: {} as activeCampaignInterface,",
          "searchEnabled: true,",
          "letShoppersChoose: null,",
          "hasPLCD: false,",
          "directDonationInCart: false,",
          "donationBreakdown: [],",
          "});",
          "const stateRef = useRef(widgetState);",
          "const updateState = (newState) => {",
          "stateRef.current = newState;",
          "setWidgetState(newState);",
          "};",
          "const [SDKInstance, setSDKInstance] = useState<CartHandler>();",
          "const [searchResults, setSearchResults] = useState([]);",
          "const [loadingCharities, setLoadingCharities] = useState(false);",
          "const [removeAddOnTrigger, setRemoveAddOnTrigger] = useState(false);",
          "const [removeRoundUpTrigger, setRemoveRoundUpTrigger] = useState(false);",
          "const [skip, setSkip] = useState(0);",
          "const [addOnIds, setAddOnIds] = useState(metaAddOnIds ?? []);",
          "const [allowCustomerDonation, setAllowCustomerDonation] = useState(true);",
          "const [customerDonationRemoved, setCustomerDonationRemoved] = useState(false);",
          "const [ipLock, setIpLock] = useState(false);",
          "const [globalLock, setGlobalLock] = useState(false);",
          "const take = 5;",
          "useEffect(() => {",
          "const setupApiClient = async () => {",
          "if (!loadedTime) {",
          "loadedTime = Date.now();",
          "}",
          "let tracking = cartAttributes.find((x) => x.key === trackingKey);",
          "// comment this out for local development",
          "// let extId = ext.scriptUrl.includes('ngrok.') ? ext.scriptUrl.match(PARSE_DEV_GUID)[0] : ext.scriptUrl.match(PARSE_GUID)[1];",
          "let config = {",
          "storeId: storeId,",
          "environment: Environments.Production, // getEnvironment(extId), // use this for local development instead of : Environments.Production",
          "testMode: false,",
          "persistence: {",
          "get: async (key: string) => {",
          "let data: string = await storage.read(key);",
          "return JSON.parse(data);",
          "},",
          "set: async (key: string, value: string) => {",
          "await storage.write(key, JSON.stringify(value));",
          "},",
          "delete: async (key: string) => {",
          "await storage.delete(key);",
          "},",
          "dataLayer: dataLayer,",
          "};",
          "client = new CartHandler(config);",
          "client.on(\"Cause::Updated\", (data) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [data.cause],",
          "});",
          "});",
          "let items = formatLineItems(lineItems);",
          "client.on(\"SDK::Error\", (error) => {",
          "console.error(\"event\", error, items);",
          "});",
          "let data = await client.initialize({",
          "lineItems: items,",
          "discount: 0,",
          "trackingId: tracking ? tracking.value : null,",
          "ignoreSegments: true,",
          "});",
          "client.track(\"Checkout::Loaded\", {",
          "timestamp: loadedTime,",
          "lineItems: items,",
          "cartTotal: cartTotal,",
          "orderTotal: orderTotal.amount,",
          "});",
          "if (ext.rendered.current) {",
          "client.track(\"UI::Checkout::Rendered\", {});",
          "}",
          "if (!tracking && data.trackingId) {",
          "applyCartAttributes({",
          "type: \"updateAttribute\",",
          "key: trackingKey,",
          "value: data.trackingId,",
          "});",
          "}",
          "setSDKInstance(client);",
          "let hasPLCD =",
          "!data.letShoppersChoose &&",
          "data.donationBreakdown.some(",
          "(x) => x.donation !== data.donationBreakdown[0].donation",
          ");",
          "updateState({",
          "...stateRef.current,",
          "totalDonationAmount: data.totalDonationAmount,",
          "charities: data.charities,",
          "showWidget: data.showWidget,",
          "selectedCauses: data.selectedCauses,",
          "activeCampaigns: data.activeCampaigns,",
          "searchEnabled: data.searchEnabled,",
          "letShoppersChoose: data.letShoppersChoose,",
          "hasPLCD: hasPLCD,",
          "directDonationInCart: data.directDonationInCart,",
          "donationBreakdown: data.donationBreakdown,",
          "});",
          "setAllowCustomerDonation(!data.allowCustomerDonations);",
          "setIpLock(!data.allowCustomerDonations);",
          "await formatAddOnIds(config.environment);",
          "setIsLoading(false);",
          "if (",
          "(hideNonUSD && orderTotal?.currencyCode !== \"USD\") ||",
          "hasExcludedLineItems(lineItems, excludedIds)",
          ") {",
          "setWidgetState({",
          "...widgetState,",
          "showWidget: false,",
          "});",
          "return;",
          "}",
          "if (!storeId || !lineItems) {",
          "return;",
          "}",
          "setupApiClient();",
          "}, [storeId, storage, ext.rendered.current]);",
          "const formatAddOnIds = async (env: Environments) => {",
          "let addOnButtonText = [",
          "AddOnButtonText1 ?? \"1\",",
          "AddOnButtonText2 ?? \"3\",",
          "AddOnButtonText3 ?? \"5\",",
          "AddOnButtonText4 ?? \"10\",",
          "];",
          "let addOnVariants = [];",
          "if (addOnIds?.length == 0 && metaAddOnIds?.length == 0) {",
          "const urlSegment = env === Environments.Production ? \"\" : `.${env}`;",
          "const store = await fetch(",
          "`https://stores.api${urlSegment}.shoppinggives.com/cc-small/none`,",
          "{",
          "headers: {",
          "\"x-store-id\": storeId,",
          "},",
          ");",
          "let data = await store.json();",
          "const cmsAddOnIds = data.CMSMetadata?.sgAddOnIds;",
          "if (cmsAddOnIds) {",
          "addOnVariants = JSON.parse(cmsAddOnIds).map((addOnVariant, index) => {",
          "if (addOnButtonText[index] !== null) {",
          "return {",
          "CmsId: addOnVariant.CmsId,",
          "Value: +addOnButtonText[index],",
          "};",
          "}",
          "});",
          "}",
          "} else {",
          "if (addOnIds || metaAddOnIds) {",
          "let ids = addOnIds.length > 0 ? [...addOnIds] : [...metaAddOnIds];",
          "addOnVariants = ids.map((addOnVariant, index) => {",
          "if (addOnButtonText[index] !== null) {",
          "return {",
          "CmsId: addOnVariant.CmsId,",
          "Value: +addOnButtonText[index],",
          "};",
          "}",
          "});",
          "}",
          "if (addOnVariants.length) {",
          "setAddOnIds(addOnVariants);",
          "}",
          "};",
          "const checkZipAllowCustomerDonation = (zip: string) => {",
          "return zip ? caZipCodes.includes(zip) : false;",
          "};",
          "useEffect(() => {",
          "if (checkZipAllowCustomerDonation(customerAddress?.zip)) {",
          "setAllowCustomerDonation(false);",
          "} else {",
          "setAllowCustomerDonation(true);",
          "}",
          "}, [customerAddress]);",
          "useEffect(() => {",
          "formatAddOnIds();",
          "}, [",
          "AddOnButtonText1,",
          "AddOnButtonText2,",
          "AddOnButtonText3,",
          "AddOnButtonText4,",
          "storeId,",
          "]);",
          "useEffect(() => {",
          "if (hideNonUSD && orderTotal?.currencyCode !== \"USD\") {",
          "return;",
          "recalculateDonation();",
          "}, [lineItems]);",
          "useEffect(() => {",
          "if (addOnIds !== undefined) return;",
          "setAddOnIds(metaAddOnIds);",
          "}, [metaAddOnIds]);",
          "const recalculateDonation = async () => {",
          "if (SDKInstance) {",
          "let items = formatLineItems(lineItems);",
          "let data = await SDKInstance.update({",
          "lineItems: items,",
          "discount: 0,",
          "selectedCauseEin:",
          "letShoppersChoose && selectedCauses.length",
          "? selectedCauses[0].id.toString()",
          ": \"0\",",
          "});",
          "updateState({",
          "...stateRef.current,",
          "totalDonationAmount: data.totalDonationAmount,",
          "directDonationInCart: data.directDonationInCart,",
          "charities: data.charities,",
          "selectedCauses: data.selectedCauses,",
          "donationBreakdown: data.donationBreakdown,",
          "});",
          "}",
          "};",
          "function formatLineItems(lineItems) {",
          "return lineItems.map((lineItem) => ({",
          "id: parseInt(lineItem.merchandise.id.match(/\\d+$/)[0]),",
          "price: lineItem.cost.totalAmount.amount / lineItem.quantity,",
          "quantity: lineItem.quantity,",
          "discount: 0,",
          "}));",
          "}",
          "function hasExcludedLineItems(lineItems = [], excludedIds = []) {",
          "let hasExcluded = false;",
          "lineItems.forEach((item) => {",
          "const id = item.merchandise.id.match(/\\d+$/)[0];",
          "const productId = item.merchandise.product.id.match(/\\d+$/)[0];",
          "if (excludedIds.includes(id) || excludedIds.includes(productId)) {",
          "hasExcluded = true;",
          "}",
          "});",
          "return hasExcluded;",
          "}",
          "const handleSearch = async (",
          "searchTerm: string = \"\",",
          "cityZip: string = \"\",",
          "state: string = \"\",",
          "category: string = \"\",",
          "loadMore: boolean = false",
          ") => {",
          "if (",
          "searchTerm === \"\" &&",
          "cityZip === \"\" &&",
          "state === \"\" &&",
          "category === \"\"",
          ") {",
          "setSearchResults([]);",
          "return;",
          "}",
          "setLoadingCharities(true);",
          "let newSkip = skip;",
          "loadMore ? (newSkip += take) : (newSkip = 0);",
          "let results = [];",
          "// extract zip code from city/zip if any",
          "const zipRegex = /[0-9]{5}(?:-[0-9]{4})?/g;",
          "let zipMatch = cityZip.match(zipRegex);",
          "let city = cityZip.replace(zipRegex, \"\").trim();",
          "let searchedZip = null;",
          "if (zipMatch) {",
          "searchedZip = zipMatch[0];",
          "}",
          "try {",
          "results = await SDKInstance.search(",
          "newSkip,",
          "take,",
          "searchTerm,",
          "searchedZip,",
          "city,",
          "state,",
          "category",
          ");",
          "setSkip(newSkip);",
          "setLoadingCharities(false);",
          "} catch (error) {",
          "console.error(error);",
          "setLoadingCharities(false);",
          "}",
          "setSearchResults(loadMore ? searchResults.concat(results) : results);",
          "};",
          "const handleSettingCause = async (cause: any, searched = false) => {",
          "let response = await SDKInstance.setCause(cause);",
          "const { id, name, categoryId, categoryName } = response.cause;",
          "if (searched) {",
          "SDKInstance.track(\"Cause::Searched\", {",
          "category_id: categoryId,",
          "category_name: categoryName,",
          "id: id,",
          "name: name,",
          "});",
          "}",
          "updateState({",
          "...stateRef.current,",
          "totalDonationAmount: response.newTotalDonation,",
          "selectedCauses: [cause],",
          "});",
          "};",
          "const {",
          "selectedCauses,",
          "totalDonationAmount,",
          "charities,",
          "activeCampaigns,",
          "searchEnabled,",
          "letShoppersChoose,",
          "hasPLCD,",
          "showWidget,",
          "directDonationInCart,",
          "donationBreakdown,",
          "} = widgetState;",
          "const hasSelectedCause = selectedCauses?.length > 0;",
          "const customerDonationOnly =",
          "!activeCampaigns.onlinePurchase &&",
          "(activeCampaigns.addOnDonation || activeCampaigns.roundUpDonation);",
          "const renderCustomerDonationSubtitle = () => {",
          "// prettier-ignore",
          "const pattern: RegExp = /<link\\s+to='([^']+)'>([^<]+)<\\/link>/;",
          "const match = pattern.exec(`${customAddOnSubTextNormalized}`);",
          "if (match) {",
          "let parsedText = `${customAddOnSubTextNormalized}`.split(match[0]);",
          "let beforeLinkSegment = parsedText[0];",
          "let afterLinkSegment = parsedText[1];",
          "const linkTo: string = match[1];",
          "const linkText: string = match[2];",
          "return (",
          "<>",
          "{beforeLinkSegment}",
          "<Link to={linkTo} external={true}>",
          "{linkText}",
          "</Link>",
          "{afterLinkSegment}",
          "</>",
          ");",
          "} else {",
          "return customAddOnSubTextNormalized;",
          "}",
          "};",
          "const isEditorActive = !!ext.editor;",
          "const isStoreActive = SDKInstance?.store.isExperienceActive;",
          "const isWidgetActive = isVisible(isEditorActive, isStoreActive, showWidget);",
          "if (isLoading) return <Placeholder />;",
          "if (!isWidgetActive) return null;",
          "return (",
          "<View padding=\"base\" border=\"base\" borderRadius={\"base\"}>",
          "{charities.length > 0 ? (",
          "<BlockStack>",
          "<View>",
          "<TitleModule",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "customerDonationOnly={customerDonationOnly}",
          "customTitle={customTitle}",
          "customAddOnText={customAddOnText}",
          "/>",
          "</View>",
          "{activeCampaigns.onlinePurchase && totalDonationAmount > 0 && (",
          "<View>",
          "<DonationOnPurchaseModule",
          "donationAmount={totalDonationAmount}",
          "customDonationText={customDonationText}",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "directDonationInCart={directDonationInCart}",
          "/>",
          "</View>",
          ")}",
          "{customSubTitle != null && <View>{customSubTitle}</View>}",
          "{((selectedCauses.length === 1 && !hideCauseCard) ||",
          "selectedCauses.length > 1 ||",
          "letShoppersChoose) && (",
          "<View>",
          "<CauseModule",
          "hideCauseCard={hideCauseCard}",
          "customSearchPlaceholder={customSearchPlaceholder}",
          "customSearchModalTitle={customSearchModalTitle}",
          "hideCategoryFilter={hideCategoryFilter}",
          "updateCause={(cause, searched = false) => {",
          "handleSettingCause(cause, searched);",
          "setSearchResults([]);",
          "}}",
          "handleSearch={(",
          "searchTerm: string,",
          "cityZip: string,",
          "state: string,",
          "category: string,",
          "loadMore: boolean = false",
          ") => {",
          "!loadingCharities &&",
          "handleSearch(",
          "searchTerm,",
          "cityZip,",
          "state,",
          "category,",
          "loadMore",
          ");",
          "}}",
          "clearCause={() => {",
          "let defaultCause = charities.find((x) => x.default);",
          "if (defaultCause) SDKInstance.setCause(defaultCause);",
          "setRemoveAddOnTrigger(!removeAddOnTrigger);",
          "setRemoveRoundUpTrigger(!removeRoundUpTrigger);",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: defaultCause ? [defaultCause] : [],",
          "});",
          "}}",
          "updateCauseUI={(cause) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [cause],",
          "});",
          "}}",
          "selectedCauses={selectedCauses}",
          "searchResults={searchResults}",
          "charities={charities ?? []}",
          "singleDefaultCause={",
          "charities?.length === 1 && charities[0].default",
          "}",
          "letShoppersChoose={letShoppersChoose}",
          "hasPLCD={hasPLCD}",
          "searchEnabled={searchEnabled}",
          "donationBreakdown={donationBreakdown}",
          "/>",
          "</View>",
          ")}",
          "{(activeCampaigns.addOnDonation ||",
          "activeCampaigns.roundUpDonation) && (",
          "<View>",
          "<BlockStack spacing={\"base\"}>",
          "{ipLock &&",
          "allowCustomerDonation &&",
          "activeCampaigns.onlinePurchase ? (",
          "<Heading>",
          "{customAddOnText ?? \"Add a donation of your own\"}",
          "</Heading>",
          ") : (",
          "\"\"",
          ")}",
          "{allowCustomerDonation &&",
          "customAddOnSubTextNormalized == \"\" ? null : (",
          "<Text appearance=\"subdued\">",
          "{renderCustomerDonationSubtitle()}",
          "</Text>",
          ")}",
          "{allowCustomerDonation && !hasSelectedCause && (",
          "<Text size=\"small\">",
          "Select a cause above before adding a donation",
          "</Text>",
          ")}",
          "{!allowCustomerDonation && customerDonationRemoved && (",
          "<Text>",
          "Due to California Regulation AB488, California Residents are",
          "no longer eligible to contribute donations.",
          "</Text>",
          ")}",
          "{activeCampaigns.addOnDonation && (",
          "<View>",
          "<AddOnDonationModule",
          "addOnIds={addOnIds}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeAddOnTrigger={removeAddOnTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "</View>",
          "{activeCampaigns.roundUpDonation && (",
          "<View>",
          "<RoundUpModule",
          "roundUpId={roundUpId}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeRoundUpTrigger={removeRoundUpTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          "</BlockStack>",
          "</View>",
          ")}",
          "<View>",
          "<Footer />",
          "</View>",
          "</BlockStack>",
          ") : (",
          "<Placeholder />",
          ")}",
          "</View>",
          ");"
        ],
        "removals": [
          "import { useEffect, useRef, useState } from 'react';",
          "reactExtension,",
          "View,",
          "useSettings,",
          "useAppMetafields,",
          "BlockStack,",
          "useCartLines,",
          "Heading,",
          "Text,",
          "SkeletonImage,",
          "SkeletonTextBlock,",
          "InlineStack,",
          "BlockSpacer,",
          "useExtension,",
          "useAttributes,",
          "useApplyAttributeChange,",
          "useTotalAmount,",
          "useCustomer,",
          "useShippingAddress,",
          "Link,",
          "useApi,",
          "} from '@shopify/ui-extensions-react/checkout';",
          "import { Footer, TitleModule, CauseModule, RoundUpModule, AddOnDonationModule, DonationOnPurchaseModule } from './components';",
          "import { caZipCodes } from './data';",
          "import { CartHandler, Environments } from '@shoppinggivesos/impact-sdk'; // ../../../../clearity-widget-sdk/lib/main",
          "import Placeholder from './components/Placeholder';",
          "export default reactExtension('purchase.checkout.block.render', () => <App />);",
          "}",
          "const trackingKey = 'ShoppingGives Donation Tracking ID';",
          "const { storage } = useApi();",
          "let metafields = useAppMetafields({ namespace: 'sg-cc', key: 'sg-metafield' });",
          "let {",
          "hideCauseCard,",
          "customTitle,",
          "customSubTitle,",
          "customDonationText,",
          "customSearchPlaceholder,",
          "customAddOnText,",
          "customSearchModalTitle,",
          "hideCategoryFilter,",
          "hideNonUSD,",
          "customAddOnSubText,",
          "AddOnButtonText1,",
          "AddOnButtonText2,",
          "AddOnButtonText3,",
          "AddOnButtonText4,",
          "productVariantExclusions,",
          "} = useSettings();",
          "const lineItems = useCartLines();",
          "const cartAttributes = useAttributes();",
          "const cartTotal = lineItems.reduce((sum, object) => sum + object.cost.totalAmount.amount, 0);",
          "const applyCartAttributes = useApplyAttributeChange();",
          "let metafield = metafields[0] ? JSON.parse(metafields[0].metafield.value) : '';",
          "let storeId = metafield['storeId'];",
          "let roundUpId = metafield['sgRoundUpId'];",
          "let metaAddOnIds = metafield['sgAddOnIds'] || [];",
          "let excludedIds = productVariantExclusions?.split(',') || [];",
          "let ext = useExtension();",
          "let client: CartHandler;",
          "let orderTotal = useTotalAmount();",
          "let loadedTime;",
          "let customer = useCustomer();",
          "let customerAddress = useShippingAddress();",
          "let segmentMetafieldRaw = useAppMetafields({ namespace: 'sg-cc', key: 'sg-segment-metafield' }) ?? {};",
          "let segmentMetafield = segmentMetafieldRaw[0] ? JSON.parse(segmentMetafieldRaw[0].metafield.value) : '';",
          "let customAddOnSubTextNormalized = customAddOnSubText ?? '';",
          "const dataLayer = {",
          "customer: {",
          "id: customer?.id.match(/\\d+$/)[0],",
          "firstName: customer?.firstName,",
          "lastName: customer?.lastName,",
          "email: customer?.email,",
          "},",
          "order: {",
          "shippingAddress: {",
          "city: customerAddress?.city,",
          "country: customerAddress?.countryCode,",
          "},",
          "},",
          "external: {",
          "...segmentMetafield,",
          "},",
          "cart: {",
          "total: cartTotal,",
          "currencyCode: orderTotal?.currencyCode,",
          "lineItems: formatLineItems(lineItems),",
          "};",
          "interface activeCampaignInterface {",
          "addOnDonation: boolean;",
          "roundUpDonation: boolean;",
          "onlinePurchase: boolean;",
          "}",
          "const [widgetState, setWidgetState] = useState({",
          "charities: [],",
          "showWidget: true,",
          "totalDonationAmount: 0,",
          "selectedCauses: [],",
          "activeCampaigns: {} as activeCampaignInterface,",
          "searchEnabled: true,",
          "letShoppersChoose: null,",
          "hasPLCD: false,",
          "directDonationInCart: false,",
          "donationBreakdown: [],",
          "});",
          "const stateRef = useRef(widgetState);",
          "const updateState = (newState) => {",
          "stateRef.current = newState;",
          "setWidgetState(newState);",
          "const [SDKInstance, setSDKInstance] = useState<CartHandler>();",
          "const [searchResults, setSearchResults] = useState([]);",
          "const [loadingCharities, setLoadingCharities] = useState(false);",
          "const [removeAddOnTrigger, setRemoveAddOnTrigger] = useState(false);",
          "const [removeRoundUpTrigger, setRemoveRoundUpTrigger] = useState(false);",
          "const [skip, setSkip] = useState(0);",
          "const [addOnIds, setAddOnIds] = useState(metaAddOnIds ?? []);",
          "const [allowCustomerDonation, setAllowCustomerDonation] = useState(true);",
          "const [customerDonationRemoved, setCustomerDonationRemoved] = useState(false);",
          "const [ipLock, setIpLock] = useState(false);",
          "const [globalLock, setGlobalLock] = useState(false);",
          "const take = 5;",
          "useEffect(() => {",
          "if (!loadedTime) {",
          "loadedTime = Date.now();",
          "}",
          "if ((hideNonUSD && orderTotal?.currencyCode !== 'USD') || hasExcludedLineItems(lineItems, excludedIds)) {",
          "setWidgetState({",
          "...widgetState,",
          "showWidget: false,",
          "});",
          "return;",
          "}",
          "if (!storeId || !lineItems) {",
          "return;",
          "}",
          "let tracking = cartAttributes.find((x) => x.key === trackingKey);",
          "(async () => {",
          "// comment this out for local development",
          "// let extId = ext.scriptUrl.includes('ngrok.') ? ext.scriptUrl.match(PARSE_DEV_GUID)[0] : ext.scriptUrl.match(PARSE_GUID)[1];",
          "let config = {",
          "storeId: storeId,",
          "environment: Environments.Production, // getEnvironment(extId), // use this for local development instead of : Environments.Production",
          "testMode: false,",
          "persistence: {",
          "get: async (key: string) => {",
          "let data: string = await storage.read(key);",
          "return JSON.parse(data);",
          "},",
          "set: async (key: string, value: string) => {",
          "await storage.write(key, JSON.stringify(value));",
          "},",
          "delete: async (key: string) => {",
          "await storage.delete(key);",
          "},",
          "},",
          "dataLayer: dataLayer,",
          "};",
          "client = new CartHandler(config);",
          "client.on('Cause::Updated', (data) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [data.cause],",
          "});",
          "});",
          "let items = formatLineItems(lineItems);",
          "client.on('SDK::Error', (error) => {",
          "console.log('event', error, items);",
          "});",
          "let data = await client.initialize({",
          "lineItems: items,",
          "discount: 0,",
          "trackingId: tracking?.value ? tracking.value : null,",
          "ignoreSegments: true,",
          "});",
          "client.track('Checkout::Loaded', {",
          "timestamp: loadedTime,",
          "lineItems: items,",
          "cartTotal: cartTotal,",
          "orderTotal: orderTotal.amount,",
          "});",
          "if (ext.rendered.current) {",
          "client.track('UI::Checkout::Rendered', {});",
          "}",
          "if (!tracking && data.trackingId) {",
          "applyCartAttributes({ type: 'updateAttribute', key: trackingKey, value: data.trackingId });",
          "}",
          "setSDKInstance(client);",
          "let hasPLCD = !data.letShoppersChoose && data.donationBreakdown.some((x) => x.donation !== data.donationBreakdown[0].donation);",
          "updateState({",
          "...stateRef.current,",
          "totalDonationAmount: data.totalDonationAmount,",
          "charities: data.charities,",
          "showWidget: data.showWidget,",
          "selectedCauses: data.selectedCauses,",
          "activeCampaigns: data.activeCampaigns,",
          "searchEnabled: data.searchEnabled,",
          "letShoppersChoose: data.letShoppersChoose,",
          "hasPLCD: hasPLCD,",
          "directDonationInCart: data.directDonationInCart,",
          "donationBreakdown: data.donationBreakdown,",
          "});",
          "setAllowCustomerDonation(!data.allowCustomerDonations);",
          "setIpLock(!data.allowCustomerDonations);",
          "await formatAddOnIds(config.environment);",
          "})();",
          "}, [storeId, storage, ext.rendered.current]);",
          "const formatAddOnIds = async (env: Environments) => {",
          "let addOnButtonText = [AddOnButtonText1 ?? '1', AddOnButtonText2 ?? '3', AddOnButtonText3 ?? '5', AddOnButtonText4 ?? '10'];",
          "let addOnVariants = [];",
          "if (addOnIds?.length == 0 && metaAddOnIds?.length == 0) {",
          "const urlSegment = env === Environments.Production ? '' : `.${env}`;",
          "const store = await fetch(`https://stores.api${urlSegment}.shoppinggives.com/cc-small/none`, {",
          "headers: {",
          "'x-store-id': storeId,",
          "},",
          "});",
          "let data = await store.json();",
          "const cmsAddOnIds = data.CMSMetadata?.sgAddOnIds;",
          "if (cmsAddOnIds) {",
          "addOnVariants = JSON.parse(cmsAddOnIds).map((addOnVariant, index) => {",
          "if (addOnButtonText[index] !== null) {",
          "return {",
          "CmsId: addOnVariant.CmsId,",
          "Value: +addOnButtonText[index],",
          "};",
          "}",
          "});",
          "}",
          "} else {",
          "if (addOnIds || metaAddOnIds) {",
          "let ids = addOnIds.length > 0 ? [...addOnIds] : [...metaAddOnIds];",
          "addOnVariants = ids.map((addOnVariant, index) => {",
          "if (addOnButtonText[index] !== null) {",
          "return {",
          "CmsId: addOnVariant.CmsId,",
          "Value: +addOnButtonText[index],",
          "};",
          "}",
          "});",
          "}",
          "}",
          "if (addOnVariants.length) {",
          "setAddOnIds(addOnVariants);",
          "}",
          "};",
          "const checkZipAllowCustomerDonation = (zip: string) => {",
          "return zip ? caZipCodes.includes(zip) : false;",
          "};",
          "useEffect(() => {",
          "if (checkZipAllowCustomerDonation(customerAddress?.zip)) {",
          "setAllowCustomerDonation(false);",
          "} else {",
          "setAllowCustomerDonation(true);",
          "}, [customerAddress]);",
          "useEffect(() => {",
          "formatAddOnIds();",
          "}, [AddOnButtonText1, AddOnButtonText2, AddOnButtonText3, AddOnButtonText4, storeId]);",
          "useEffect(() => {",
          "if (hideNonUSD && orderTotal?.currencyCode !== 'USD') {",
          "return;",
          "}",
          "recalculateDonation();",
          "}, [lineItems]);",
          "useEffect(() => {",
          "if (addOnIds !== undefined) return;",
          "setAddOnIds(metaAddOnIds);",
          "}, [metaAddOnIds]);",
          "const recalculateDonation = async () => {",
          "if (SDKInstance) {",
          "let items = formatLineItems(lineItems);",
          "let data = await SDKInstance.update({",
          "lineItems: items,",
          "discount: 0,",
          "selectedCauseEin: letShoppersChoose && selectedCauses.length ? selectedCauses[0].id.toString() : '0',",
          "});",
          "updateState({",
          "...stateRef.current,",
          "totalDonationAmount: data.totalDonationAmount,",
          "directDonationInCart: data.directDonationInCart,",
          "charities: data.charities,",
          "selectedCauses: data.selectedCauses,",
          "donationBreakdown: data.donationBreakdown,",
          "});",
          "}",
          "};",
          "function formatLineItems(lineItems) {",
          "return lineItems.map((lineItem) => ({",
          "id: parseInt(lineItem.merchandise.id.match(/\\d+$/)[0]),",
          "price: lineItem.cost.totalAmount.amount / lineItem.quantity,",
          "quantity: lineItem.quantity,",
          "discount: 0,",
          "}));",
          "function hasExcludedLineItems(lineItems = [], excludedIds = []) {",
          "let hasExcluded = false;",
          "lineItems.forEach((item) => {",
          "const id = item.merchandise.id.match(/\\d+$/)[0];",
          "const productId = item.merchandise.product.id.match(/\\d+$/)[0];",
          "if (excludedIds.includes(id) || excludedIds.includes(productId)) {",
          "hasExcluded = true;",
          "}",
          "});",
          "return hasExcluded;",
          "const handleSearch = async (searchTerm: string = '', cityZip: string = '', state: string = '', category: string = '', loadMore: boolean = false) => {",
          "if (searchTerm === '' && cityZip === '' && state === '' && category === '') {",
          "setSearchResults([]);",
          "return;",
          "}",
          "setLoadingCharities(true);",
          "let newSkip = skip;",
          "loadMore ? (newSkip += take) : (newSkip = 0);",
          "let results = [];",
          "// extract zip code from city/zip if any",
          "const zipRegex = /[0-9]{5}(?:-[0-9]{4})?/g;",
          "let zipMatch = cityZip.match(zipRegex);",
          "let city = cityZip.replace(zipRegex, '').trim();",
          "let searchedZip = null;",
          "if (zipMatch) {",
          "searchedZip = zipMatch[0];",
          "}",
          "try {",
          "results = await SDKInstance.search(newSkip, take, searchTerm, searchedZip, city, state, category);",
          "setSkip(newSkip);",
          "setLoadingCharities(false);",
          "} catch (error) {",
          "console.log(error);",
          "setLoadingCharities(false);",
          "}",
          "setSearchResults(loadMore ? searchResults.concat(results) : results);",
          "};",
          "const handleSettingCause = async (cause: any, searched = false) => {",
          "let response = await SDKInstance.setCause(cause);",
          "const { id, name, categoryId, categoryName } = response.cause;",
          "if (searched) {",
          "SDKInstance.track('Cause::Searched', {",
          "category_id: categoryId,",
          "category_name: categoryName,",
          "id: id,",
          "name: name,",
          "});",
          "}",
          "updateState({",
          "...stateRef.current,",
          "totalDonationAmount: response.newTotalDonation,",
          "selectedCauses: [cause],",
          "});",
          "};",
          "const {",
          "selectedCauses,",
          "totalDonationAmount,",
          "charities,",
          "activeCampaigns,",
          "searchEnabled,",
          "letShoppersChoose,",
          "hasPLCD,",
          "showWidget,",
          "directDonationInCart,",
          "donationBreakdown,",
          "} = widgetState;",
          "const hasSelectedCause = selectedCauses?.length > 0;",
          "const customerDonationOnly = !activeCampaigns.onlinePurchase && (activeCampaigns.addOnDonation || activeCampaigns.roundUpDonation);",
          "const renderCustomerDonationSubtitle = () => {",
          "// prettier-ignore",
          "const pattern: RegExp = /<link\\s+to='([^']+)'>([^<]+)<\\/link>/;",
          "const match = pattern.exec(`${customAddOnSubTextNormalized}`);",
          "if (match) {",
          "let parsedText = `${customAddOnSubTextNormalized}`.split(match[0]);",
          "let beforeLinkSegment = parsedText[0];",
          "let afterLinkSegment = parsedText[1];",
          "const linkTo: string = match[1];",
          "const linkText: string = match[2];",
          "return (",
          "<>",
          "{beforeLinkSegment}",
          "<Link to={linkTo} external={true}>",
          "{linkText}",
          "</Link>",
          "{afterLinkSegment}",
          "</>",
          ");",
          "} else {",
          "return customAddOnSubTextNormalized;",
          "}",
          "};",
          "const isEditorActive = !!ext.editor;",
          "const isStoreActive = metafield['storeIsActive'];",
          "const isWidgetActive = isVisible(isEditorActive, isStoreActive, showWidget);",
          "if (!isWidgetActive) return null;",
          "return (",
          "<View padding=\"base\" border=\"base\" borderRadius={'base'}>",
          "{charities.length > 0 ? (",
          "<BlockStack>",
          "<View>",
          "<TitleModule",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "customerDonationOnly={customerDonationOnly}",
          "customTitle={customTitle}",
          "customAddOnText={customAddOnText}",
          "</View>",
          "{activeCampaigns.onlinePurchase && totalDonationAmount > 0 && (",
          "<View>",
          "<DonationOnPurchaseModule",
          "donationAmount={totalDonationAmount}",
          "customDonationText={customDonationText}",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "directDonationInCart={directDonationInCart}",
          "/>",
          "</View>",
          "{customSubTitle != null && <View>{customSubTitle}</View>}",
          "{((selectedCauses.length === 1 && !hideCauseCard) || selectedCauses.length > 1 || letShoppersChoose) && (",
          "<View>",
          "<CauseModule",
          "hideCauseCard={hideCauseCard}",
          "customSearchPlaceholder={customSearchPlaceholder}",
          "customSearchModalTitle={customSearchModalTitle}",
          "hideCategoryFilter={hideCategoryFilter}",
          "updateCause={(cause, searched = false) => {",
          "handleSettingCause(cause, searched);",
          "setSearchResults([]);",
          "}}",
          "handleSearch={(searchTerm: string, cityZip: string, state: string, category: string, loadMore: boolean = false) => {",
          "!loadingCharities && handleSearch(searchTerm, cityZip, state, category, loadMore);",
          "}}",
          "clearCause={() => {",
          "let defaultCause = charities.find((x) => x.default);",
          "if (defaultCause) SDKInstance.setCause(defaultCause);",
          "setRemoveAddOnTrigger(!removeAddOnTrigger);",
          "setRemoveRoundUpTrigger(!removeRoundUpTrigger);",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: defaultCause ? [defaultCause] : [],",
          "});",
          "}}",
          "updateCauseUI={(cause) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [cause],",
          "});",
          "}}",
          "selectedCauses={selectedCauses}",
          "searchResults={searchResults}",
          "charities={charities ?? []}",
          "singleDefaultCause={charities?.length === 1 && charities[0].default}",
          "letShoppersChoose={letShoppersChoose}",
          "hasPLCD={hasPLCD}",
          "searchEnabled={searchEnabled}",
          "donationBreakdown={donationBreakdown}",
          "/>",
          "</View>",
          ")}",
          "{(activeCampaigns.addOnDonation || activeCampaigns.roundUpDonation) && (",
          "<View>",
          "<BlockStack spacing={'base'}>",
          "{ipLock && allowCustomerDonation && activeCampaigns.onlinePurchase ? (",
          "<Heading>{customAddOnText ?? 'Add a donation of your own'}</Heading>",
          ") : (",
          "''",
          ")}",
          "{allowCustomerDonation && customAddOnSubTextNormalized == '' ? null : (",
          "<Text appearance=\"subdued\">{renderCustomerDonationSubtitle()}</Text>",
          ")}",
          "{allowCustomerDonation && !hasSelectedCause && <Text size=\"small\">Select a cause above before adding a donation</Text>}",
          "{!allowCustomerDonation && customerDonationRemoved && (",
          "<Text>",
          "Due to California Regulation AB488, California Residents are no longer eligible to contribute donations.",
          "</Text>",
          ")}",
          "{activeCampaigns.addOnDonation && (",
          "<View>",
          "<AddOnDonationModule",
          "addOnIds={addOnIds}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeAddOnTrigger={removeAddOnTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "{activeCampaigns.roundUpDonation && (",
          "<View>",
          "<RoundUpModule",
          "roundUpId={roundUpId}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeRoundUpTrigger={removeRoundUpTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "</BlockStack>",
          "</View>",
          "<View>",
          "<Footer />",
          "</View>",
          "</BlockStack>",
          ") : (",
          "<Placeholder />",
          ")}",
          "</View>",
          ");"
        ],
        "impact": "major"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "8808825",
    "original_message": "Upgrade the Post-Purchase extension to the latest API",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/post-purchase-confirmation/shopify.extension.toml",
        "summary": "",
        "additions": [
          "api_version = \"2025-01\"",
          "name = \"Share Subtitle\""
        ],
        "removals": [
          "api_version = \"2024-01\"",
          "name = \"Share Subtitle\""
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "fdb55b3",
    "original_message": "Use explicit checks for rendering the extension",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/src/index.tsx",
        "summary": "",
        "additions": [
          "const isEditorActive = !!ext.editor;",
          "const isStoreActive = metafield['storeIsActive'];",
          "const isWidgetActive = isVisible(isEditorActive, isStoreActive, showWidget);",
          "if (!isWidgetActive) return null;"
        ],
        "removals": [
          "const isWidgetVisible = isVisible(ext.editor, metafield['storeIsActive'], showWidget);",
          "if (!isWidgetVisible) return null;"
        ],
        "impact": "moderate"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "aac11e9",
    "original_message": "Use the new Placeholder component to render the loading state.",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/src/components/Placeholder.tsx",
        "summary": "",
        "additions": [
          "import { View, SkeletonImage, SkeletonTextBlock, InlineStack, BlockSpacer } from '@shopify/ui-extensions-react/checkout';",
          "const Placeholder = () => (",
          "<View>",
          "<SkeletonTextBlock />",
          "<BlockSpacer></BlockSpacer>",
          "<InlineStack spacing=\"tight\">",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "</InlineStack>",
          "<BlockSpacer></BlockSpacer>",
          "<View>",
          "<SkeletonTextBlock />",
          "<BlockSpacer spacing=\"tight\"></BlockSpacer>",
          "<SkeletonTextBlock />",
          "</View>",
          "</View>",
          ");",
          "export default Placeholder;"
        ],
        "removals": [],
        "impact": "moderate"
      },
      {
        "file": "extensions/checkout-ui-extension/src/index.tsx",
        "summary": "",
        "additions": [
          "import Placeholder from './components/Placeholder';",
          "{charities.length > 0 ? (",
          "<BlockStack>",
          "<View>",
          "<TitleModule",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "customerDonationOnly={customerDonationOnly}",
          "customTitle={customTitle}",
          "customAddOnText={customAddOnText}",
          "/>",
          "</View>",
          "{activeCampaigns.onlinePurchase && totalDonationAmount > 0 && (",
          "<View>",
          "<DonationOnPurchaseModule",
          "donationAmount={totalDonationAmount}",
          "customDonationText={customDonationText}",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "directDonationInCart={directDonationInCart}",
          "/>",
          "</View>",
          ")}",
          "{customSubTitle != null && <View>{customSubTitle}</View>}",
          "{((selectedCauses.length === 1 && !hideCauseCard) || selectedCauses.length > 1 || letShoppersChoose) && (",
          "<View>",
          "<CauseModule",
          "hideCauseCard={hideCauseCard}",
          "customSearchPlaceholder={customSearchPlaceholder}",
          "customSearchModalTitle={customSearchModalTitle}",
          "hideCategoryFilter={hideCategoryFilter}",
          "updateCause={(cause, searched = false) => {",
          "handleSettingCause(cause, searched);",
          "setSearchResults([]);",
          "}}",
          "handleSearch={(searchTerm: string, cityZip: string, state: string, category: string, loadMore: boolean = false) => {",
          "!loadingCharities && handleSearch(searchTerm, cityZip, state, category, loadMore);",
          "}}",
          "clearCause={() => {",
          "let defaultCause = charities.find((x) => x.default);",
          "if (defaultCause) SDKInstance.setCause(defaultCause);",
          "setRemoveAddOnTrigger(!removeAddOnTrigger);",
          "setRemoveRoundUpTrigger(!removeRoundUpTrigger);",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: defaultCause ? [defaultCause] : [],",
          "});",
          "}}",
          "updateCauseUI={(cause) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [cause],",
          "});",
          "}}",
          "selectedCauses={selectedCauses}",
          "searchResults={searchResults}",
          "charities={charities ?? []}",
          "singleDefaultCause={charities?.length === 1 && charities[0].default}",
          "letShoppersChoose={letShoppersChoose}",
          "hasPLCD={hasPLCD}",
          "searchEnabled={searchEnabled}",
          "donationBreakdown={donationBreakdown}",
          "/>",
          "</View>",
          ")}",
          "{(activeCampaigns.addOnDonation || activeCampaigns.roundUpDonation) && (",
          "<View>",
          "<BlockStack spacing={'base'}>",
          "{ipLock && allowCustomerDonation && activeCampaigns.onlinePurchase ? (",
          "<Heading>{customAddOnText ?? 'Add a donation of your own'}</Heading>",
          ") : (",
          "''",
          ")}",
          "{allowCustomerDonation && customAddOnSubTextNormalized == '' ? null : (",
          "<Text appearance=\"subdued\">{renderCustomerDonationSubtitle()}</Text>",
          ")}",
          "{allowCustomerDonation && !hasSelectedCause && <Text size=\"small\">Select a cause above before adding a donation</Text>}",
          "{!allowCustomerDonation && customerDonationRemoved && (",
          "<Text>",
          "Due to California Regulation AB488, California Residents are no longer eligible to contribute donations.",
          "</Text>",
          ")}",
          "{activeCampaigns.addOnDonation && (",
          "<View>",
          "<AddOnDonationModule",
          "addOnIds={addOnIds}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeAddOnTrigger={removeAddOnTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "{activeCampaigns.roundUpDonation && (",
          "<View>",
          "<RoundUpModule",
          "roundUpId={roundUpId}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeRoundUpTrigger={removeRoundUpTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "</BlockStack>",
          "</View>",
          ")}",
          "<View>",
          "<Footer />",
          "</View>",
          "</BlockStack>",
          ") : (",
          "<Placeholder />",
          ")}"
        ],
        "removals": [
          "const renderLoadingState = () => {",
          "return (",
          "<View>",
          "<SkeletonTextBlock />",
          "<BlockSpacer></BlockSpacer>",
          "<InlineStack spacing=\"tight\">",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "<SkeletonImage inlineSize={50} blockSize={50} />",
          "</InlineStack>",
          "<BlockSpacer></BlockSpacer>",
          "<View>",
          "<SkeletonTextBlock />",
          "<BlockSpacer spacing=\"tight\"></BlockSpacer>",
          "<SkeletonTextBlock />",
          "</View>",
          "</View>",
          ");",
          "};",
          "{charities.length > 0 ? (",
          "<BlockStack>",
          "<View>",
          "<TitleModule",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "customerDonationOnly={customerDonationOnly}",
          "customTitle={customTitle}",
          "customAddOnText={customAddOnText}",
          "/>",
          "</View>",
          "{activeCampaigns.onlinePurchase && totalDonationAmount > 0 && (",
          "<View>",
          "<DonationOnPurchaseModule",
          "donationAmount={totalDonationAmount}",
          "customDonationText={customDonationText}",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "directDonationInCart={directDonationInCart}",
          "/>",
          "</View>",
          ")}",
          "{customSubTitle != null && <View>{customSubTitle}</View>}",
          "{((selectedCauses.length === 1 && !hideCauseCard) || selectedCauses.length > 1 || letShoppersChoose) && (",
          "<View>",
          "<CauseModule",
          "hideCauseCard={hideCauseCard}",
          "customSearchPlaceholder={customSearchPlaceholder}",
          "customSearchModalTitle={customSearchModalTitle}",
          "hideCategoryFilter={hideCategoryFilter}",
          "updateCause={(cause, searched = false) => {",
          "handleSettingCause(cause, searched);",
          "setSearchResults([]);",
          "}}",
          "handleSearch={(searchTerm: string, cityZip: string, state: string, category: string, loadMore: boolean = false) => {",
          "!loadingCharities && handleSearch(searchTerm, cityZip, state, category, loadMore);",
          "}}",
          "clearCause={() => {",
          "let defaultCause = charities.find((x) => x.default);",
          "if (defaultCause) SDKInstance.setCause(defaultCause);",
          "setRemoveAddOnTrigger(!removeAddOnTrigger);",
          "setRemoveRoundUpTrigger(!removeRoundUpTrigger);",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: defaultCause ? [defaultCause] : [],",
          "});",
          "}}",
          "updateCauseUI={(cause) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [cause],",
          "});",
          "}}",
          "selectedCauses={selectedCauses}",
          "searchResults={searchResults}",
          "charities={charities ?? []}",
          "singleDefaultCause={charities?.length === 1 && charities[0].default}",
          "letShoppersChoose={letShoppersChoose}",
          "hasPLCD={hasPLCD}",
          "searchEnabled={searchEnabled}",
          "donationBreakdown={donationBreakdown}",
          "/>",
          "</View>",
          ")}",
          "{(activeCampaigns.addOnDonation || activeCampaigns.roundUpDonation) && (",
          "<View>",
          "<BlockStack spacing={'base'}>",
          "{ipLock && allowCustomerDonation && activeCampaigns.onlinePurchase ? (",
          "<Heading>{customAddOnText ?? 'Add a donation of your own'}</Heading>",
          ") : (",
          "''",
          ")}",
          "{allowCustomerDonation && customAddOnSubTextNormalized == '' ? null : (",
          "<Text appearance=\"subdued\">{renderCustomerDonationSubtitle()}</Text>",
          ")}",
          "{allowCustomerDonation && !hasSelectedCause && <Text size=\"small\">Select a cause above before adding a donation</Text>}",
          "{!allowCustomerDonation && customerDonationRemoved && (",
          "<Text>",
          "Due to California Regulation AB488, California Residents are no longer eligible to contribute donations.",
          "</Text>",
          ")}",
          "{activeCampaigns.addOnDonation && (",
          "<View>",
          "<AddOnDonationModule",
          "addOnIds={addOnIds}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeAddOnTrigger={removeAddOnTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "{activeCampaigns.roundUpDonation && (",
          "<View>",
          "<RoundUpModule",
          "roundUpId={roundUpId}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeRoundUpTrigger={removeRoundUpTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "</BlockStack>",
          "</View>",
          ")}",
          "<View>",
          "<Footer />",
          "</View>",
          "</BlockStack>",
          ") : (",
          "renderLoadingState()",
          ")}"
        ],
        "impact": "major"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "2f654f4",
    "original_message": "Bump the version of the theme extension too",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/post-purchase-confirmation/shopify.extension.toml",
        "summary": "",
        "additions": [
          "api_version = \"2024-07\"",
          "name = \"Share Subtitle\""
        ],
        "removals": [
          "api_version = \"2024-01\"",
          "name = \"Share Subtitle\""
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "989b7f5",
    "original_message": "Upgrade the checkout ui extension to one higher version",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/shopify.extension.toml",
        "summary": "",
        "additions": [
          "api_version = \"2024-07\""
        ],
        "removals": [
          "api_version = \"2024-04\""
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "e77d30e",
    "original_message": "Set the correct file rights to download the widget scripts",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "download-widget-scripts-staging.sh",
        "summary": "",
        "additions": [],
        "removals": [],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "8ee8c5a",
    "original_message": "Hide the checkout UI extension when the store is inactive",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/src/index.tsx",
        "summary": "",
        "additions": [
          "/**",
          "* The `isVisible` checks if the Checkout UI extension should be visible.",
          "*",
          "* Only when a store is active and the widget is suppose to be shown, it renders.",
          "* There is one exception to this rule and that's when the widget is rendered as part",
          "* of the Checkout Preview. In that situation, the Checkout UI extension is always visible.",
          "*",
          "* @param isPreview {boolean}",
          "* @param isStoreActive {boolean}",
          "* @param showWidget {boolean}",
          "* @returns {boolean}",
          "*/",
          "const isVisible = (isPreview, isStoreActive, showWidget): boolean => {",
          "if (isPreview) return true;",
          "if (isStoreActive && showWidget) return true;",
          "return false;",
          "}",
          "const isWidgetVisible = isVisible(ext.editor, metafield['storeIsActive'], showWidget);",
          "if (!isWidgetVisible) return null;",
          "<View padding=\"base\" border=\"base\" borderRadius={'base'}>",
          "{charities.length > 0 ? (",
          "<BlockStack>",
          "<View>",
          "<TitleModule",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "customerDonationOnly={customerDonationOnly}",
          "customTitle={customTitle}",
          "customAddOnText={customAddOnText}",
          "/>",
          "</View>",
          "{activeCampaigns.onlinePurchase && totalDonationAmount > 0 && (",
          "<View>",
          "<DonationOnPurchaseModule",
          "donationAmount={totalDonationAmount}",
          "customDonationText={customDonationText}",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "directDonationInCart={directDonationInCart}",
          "/>",
          "</View>",
          ")}",
          "{customSubTitle != null && <View>{customSubTitle}</View>}",
          "{((selectedCauses.length === 1 && !hideCauseCard) || selectedCauses.length > 1 || letShoppersChoose) && (",
          "<View>",
          "<CauseModule",
          "hideCauseCard={hideCauseCard}",
          "customSearchPlaceholder={customSearchPlaceholder}",
          "customSearchModalTitle={customSearchModalTitle}",
          "hideCategoryFilter={hideCategoryFilter}",
          "updateCause={(cause, searched = false) => {",
          "handleSettingCause(cause, searched);",
          "setSearchResults([]);",
          "}}",
          "handleSearch={(searchTerm: string, cityZip: string, state: string, category: string, loadMore: boolean = false) => {",
          "!loadingCharities && handleSearch(searchTerm, cityZip, state, category, loadMore);",
          "}}",
          "clearCause={() => {",
          "let defaultCause = charities.find((x) => x.default);",
          "if (defaultCause) SDKInstance.setCause(defaultCause);",
          "setRemoveAddOnTrigger(!removeAddOnTrigger);",
          "setRemoveRoundUpTrigger(!removeRoundUpTrigger);",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: defaultCause ? [defaultCause] : [],",
          "});",
          "}}",
          "updateCauseUI={(cause) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [cause],",
          "});",
          "}}",
          "selectedCauses={selectedCauses}",
          "searchResults={searchResults}",
          "charities={charities ?? []}",
          "singleDefaultCause={charities?.length === 1 && charities[0].default}",
          "letShoppersChoose={letShoppersChoose}",
          "hasPLCD={hasPLCD}",
          "searchEnabled={searchEnabled}",
          "donationBreakdown={donationBreakdown}",
          "/>",
          "</View>",
          ")}",
          "{(activeCampaigns.addOnDonation || activeCampaigns.roundUpDonation) && (",
          "<View>",
          "<BlockStack spacing={'base'}>",
          "{ipLock && allowCustomerDonation && activeCampaigns.onlinePurchase ? (",
          "<Heading>{customAddOnText ?? 'Add a donation of your own'}</Heading>",
          ") : (",
          "''",
          ")}",
          "{allowCustomerDonation && customAddOnSubTextNormalized == '' ? null : (",
          "<Text appearance=\"subdued\">{renderCustomerDonationSubtitle()}</Text>",
          ")}",
          "{allowCustomerDonation && !hasSelectedCause && <Text size=\"small\">Select a cause above before adding a donation</Text>}",
          "{!allowCustomerDonation && customerDonationRemoved && (",
          "<Text>",
          "Due to California Regulation AB488, California Residents are no longer eligible to contribute donations.",
          "</Text>",
          ")}",
          "{activeCampaigns.addOnDonation && (",
          "<View>",
          "<AddOnDonationModule",
          "addOnIds={addOnIds}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeAddOnTrigger={removeAddOnTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "{activeCampaigns.roundUpDonation && (",
          "<View>",
          "<RoundUpModule",
          "roundUpId={roundUpId}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeRoundUpTrigger={removeRoundUpTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "</BlockStack>",
          "</View>",
          ")}",
          "<View>",
          "<Footer />",
          "</View>",
          "</BlockStack>",
          ") : (",
          "renderLoadingState()",
          ")}",
          "</View>"
        ],
        "removals": [
          "<>",
          "{showWidget && (",
          "<View padding=\"base\" border=\"base\" borderRadius={'base'}>",
          "{charities.length > 0 ? (",
          "<BlockStack>",
          "<View>",
          "<TitleModule",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "customerDonationOnly={customerDonationOnly}",
          "customTitle={customTitle}",
          "customAddOnText={customAddOnText}",
          "/>",
          "</View>",
          "{activeCampaigns.onlinePurchase && totalDonationAmount > 0 && (",
          "<View>",
          "<DonationOnPurchaseModule",
          "donationAmount={totalDonationAmount}",
          "customDonationText={customDonationText}",
          "selectedCauses={selectedCauses}",
          "letShoppersChoose={letShoppersChoose}",
          "activeCampaigns={activeCampaigns}",
          "directDonationInCart={directDonationInCart}",
          "/>",
          "</View>",
          ")}",
          "{customSubTitle != null && <View>{customSubTitle}</View>}",
          "{((selectedCauses.length === 1 && !hideCauseCard) || selectedCauses.length > 1 || letShoppersChoose) && (",
          "<View>",
          "<CauseModule",
          "hideCauseCard={hideCauseCard}",
          "customSearchPlaceholder={customSearchPlaceholder}",
          "customSearchModalTitle={customSearchModalTitle}",
          "hideCategoryFilter={hideCategoryFilter}",
          "updateCause={(cause, searched = false) => {",
          "handleSettingCause(cause, searched);",
          "setSearchResults([]);",
          "}}",
          "handleSearch={(searchTerm: string, cityZip: string, state: string, category: string, loadMore: boolean = false) => {",
          "!loadingCharities && handleSearch(searchTerm, cityZip, state, category, loadMore);",
          "}}",
          "clearCause={() => {",
          "let defaultCause = charities.find((x) => x.default);",
          "if (defaultCause) SDKInstance.setCause(defaultCause);",
          "setRemoveAddOnTrigger(!removeAddOnTrigger);",
          "setRemoveRoundUpTrigger(!removeRoundUpTrigger);",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: defaultCause ? [defaultCause] : [],",
          "});",
          "}}",
          "updateCauseUI={(cause) => {",
          "updateState({",
          "...stateRef.current,",
          "selectedCauses: [cause],",
          "});",
          "}}",
          "selectedCauses={selectedCauses}",
          "searchResults={searchResults}",
          "charities={charities ?? []}",
          "singleDefaultCause={charities?.length === 1 && charities[0].default}",
          "letShoppersChoose={letShoppersChoose}",
          "hasPLCD={hasPLCD}",
          "searchEnabled={searchEnabled}",
          "donationBreakdown={donationBreakdown}",
          "/>",
          "</View>",
          ")}",
          "{(activeCampaigns.addOnDonation || activeCampaigns.roundUpDonation) && (",
          "<View>",
          "<BlockStack spacing={'base'}>",
          "{ipLock && allowCustomerDonation && activeCampaigns.onlinePurchase ? (",
          "<Heading>{customAddOnText ?? 'Add a donation of your own'}</Heading>",
          ") : (",
          "''",
          ")}",
          "{allowCustomerDonation && customAddOnSubTextNormalized == '' ? null : (",
          "<Text appearance=\"subdued\">{renderCustomerDonationSubtitle()}</Text>",
          ")}",
          "{allowCustomerDonation && !hasSelectedCause && <Text size=\"small\">Select a cause above before adding a donation</Text>}",
          "{!allowCustomerDonation && customerDonationRemoved && (",
          "<Text>",
          "Due to California Regulation AB488, California Residents are no longer eligible to contribute donations.",
          "</Text>",
          ")}",
          "{activeCampaigns.addOnDonation && (",
          "<View>",
          "<AddOnDonationModule",
          "addOnIds={addOnIds}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeAddOnTrigger={removeAddOnTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "{activeCampaigns.roundUpDonation && (",
          "<View>",
          "<RoundUpModule",
          "roundUpId={roundUpId}",
          "hasSelectedCause={hasSelectedCause}",
          "letShoppersChoose={letShoppersChoose}",
          "lineItems={lineItems}",
          "removeRoundUpTrigger={removeRoundUpTrigger}",
          "allowCustomerDonation={allowCustomerDonation}",
          "setCustomerDonationRemoved={setCustomerDonationRemoved}",
          "ipLock={ipLock}",
          "setGlobalLock={setGlobalLock}",
          "globalLock={globalLock}",
          "/>",
          "</View>",
          ")}",
          "</BlockStack>",
          "</View>",
          ")}",
          "<View>",
          "<Footer />",
          "</View>",
          "</BlockStack>",
          ") : (",
          "renderLoadingState()",
          ")}",
          "</View>",
          ")}",
          "</>"
        ],
        "impact": "major"
      }
    ]
  },
  {
    "repository": "shoppinggives.widget-sdk",
    "commit_hash": "f216b66",
    "original_message": "Latest",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "lib/core/Base.ts",
        "summary": "",
        "additions": [
          "let trackingId = currentTrackingId;",
          "if (!trackingId && sessionStorage) {",
          "const regularTrackingNormalized = sessionStorage.getItem(`sg.sid-${this.storeId.replace(/-/g, '')}`);",
          "if (regularTrackingNormalized) {",
          "trackingId = atob(regularTrackingNormalized);",
          "}",
          "}",
          "if (trackingId && this.store.letShoppersChoose && !causeId) {",
          "let tracking: ITrackingStartedResponse = { trackingId };",
          "trackedCause = await this.getTrackedCause(trackingId);"
        ],
        "removals": [
          "if (currentTrackingId && this.store.letShoppersChoose && !causeId) {",
          "let tracking: ITrackingStartedResponse = { trackingId: currentTrackingId };",
          "trackedCause = await this.getTrackedCause(currentTrackingId);"
        ],
        "impact": "moderate"
      },
      {
        "file": "package.json",
        "summary": "",
        "additions": [
          "\"version\": \"0.3.20\","
        ],
        "removals": [
          "\"version\": \"0.3.12\","
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "dd17d98",
    "original_message": "Scaffolds the POS UI extension",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/pos-ui-extension/shopify.extension.toml",
        "summary": "",
        "additions": [
          "# The version of APIs your extension will receive. Learn more:",
          "# https://shopify.dev/docs/api/usage/versioning",
          "api_version = \"2025-01\"",
          "[[extensions]]",
          "type = \"ui_extension\"",
          "name = \"pos-ui-extension\"",
          "handle = \"pos-ui-extension\"",
          "description = \"The ShoppingGives POS UI extension\"",
          "[[extensions.targeting]]",
          "module = \"./src/Tile.tsx\"",
          "target = \"pos.home.tile.render\"",
          "[[extensions.targeting]]",
          "module = \"./src/Modal.tsx\"",
          "target = \"pos.home.modal.render\""
        ],
        "removals": [],
        "impact": "moderate"
      },
      {
        "file": "extensions/pos-ui-extension/src/Modal.tsx",
        "summary": "",
        "additions": [
          "import React from 'react'",
          "import { Text, Screen, ScrollView, Navigator, reactExtension } from '@shopify/ui-extensions-react/point-of-sale'",
          "const Modal = () => {",
          "return (",
          "<Navigator>",
          "<Screen name=\"HelloWorld\" title=\"Hello World!\">",
          "<ScrollView>",
          "<Text>Welcome to the extension!</Text>",
          "</ScrollView>",
          "</Screen>",
          "</Navigator>",
          ")",
          "}",
          "export default reactExtension('pos.home.modal.render', () => <Modal />);"
        ],
        "removals": [],
        "impact": "moderate"
      },
      {
        "file": "extensions/pos-ui-extension/src/Tile.tsx",
        "summary": "",
        "additions": [
          "import React from 'react'",
          "import { Tile, reactExtension, useApi } from '@shopify/ui-extensions-react/point-of-sale'",
          "const TileComponent = () => {",
          "const api = useApi()",
          "return (",
          "<Tile",
          "title=\"Shopping Gives\"",
          "subtitle=\"Select cause\"",
          "onPress={() => {",
          "api.action.presentModal()",
          "}}",
          "enabled",
          "/>",
          ")",
          "}",
          "export default reactExtension('pos.home.tile.render', () => {",
          "return <TileComponent />",
          "})"
        ],
        "removals": [],
        "impact": "moderate"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "bc2a8f5",
    "original_message": "Extend the .gitignore to also ignore the Shopify extension builds.",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": ".gitignore",
        "summary": "",
        "additions": [
          "# Ignore directories for Shopify extensions",
          "/extensions/**/dist/*",
          "/.shopify"
        ],
        "removals": [
          "# All Shopify extensions",
          "extensions/*/dist"
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "8dfae87",
    "original_message": "Configure the shopify.app.toml to use the dev setup",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "shopify.app.toml",
        "summary": "",
        "additions": [
          "# Learn more about configuring your app at https://shopify.dev/docs/apps/tools/cli/configuration",
          "client_id = \"6b5ab0324c00689b74f72e2d430eb0e4\"",
          "name = \"[DEV] ShoppingGives\"",
          "handle = \"dev-change-commerce\"",
          "application_url = \"https://shopify-admin.api.dev.shoppinggives.com/redirect-dev.html\"",
          "embedded = false",
          "[build]",
          "dev_store_url = \"sg-test-checkout-extensions-staging-dev.myshopify.com\"",
          "include_config_on_deploy = true",
          "[access_scopes]",
          "# Learn more at https://shopify.dev/docs/apps/tools/cli/configuration#access_scopes",
          "scopes = \"read_assigned_fulfillment_orders,read_customers,read_locations,read_merchant_managed_fulfillment_orders,read_orders,read_products,read_script_tags,read_themes,read_third_party_fulfillment_orders,write_assigned_fulfillment_orders,write_inventory,write_merchant_managed_fulfillment_orders,write_orders,write_products,write_script_tags,write_themes,read_publications,write_publications\"",
          "[auth]",
          "redirect_urls = [",
          "\"https://shopify-admin.api.dev.shoppinggives.com/shopify/redirect\",",
          "\"https://shopify-admin.api.dev.shoppinggives.com/shopify/redirect%3Fredirect2=test\",",
          "\"https://shopify-admin.api.dev.shoppinggives.com/shopify/redirect?redirect=post-confirmation\",",
          "\"https://shopify-admin.api.dev.shoppinggives.com/shopify/redirect?redirect=manager-payment\",",
          "\"https://shopify-admin.api.dev.shoppinggives.com/shopify/redirect?redirect=manager\"",
          "]",
          "[webhooks]",
          "api_version = \"2024-07\"",
          "[webhooks.privacy_compliance]",
          "customer_deletion_url = \"https://wpmn7st0pc.execute-api.us-east-2.amazonaws.com/dev/shopify/customers/redact\"",
          "customer_data_request_url = \"https://wpmn7st0pc.execute-api.us-east-2.amazonaws.com/dev/shopify/customers/data_request\"",
          "shop_deletion_url = \"https://wpmn7st0pc.execute-api.us-east-2.amazonaws.com/dev/shopify/shop/redact\"",
          "[pos]",
          "embedded = true"
        ],
        "removals": [],
        "impact": "major"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "8bf169c",
    "original_message": "Ignore all dist folders for every extension.",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": ".gitignore",
        "summary": "",
        "additions": [
          "# All Shopify extensions",
          "extensions/*/dist",
          "coverage"
        ],
        "removals": [
          "# checkout extensions",
          "extensions/checkout-ui-extension/dist",
          "extensions/post-purchase-confirmation/dist",
          "coverage"
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.Products.API",
    "commit_hash": "9e06f42",
    "original_message": "edgecase fix for first page ignoring first product.",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "ChangeCommerce.Products.Common/QueryRepos/BulkVariantRepo.cs",
        "summary": "",
        "additions": [
          "int offset = ((page * pageLength) - 1 )> 0 ? (page * pageLength) - 1 : 0;",
          "cmd.Parameters.AddWithValue(\"page\", NpgsqlDbType.Integer, offset);"
        ],
        "removals": [
          "cmd.Parameters.AddWithValue(\"page\", NpgsqlDbType.Integer, page * pageLength);"
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.Utilities.JS",
    "commit_hash": "f8fcb730",
    "original_message": "Only check allow customer donation if campaign is active",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "public/addon-test.html",
        "summary": "",
        "additions": [
          "<script src=\"./sgloader.js?sid=2fd84a1c-f79e-4e04-a176-a1c3b196dff8&reload=false\"></script>"
        ],
        "removals": [
          "<!-- <script src=\"./sgloader.js?sid=fd2d9d5e-1fc4-4c04-96ed-aa93c28e3cbe&reload=false\"></script> -->"
        ],
        "impact": "minor"
      },
      {
        "file": "src/components/shopify/shopify.ts",
        "summary": "",
        "additions": [
          "const cookies = document.cookie;",
          "const cookieArray = cookies.split('; ');",
          "let hasCampaignsCookie;",
          "for (const cookie of cookieArray) {",
          "const [name, value] = cookie.split('=');",
          "if (name === 'hasActiveDonationCampaigns') {",
          "hasCampaignsCookie = decodeURIComponent(value);",
          "}",
          "}",
          "if(!hasCampaignsCookie){",
          "const customerDonationCampaigns = s.activeCampaigns.filter(campaign => campaign.id === 3 || campaign.id === 4);",
          "const hasActiveDonationCampaigns = customerDonationCampaigns.some(campaign => campaign.isActive)",
          "document.cookie =  `hasActiveDonationCampaigns=${hasActiveDonationCampaigns}; max-age=1800; path=/`",
          "if(hasActiveDonationCampaigns){",
          "if(!localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()",
          "}",
          "}"
        ],
        "removals": [
          "if(!localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "impact": "moderate"
      },
      {
        "file": "src/components/tracking-loader/tracking-loader.ts",
        "summary": "",
        "additions": [
          "const cookies = document.cookie;",
          "const cookieArray = cookies.split('; ');",
          "let hasCampaignsCookie;",
          "for (const cookie of cookieArray) {",
          "const [name, value] = cookie.split('=');",
          "if (name === 'hasActiveDonationCampaigns') {",
          "hasCampaignsCookie = decodeURIComponent(value);",
          "}",
          "}",
          "if(!hasCampaignsCookie){",
          "const customerDonationCampaigns = store.activeCampaigns.filter(campaign => campaign.id === 3 || campaign.id === 4);",
          "const hasActiveDonationCampaigns = customerDonationCampaigns.some(campaign => campaign.isActive)",
          "document.cookie =  `hasActiveDonationCampaigns=${hasActiveDonationCampaigns}; max-age=1800; path=/`",
          "if(hasActiveDonationCampaigns){",
          "if(!localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()",
          "}",
          "}"
        ],
        "removals": [
          "if(!localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "impact": "moderate"
      },
      {
        "file": "src/widgets/addon/general-addon-widget.ts",
        "summary": "",
        "additions": [
          "const customerDonationCampaigns = s.activeCampaigns.filter(campaign => campaign.id === 4);",
          "const hasActiveDonationCampaigns = customerDonationCampaigns.some(campaign => campaign.isActive)",
          "if(hasActiveDonationCampaigns && !localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "removals": [
          "if(!localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "impact": "minor"
      },
      {
        "file": "src/widgets/addon/shopify-addon-widget.ts",
        "summary": "",
        "additions": [
          "const customerDonationCampaigns = s.activeCampaigns.filter(campaign => campaign.id === 4);",
          "const hasActiveDonationCampaigns = customerDonationCampaigns.some(campaign => campaign.isActive)",
          "if(hasActiveDonationCampaigns && !localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "removals": [
          "if(!localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "impact": "minor"
      },
      {
        "file": "src/widgets/roundup/roundup-widget.ts",
        "summary": "",
        "additions": [
          "const customerDonationCampaigns = s.activeCampaigns.filter(campaign => campaign.id === 3);",
          "const hasActiveDonationCampaigns = customerDonationCampaigns.some(campaign => campaign.isActive)",
          "if(hasActiveDonationCampaigns && !localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "removals": [
          "if(!localStorage.getItem('allow-customer-donations')) trackingLoader.checkAllowCustomerDonations()"
        ],
        "impact": "minor"
      }
    ]
  },
  {
    "repository": "ChangeCommerce.ShopifyAppExt",
    "commit_hash": "3229308",
    "original_message": "scope changes",
    "detailed_description": [],
    "technical_changes": [
      {
        "file": "extensions/checkout-ui-extension/src/components/footer/footer.tsx",
        "summary": "",
        "additions": [
          ". For more details on this program, visit{' '}"
        ],
        "removals": [
          ".{' '}",
          "</TextBlock>",
          "<TextBlock appearance=\"subdued\" size=\"extraSmall\">",
          "For more details on this program, visit{' '}",
          "</TextBlock>",
          "<TextBlock appearance=\"subdued\" size=\"extraSmall\">"
        ],
        "impact": "moderate"
      },
      {
        "file": "shopify.app.prod.toml",
        "summary": "",
        "additions": [
          "scopes = \"read_assigned_fulfillment_orders,read_customers,read_locations,read_merchant_managed_fulfillment_orders,read_orders,read_products,read_script_tags,read_themes,read_third_party_fulfillment_orders,write_assigned_fulfillment_orders,write_inventory,write_orders,write_products,write_script_tags,write_themes,write_merchant_managed_fulfillment_orders,read_publications,write_publications\""
        ],
        "removals": [
          "scopes = \"read_assigned_fulfillment_orders,read_customers,read_locations,read_merchant_managed_fulfillment_orders,read_orders,read_products,read_script_tags,read_themes,read_third_party_fulfillment_orders,write_assigned_fulfillment_orders,write_inventory,write_orders,write_products,write_script_tags,write_themes,write_merchant_managed_fulfillment_orders\""
        ],
        "impact": "minor"
      },
      {
        "file": "shopify.app.staging.toml",
        "summary": "",
        "additions": [
          "scopes = \"read_assigned_fulfillment_orders,read_customers,read_locations,read_merchant_managed_fulfillment_orders,read_orders,read_products,read_script_tags,read_themes,read_third_party_fulfillment_orders,write_assigned_fulfillment_orders,write_inventory,write_merchant_managed_fulfillment_orders,write_orders,write_products,write_script_tags,write_themes,read_publications,write_publications\""
        ],
        "removals": [
          "scopes = \"read_assigned_fulfillment_orders,read_customers,read_locations,read_merchant_managed_fulfillment_orders,read_orders,read_products,read_script_tags,read_themes,read_third_party_fulfillment_orders,write_assigned_fulfillment_orders,write_inventory,write_merchant_managed_fulfillment_orders,write_orders,write_products,write_script_tags,write_themes\""
        ],
        "impact": "minor"
      }
    ]
  }
]